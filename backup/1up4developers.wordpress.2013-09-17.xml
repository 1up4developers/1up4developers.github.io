<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.1" created="2013-09-17 17:57" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.1/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.1/"
>

<channel>
	<title>1up4developers</title>
	<link>http://1up4dev.org</link>
	<description>Nadando contra o Waterfall. tail -f /mind/realworld &#62;&#62; /blog</description>
	<pubDate>Tue, 17 Sep 2013 17:57:13 +0000</pubDate>
	<language>en</language>
	<wp:wxr_version>1.1</wp:wxr_version>
	<wp:base_site_url>http://1up4dev.org</wp:base_site_url>
	<wp:base_blog_url>http://1up4dev.org</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>miguel.baldi@1up4dev.org</wp:author_email><wp:author_display_name><![CDATA[Equipe 1up4dev]]></wp:author_display_name><wp:author_first_name><![CDATA[Equipe 1up4dev]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>2</wp:author_id><wp:author_login>rodrigopanachi</wp:author_login><wp:author_email>rodrigopanachi@gmail.com</wp:author_email><wp:author_display_name><![CDATA[Rodrigo Panachi]]></wp:author_display_name><wp:author_first_name><![CDATA[Rodrigo]]></wp:author_first_name><wp:author_last_name><![CDATA[Panachi]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>3</wp:author_id><wp:author_login>rogerbarreto</wp:author_login><wp:author_email>roger.leite@1up4dev.org</wp:author_email><wp:author_display_name><![CDATA[Roger Leite]]></wp:author_display_name><wp:author_first_name><![CDATA[Roger]]></wp:author_first_name><wp:author_last_name><![CDATA[Leite]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>4</wp:author_id><wp:author_login>hbulhoes</wp:author_login><wp:author_email>humberto.bulhoes@gmail.com</wp:author_email><wp:author_display_name><![CDATA[Humberto]]></wp:author_display_name><wp:author_first_name><![CDATA[Humberto]]></wp:author_first_name><wp:author_last_name><![CDATA[Bulhões]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>5</wp:author_id><wp:author_login>miguelhorlle</wp:author_login><wp:author_email>miguel.baldi@1up4dev.org</wp:author_email><wp:author_display_name><![CDATA[miguelbaldi]]></wp:author_display_name><wp:author_first_name><![CDATA[Miguel]]></wp:author_first_name><wp:author_last_name><![CDATA[Aranha Baldi Hörlle]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>6</wp:author_id><wp:author_login>andrefarina</wp:author_login><wp:author_email>andref5@gmail.com</wp:author_email><wp:author_display_name><![CDATA[andrefarina]]></wp:author_display_name><wp:author_first_name><![CDATA[André]]></wp:author_first_name><wp:author_last_name><![CDATA[Farina]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>7</wp:author_id><wp:author_login>pbalduino</wp:author_login><wp:author_email>pbalduino+1up4dev@gmail.com</wp:author_email><wp:author_display_name><![CDATA[Plínio Balduino]]></wp:author_display_name><wp:author_first_name><![CDATA[Plínio]]></wp:author_first_name><wp:author_last_name><![CDATA[Balduino]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>8</wp:author_id><wp:author_login>rramos</wp:author_login><wp:author_email>habutre@gmail.com</wp:author_email><wp:author_display_name><![CDATA[habutre]]></wp:author_display_name><wp:author_first_name><![CDATA[Rogério]]></wp:author_first_name><wp:author_last_name><![CDATA[Ramos]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>9</wp:author_id><wp:author_login>tonyfabeen</wp:author_login><wp:author_email>tony.fabeen@gmail.com</wp:author_email><wp:author_display_name><![CDATA[Tony Fabeen]]></wp:author_display_name><wp:author_first_name><![CDATA[Tony]]></wp:author_first_name><wp:author_last_name><![CDATA[Fabeen]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>27</wp:term_id><wp:category_nicename>eventos</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[eventos]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>hello</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[hello]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>128</wp:term_id><wp:category_nicename>linux</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[linux]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>90</wp:term_id><wp:category_nicename>lisp</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[lisp]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>42</wp:term_id><wp:category_nicename>marketing</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[marketing]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>57</wp:term_id><wp:category_nicename>novidades-da-semana</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[novidades da semana]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>10</wp:term_id><wp:category_nicename>processos</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[processos]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>56</wp:term_id><wp:category_nicename>projetos</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[projetos]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>34</wp:term_id><wp:category_nicename>questionamento</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[questionamento]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>47</wp:term_id><wp:category_nicename>quick-tips</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[quick tips]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>28</wp:term_id><wp:category_nicename>rails</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[rails]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>35</wp:term_id><wp:category_nicename>real-world</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[real world]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>11</wp:term_id><wp:category_nicename>resenhas</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[resenhas]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>29</wp:term_id><wp:category_nicename>ruby</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[ruby]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>86</wp:term_id><wp:category_nicename>sitefique-me</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[sitefique.me]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>24</wp:term_id><wp:category_nicename>tutorial</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[tutorial]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>31</wp:term_id><wp:category_nicename>waterfall</wp:category_nicename><wp:category_parent>processos</wp:category_parent><wp:cat_name><![CDATA[waterfall]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>12</wp:term_id><wp:category_nicename>web</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[web]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>32</wp:term_id><wp:category_nicename>cascata</wp:category_nicename><wp:category_parent>processos</wp:category_parent><wp:cat_name><![CDATA[cascata]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>44</wp:term_id><wp:category_nicename>evento</wp:category_nicename><wp:category_parent>marketing</wp:category_parent><wp:cat_name><![CDATA[evento]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>75</wp:term_id><wp:tag_slug>active-record</wp:tag_slug><wp:tag_name><![CDATA[active record]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>46</wp:term_id><wp:tag_slug>agilidade</wp:tag_slug><wp:tag_name><![CDATA[agilidade]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>134</wp:term_id><wp:tag_slug>april-1st</wp:tag_slug><wp:tag_name><![CDATA[april 1st]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>3</wp:term_id><wp:tag_slug>banco-de-dados</wp:tag_slug><wp:tag_name><![CDATA[banco de dados]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>63</wp:term_id><wp:tag_slug>bdd</wp:tag_slug><wp:tag_name><![CDATA[bdd]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>54</wp:term_id><wp:tag_slug>business-bingo</wp:tag_slug><wp:tag_name><![CDATA[business bingo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>55</wp:term_id><wp:tag_slug>buzzword-bingo</wp:tag_slug><wp:tag_name><![CDATA[buzzword bingo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>14</wp:term_id><wp:tag_slug>campanhas</wp:tag_slug><wp:tag_name><![CDATA[campanhas]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>32</wp:term_id><wp:tag_slug>cascata</wp:tag_slug><wp:tag_name><![CDATA[cascata]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>143</wp:term_id><wp:tag_slug>cgroups</wp:tag_slug><wp:tag_name><![CDATA[cgroups]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>142</wp:term_id><wp:tag_slug>clojure</wp:tag_slug><wp:tag_name><![CDATA[clojure]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>88</wp:term_id><wp:tag_slug>coffee-script</wp:tag_slug><wp:tag_name><![CDATA[coffee script]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>87</wp:term_id><wp:tag_slug>coffeescript</wp:tag_slug><wp:tag_name><![CDATA[coffeescript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>37</wp:term_id><wp:tag_slug>corporativismo</wp:tag_slug><wp:tag_name><![CDATA[corporativismo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>72</wp:term_id><wp:tag_slug>cucumber</wp:tag_slug><wp:tag_name><![CDATA[cucumber]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>140</wp:term_id><wp:tag_slug>curl</wp:tag_slug><wp:tag_name><![CDATA[curl]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>130</wp:term_id><wp:tag_slug>curso</wp:tag_slug><wp:tag_name><![CDATA[curso]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>52</wp:term_id><wp:tag_slug>ddd</wp:tag_slug><wp:tag_name><![CDATA[ddd]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>136</wp:term_id><wp:tag_slug>desenvolvimento</wp:tag_slug><wp:tag_name><![CDATA[desenvolvimento]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>103</wp:term_id><wp:tag_slug>desenvolvimento-de-site</wp:tag_slug><wp:tag_name><![CDATA[desenvolvimento de site]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>16</wp:term_id><wp:tag_slug>devaneios</wp:tag_slug><wp:tag_name><![CDATA[devaneios]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>146</wp:term_id><wp:tag_slug>devops</wp:tag_slug><wp:tag_name><![CDATA[devops]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>41</wp:term_id><wp:tag_slug>dicas</wp:tag_slug><wp:tag_name><![CDATA[dicas]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>85</wp:term_id><wp:tag_slug>documentacao</wp:tag_slug><wp:tag_name><![CDATA[documentação]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>106</wp:term_id><wp:tag_slug>domain</wp:tag_slug><wp:tag_name><![CDATA[domain]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>80</wp:term_id><wp:tag_slug>escalabilidade</wp:tag_slug><wp:tag_name><![CDATA[escalabilidade]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>133</wp:term_id><wp:tag_slug>escrevendo</wp:tag_slug><wp:tag_name><![CDATA[escrevendo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>135</wp:term_id><wp:tag_slug>eu-dei-autografo-pela-primeira-vez-na-minha-vida-e-eu-achei-estranho</wp:tag_slug><wp:tag_name><![CDATA[eu dei autógrafo pela primeira vez na minha vida e eu achei estranho]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>27</wp:term_id><wp:tag_slug>eventos</wp:tag_slug><wp:tag_name><![CDATA[eventos]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>100</wp:term_id><wp:tag_slug>experiencia</wp:tag_slug><wp:tag_name><![CDATA[experiencia]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>77</wp:term_id><wp:tag_slug>factory-girl</wp:tag_slug><wp:tag_name><![CDATA[factory girl]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>38</wp:term_id><wp:tag_slug>faq</wp:tag_slug><wp:tag_name><![CDATA[faq]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>122</wp:term_id><wp:tag_slug>faraday</wp:tag_slug><wp:tag_name><![CDATA[faraday]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>26</wp:term_id><wp:tag_slug>gedit</wp:tag_slug><wp:tag_name><![CDATA[gedit]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>64</wp:term_id><wp:tag_slug>gem</wp:tag_slug><wp:tag_name><![CDATA[gem]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>69</wp:term_id><wp:tag_slug>gems</wp:tag_slug><wp:tag_name><![CDATA[gems]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>71</wp:term_id><wp:tag_slug>gems-export</wp:tag_slug><wp:tag_name><![CDATA[gems export]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>70</wp:term_id><wp:tag_slug>gems-import</wp:tag_slug><wp:tag_name><![CDATA[gems import]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>65</wp:term_id><wp:tag_slug>github</wp:tag_slug><wp:tag_name><![CDATA[github]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>137</wp:term_id><wp:tag_slug>http</wp:tag_slug><wp:tag_name><![CDATA[http]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>121</wp:term_id><wp:tag_slug>http-client</wp:tag_slug><wp:tag_name><![CDATA[http client]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>119</wp:term_id><wp:tag_slug>http-monkey</wp:tag_slug><wp:tag_name><![CDATA[HTTP Monkey]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>109</wp:term_id><wp:tag_slug>http-server</wp:tag_slug><wp:tag_name><![CDATA[http server]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>120</wp:term_id><wp:tag_slug>http_monkey</wp:tag_slug><wp:tag_name><![CDATA[http_monkey]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>91</wp:term_id><wp:tag_slug>iluminacao</wp:tag_slug><wp:tag_name><![CDATA[iluminação]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>30</wp:term_id><wp:tag_slug>inauguracao</wp:tag_slug><wp:tag_name><![CDATA[inauguração]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>111</wp:term_id><wp:tag_slug>integration</wp:tag_slug><wp:tag_name><![CDATA[integration]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>5</wp:term_id><wp:tag_slug>interfaces</wp:tag_slug><wp:tag_name><![CDATA[interfaces]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>50</wp:term_id><wp:tag_slug>java</wp:tag_slug><wp:tag_name><![CDATA[java]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>6</wp:term_id><wp:tag_slug>javascript</wp:tag_slug><wp:tag_name><![CDATA[javascript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>79</wp:term_id><wp:tag_slug>jquery</wp:tag_slug><wp:tag_name><![CDATA[jquery]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>59</wp:term_id><wp:tag_slug>jquey</wp:tag_slug><wp:tag_name><![CDATA[jquey]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>101</wp:term_id><wp:tag_slug>lancamento</wp:tag_slug><wp:tag_name><![CDATA[lançamento]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>73</wp:term_id><wp:tag_slug>linha-de-comando</wp:tag_slug><wp:tag_name><![CDATA[linha de comando]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>128</wp:term_id><wp:tag_slug>linux</wp:tag_slug><wp:tag_name><![CDATA[linux]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>90</wp:term_id><wp:tag_slug>lisp</wp:tag_slug><wp:tag_name><![CDATA[lisp]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>129</wp:term_id><wp:tag_slug>livro</wp:tag_slug><wp:tag_name><![CDATA[livro]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>67</wp:term_id><wp:tag_slug>load_path</wp:tag_slug><wp:tag_name><![CDATA[load_path]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>144</wp:term_id><wp:tag_slug>lxc</wp:tag_slug><wp:tag_name><![CDATA[lxc]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>36</wp:term_id><wp:tag_slug>metodologia</wp:tag_slug><wp:tag_name><![CDATA[metodologia]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>132</wp:term_id><wp:tag_slug>mexa-se</wp:tag_slug><wp:tag_name><![CDATA[mexa-se]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>40</wp:term_id><wp:tag_slug>microsoft</wp:tag_slug><wp:tag_name><![CDATA[microsoft]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>115</wp:term_id><wp:tag_slug>minion_server</wp:tag_slug><wp:tag_name><![CDATA[minion_server]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>48</wp:term_id><wp:tag_slug>mocks</wp:tag_slug><wp:tag_name><![CDATA[mocks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>108</wp:term_id><wp:tag_slug>mysql</wp:tag_slug><wp:tag_name><![CDATA[mysql]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>104</wp:term_id><wp:tag_slug>nginx</wp:tag_slug><wp:tag_name><![CDATA[nginx]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>117</wp:term_id><wp:tag_slug>novidades</wp:tag_slug><wp:tag_name><![CDATA[novidades]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>57</wp:term_id><wp:tag_slug>novidades-da-semana</wp:tag_slug><wp:tag_name><![CDATA[novidades da semana]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>8</wp:term_id><wp:tag_slug>orm</wp:tag_slug><wp:tag_name><![CDATA[orm]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>145</wp:term_id><wp:tag_slug>paas</wp:tag_slug><wp:tag_name><![CDATA[paas]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>126</wp:term_id><wp:tag_slug>pair-programming</wp:tag_slug><wp:tag_name><![CDATA[pair programming]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>131</wp:term_id><wp:tag_slug>palestra</wp:tag_slug><wp:tag_name><![CDATA[palestra]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>20</wp:term_id><wp:tag_slug>paranoia</wp:tag_slug><wp:tag_name><![CDATA[paranoia]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>33</wp:term_id><wp:tag_slug>passando-raiva</wp:tag_slug><wp:tag_name><![CDATA[passando raiva]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>92</wp:term_id><wp:tag_slug>pensamento</wp:tag_slug><wp:tag_name><![CDATA[pensamento]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>93</wp:term_id><wp:tag_slug>plaft</wp:tag_slug><wp:tag_name><![CDATA[plaft!]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>99</wp:term_id><wp:tag_slug>playstation-3</wp:tag_slug><wp:tag_name><![CDATA[playstation 3]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>68</wp:term_id><wp:tag_slug>plugin</wp:tag_slug><wp:tag_name><![CDATA[plugin]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>107</wp:term_id><wp:tag_slug>postgresql</wp:tag_slug><wp:tag_name><![CDATA[postgresql]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>9</wp:term_id><wp:tag_slug>pragmatic-waterfall</wp:tag_slug><wp:tag_name><![CDATA[pragmatic waterfall]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>51</wp:term_id><wp:tag_slug>pragmatismo</wp:tag_slug><wp:tag_name><![CDATA[pragmatismo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>10</wp:term_id><wp:tag_slug>processos</wp:tag_slug><wp:tag_name><![CDATA[processos]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>124</wp:term_id><wp:tag_slug>programacao-funcional</wp:tag_slug><wp:tag_name><![CDATA[programação funcional]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>98</wp:term_id><wp:tag_slug>ps3</wp:tag_slug><wp:tag_name><![CDATA[ps3]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>47</wp:term_id><wp:tag_slug>quick-tips</wp:tag_slug><wp:tag_name><![CDATA[quick tips]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>28</wp:term_id><wp:tag_slug>rails</wp:tag_slug><wp:tag_name><![CDATA[rails]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>116</wp:term_id><wp:tag_slug>rails-4</wp:tag_slug><wp:tag_name><![CDATA[rails 4]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>84</wp:term_id><wp:tag_slug>rails-guides</wp:tag_slug><wp:tag_name><![CDATA[rails guides]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>45</wp:term_id><wp:tag_slug>railssummit</wp:tag_slug><wp:tag_name><![CDATA[railssummit]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>74</wp:term_id><wp:tag_slug>rake</wp:tag_slug><wp:tag_name><![CDATA[rake]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>35</wp:term_id><wp:tag_slug>real-world</wp:tag_slug><wp:tag_name><![CDATA[real world]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>97</wp:term_id><wp:tag_slug>rede-social-troca-de-jogos</wp:tag_slug><wp:tag_name><![CDATA[rede social. troca de jogos]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>105</wp:term_id><wp:tag_slug>redirect</wp:tag_slug><wp:tag_name><![CDATA[redirect]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>82</wp:term_id><wp:tag_slug>resenha</wp:tag_slug><wp:tag_name><![CDATA[resenha]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>83</wp:term_id><wp:tag_slug>resmungo</wp:tag_slug><wp:tag_name><![CDATA[resmungo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>123</wp:term_id><wp:tag_slug>restfulie</wp:tag_slug><wp:tag_name><![CDATA[restfulie]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>102</wp:term_id><wp:tag_slug>rolo-games</wp:tag_slug><wp:tag_name><![CDATA[Rolo Games]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>96</wp:term_id><wp:tag_slug>rologames</wp:tag_slug><wp:tag_name><![CDATA[rologames]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>61</wp:term_id><wp:tag_slug>rspec</wp:tag_slug><wp:tag_name><![CDATA[rspec]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>29</wp:term_id><wp:tag_slug>ruby</wp:tag_slug><wp:tag_name><![CDATA[ruby]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>58</wp:term_id><wp:tag_slug>ruby-on-rails</wp:tag_slug><wp:tag_name><![CDATA[ruby on rails]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>114</wp:term_id><wp:tag_slug>rubygem</wp:tag_slug><wp:tag_name><![CDATA[rubygem]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>66</wp:term_id><wp:tag_slug>rubygems</wp:tag_slug><wp:tag_name><![CDATA[rubygems]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>127</wp:term_id><wp:tag_slug>screen</wp:tag_slug><wp:tag_name><![CDATA[screen]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>60</wp:term_id><wp:tag_slug>scrum</wp:tag_slug><wp:tag_name><![CDATA[scrum]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>139</wp:term_id><wp:tag_slug>shell-script</wp:tag_slug><wp:tag_name><![CDATA[shell script]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>78</wp:term_id><wp:tag_slug>shellscript</wp:tag_slug><wp:tag_name><![CDATA[shellscript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>81</wp:term_id><wp:tag_slug>simplicidade</wp:tag_slug><wp:tag_name><![CDATA[simplicidade]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>39</wp:term_id><wp:tag_slug>spam</wp:tag_slug><wp:tag_name><![CDATA[spam]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>138</wp:term_id><wp:tag_slug>spec</wp:tag_slug><wp:tag_name><![CDATA[spec]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>62</wp:term_id><wp:tag_slug>tes</wp:tag_slug><wp:tag_name><![CDATA[tes]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>112</wp:term_id><wp:tag_slug>test</wp:tag_slug><wp:tag_name><![CDATA[test]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>113</wp:term_id><wp:tag_slug>test-integration</wp:tag_slug><wp:tag_name><![CDATA[test integration]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>76</wp:term_id><wp:tag_slug>testes-funcionais</wp:tag_slug><wp:tag_name><![CDATA[testes funcionais]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>23</wp:term_id><wp:tag_slug>testes-unitarios</wp:tag_slug><wp:tag_name><![CDATA[testes unitários]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>110</wp:term_id><wp:tag_slug>tiny-http-server</wp:tag_slug><wp:tag_name><![CDATA[tiny http server]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>24</wp:term_id><wp:tag_slug>tutorial</wp:tag_slug><wp:tag_name><![CDATA[tutorial]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>118</wp:term_id><wp:tag_slug>uml</wp:tag_slug><wp:tag_name><![CDATA[uml]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>141</wp:term_id><wp:tag_slug>unit-test</wp:tag_slug><wp:tag_name><![CDATA[unit test]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>94</wp:term_id><wp:tag_slug>vagrant</wp:tag_slug><wp:tag_name><![CDATA[vagrant]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>125</wp:term_id><wp:tag_slug>vim</wp:tag_slug><wp:tag_name><![CDATA[vim]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>95</wp:term_id><wp:tag_slug>virtualizacao</wp:tag_slug><wp:tag_name><![CDATA[virtualização]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>31</wp:term_id><wp:tag_slug>waterfall</wp:tag_slug><wp:tag_name><![CDATA[waterfall]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>89</wp:term_id><wp:tag_slug>we-dont-need-another-hero</wp:tag_slug><wp:tag_name><![CDATA[we don't need another hero]]></wp:tag_name></wp:tag>

	<generator>http://wordpress.org/?v=</generator>

	<item>
		<title>1up-banner2.gif</title>
		<link>http://1up4dev.org/?attachment_id=24</link>
		<pubDate>Mon, 02 Jun 2008 21:50:47 +0000</pubDate>
		<dc:creator>miguelhorlle</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/06/1up-banner2.gif</guid>
		<description></description>
		<content:encoded><![CDATA[http://1up4dev.org/wp-content/uploads/2008/06/1up-banner2.gif]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>24</wp:post_id>
		<wp:post_date>2008-06-02 21:50:47</wp:post_date>
		<wp:post_date_gmt>2008-06-02 21:50:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1up-banner2gif</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/06/1up-banner2.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/06/1up-banner2.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:760;s:6:"height";i:200;s:14:"hwstring_small";s:23:"height='33' width='128'";s:4:"file";s:69:"/home/w1up4dev/public_html/wp-content/uploads/2008/06/1up-banner2.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"1up-banner2-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:22:"1up-banner2-300x78.gif";s:5:"width";i:300;s:6:"height";i:78;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:760;s:6:"height";i:200;s:14:"hwstring_small";s:23:"height='33' width='128'";s:4:"file";s:86:"/home/wpcom/public_html/wp-content/blogs.dir/72e/3881037/files/2008/06/1up-banner2.gif";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_00b3a353266fde6d01f661df1d433369</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1up-banner21.gif</title>
		<link>http://1up4dev.org/?attachment_id=25</link>
		<pubDate>Mon, 02 Jun 2008 21:51:13 +0000</pubDate>
		<dc:creator>miguelhorlle</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/06/1up-banner21.gif</guid>
		<description></description>
		<content:encoded><![CDATA[http://1up4dev.org/wp-content/uploads/2008/06/1up-banner21.gif]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>25</wp:post_id>
		<wp:post_date>2008-06-02 21:51:13</wp:post_date>
		<wp:post_date_gmt>2008-06-02 21:51:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1up-banner21gif</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/06/1up-banner21.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/06/1up-banner21.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:760;s:6:"height";i:200;s:14:"hwstring_small";s:23:"height='33' width='128'";s:4:"file";s:70:"/home/w1up4dev/public_html/wp-content/uploads/2008/06/1up-banner21.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"1up-banner21-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:23:"1up-banner21-300x78.gif";s:5:"width";i:300;s:6:"height";i:78;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:760;s:6:"height";i:200;s:14:"hwstring_small";s:23:"height='33' width='128'";s:4:"file";s:87:"/home/wpcom/public_html/wp-content/blogs.dir/72e/3881037/files/2008/06/1up-banner21.gif";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_cdbac9b353aa3590b16abcd340028426</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1up-banner22.gif</title>
		<link>http://1up4dev.org/?attachment_id=26</link>
		<pubDate>Mon, 02 Jun 2008 21:56:52 +0000</pubDate>
		<dc:creator>miguelhorlle</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/06/1up-banner22.gif</guid>
		<description></description>
		<content:encoded><![CDATA[http://1up4dev.org/wp-content/uploads/2008/06/1up-banner221.gif]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date>2008-06-02 21:56:52</wp:post_date>
		<wp:post_date_gmt>2008-06-02 21:56:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1up-banner22gif</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/06/1up-banner22.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/06/1up-banner22.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:760;s:6:"height";i:200;s:14:"hwstring_small";s:23:"height='33' width='128'";s:4:"file";s:70:"/home/w1up4dev/public_html/wp-content/uploads/2008/06/1up-banner22.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"1up-banner22-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:23:"1up-banner22-300x78.gif";s:5:"width";i:300;s:6:"height";i:78;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:760;s:6:"height";i:200;s:14:"hwstring_small";s:23:"height='33' width='128'";s:4:"file";s:87:"/home/wpcom/public_html/wp-content/blogs.dir/72e/3881037/files/2008/06/1up-banner22.gif";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_afb1267671f3105f66e3d470cea4ade5</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1up-banner22.gif</title>
		<link>http://1up4dev.org/?attachment_id=27</link>
		<pubDate>Mon, 02 Jun 2008 21:57:11 +0000</pubDate>
		<dc:creator>miguelhorlle</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/06/1up-banner221.gif</guid>
		<description></description>
		<content:encoded><![CDATA[http://1up4dev.org/wp-content/uploads/2008/06/1up-banner221.gif]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2008-06-02 21:57:11</wp:post_date>
		<wp:post_date_gmt>2008-06-02 21:57:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1up-banner22gif-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/06/1up-banner221.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/06/1up-banner221.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:760;s:6:"height";i:200;s:14:"hwstring_small";s:23:"height='33' width='128'";s:4:"file";s:71:"/home/w1up4dev/public_html/wp-content/uploads/2008/06/1up-banner221.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"1up-banner221-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:24:"1up-banner221-300x78.gif";s:5:"width";i:300;s:6:"height";i:78;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:760;s:6:"height";i:200;s:14:"hwstring_small";s:23:"height='33' width='128'";s:4:"file";s:87:"/home/wpcom/public_html/wp-content/blogs.dir/72e/3881037/files/2008/06/1up-banner22.gif";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_afb1267671f3105f66e3d470cea4ade5</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1up-banner2-dark.gif</title>
		<link>http://1up4dev.org/?attachment_id=28</link>
		<pubDate>Mon, 02 Jun 2008 22:47:36 +0000</pubDate>
		<dc:creator>miguelhorlle</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/06/1up-banner2-dark.gif</guid>
		<description></description>
		<content:encoded><![CDATA[http://1up4dev.org/wp-content/uploads/2008/06/1up-banner2-dark.gif]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>28</wp:post_id>
		<wp:post_date>2008-06-02 22:47:36</wp:post_date>
		<wp:post_date_gmt>2008-06-02 22:47:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1up-banner2-darkgif</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/06/1up-banner2-dark.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/06/1up-banner2-dark.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:730;s:6:"height";i:180;s:14:"hwstring_small";s:23:"height='31' width='128'";s:4:"file";s:74:"/home/w1up4dev/public_html/wp-content/uploads/2008/06/1up-banner2-dark.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"1up-banner2-dark-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:27:"1up-banner2-dark-300x73.gif";s:5:"width";i:300;s:6:"height";i:73;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:730;s:6:"height";i:180;s:14:"hwstring_small";s:23:"height='31' width='128'";s:4:"file";s:91:"/home/wpcom/public_html/wp-content/blogs.dir/72e/3881037/files/2008/06/1up-banner2-dark.gif";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_3dcdfeb6fcc89d9c71d8edfd825ea01a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1up-banner2-dark1.gif</title>
		<link>http://1up4dev.org/?attachment_id=29</link>
		<pubDate>Mon, 02 Jun 2008 22:47:59 +0000</pubDate>
		<dc:creator>miguelhorlle</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/06/1up-banner2-dark1.gif</guid>
		<description></description>
		<content:encoded><![CDATA[http://1up4dev.org/wp-content/uploads/2008/06/1up-banner2-dark1.gif]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date>2008-06-02 22:47:59</wp:post_date>
		<wp:post_date_gmt>2008-06-02 22:47:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1up-banner2-dark1gif</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/06/1up-banner2-dark1.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/06/1up-banner2-dark1.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:730;s:6:"height";i:180;s:14:"hwstring_small";s:23:"height='31' width='128'";s:4:"file";s:75:"/home/w1up4dev/public_html/wp-content/uploads/2008/06/1up-banner2-dark1.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:29:"1up-banner2-dark1-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:28:"1up-banner2-dark1-300x73.gif";s:5:"width";i:300;s:6:"height";i:73;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:730;s:6:"height";i:180;s:14:"hwstring_small";s:23:"height='31' width='128'";s:4:"file";s:92:"/home/wpcom/public_html/wp-content/blogs.dir/72e/3881037/files/2008/06/1up-banner2-dark1.gif";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_9ed11153a3c1551cfecc4620b5cd18cb</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Muro das Lamentações</title>
		<link>http://1up4dev.org/2008/06/tpw-dicas-para-o-desenvolvedor/14-03-06_sharon/</link>
		<pubDate>Tue, 03 Jun 2008 04:17:12 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/06/14-03-06_sharon.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date>2008-06-03 01:17:12</wp:post_date>
		<wp:post_date_gmt>2008-06-03 04:17:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>14-03-06_sharon</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>35</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/06/14-03-06_sharon.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/06/14-03-06_sharon.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:500;s:6:"height";i:304;s:14:"hwstring_small";s:23:"height='77' width='128'";s:4:"file";s:73:"/home/w1up4dev/public_html/wp-content/uploads/2008/06/14-03-06_sharon.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:27:"14-03-06_sharon-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:27:"14-03-06_sharon-300x182.jpg";s:5:"width";i:300;s:6:"height";i:182;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:500;s:6:"height";i:304;s:14:"hwstring_small";s:23:"height='77' width='128'";s:4:"file";s:90:"/home/wpcom/public_html/wp-content/blogs.dir/72e/3881037/files/2008/06/14-03-06_sharon.jpg";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Waterfall Model</title>
		<link>http://1up4dev.org/2008/06/tpw-dicas-para-o-desenvolvedor/waterfall_model/</link>
		<pubDate>Tue, 03 Jun 2008 04:17:16 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/06/waterfall_model.png</guid>
		<description></description>
		<content:encoded><![CDATA[Clássico modelo de desenvolvimento que se baseia em premissas falidas.]]></content:encoded>
		<excerpt:encoded><![CDATA[Waterfall Model]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date>2008-06-03 01:17:16</wp:post_date>
		<wp:post_date_gmt>2008-06-03 04:17:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>waterfall_model</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>35</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/06/waterfall_model.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/06/waterfall_model.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:515;s:6:"height";i:396;s:14:"hwstring_small";s:23:"height='96' width='124'";s:4:"file";s:73:"/home/w1up4dev/public_html/wp-content/uploads/2008/06/waterfall_model.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:27:"waterfall_model-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:27:"waterfall_model-300x230.png";s:5:"width";i:300;s:6:"height";i:230;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:515;s:6:"height";i:396;s:14:"hwstring_small";s:23:"height='96' width='124'";s:4:"file";s:90:"/home/wpcom/public_html/wp-content/blogs.dir/72e/3881037/files/2008/06/waterfall_model.png";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1up-banner3-dark.gif</title>
		<link>http://1up4dev.org/?attachment_id=33</link>
		<pubDate>Wed, 04 Jun 2008 11:39:36 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/06/1up-banner3-dark.gif</guid>
		<description></description>
		<content:encoded><![CDATA[http://1up4dev.org/wp-content/uploads/2008/06/1up-banner3-dark.gif]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date>2008-06-04 08:39:36</wp:post_date>
		<wp:post_date_gmt>2008-06-04 11:39:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1up-banner3-darkgif</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/06/1up-banner3-dark.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/06/1up-banner3-dark.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:730;s:6:"height";i:180;s:14:"hwstring_small";s:23:"height='31' width='128'";s:4:"file";s:74:"/home/w1up4dev/public_html/wp-content/uploads/2008/06/1up-banner3-dark.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"1up-banner3-dark-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:27:"1up-banner3-dark-300x73.gif";s:5:"width";i:300;s:6:"height";i:73;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:730;s:6:"height";i:180;s:14:"hwstring_small";s:23:"height='31' width='128'";s:4:"file";s:91:"/home/wpcom/public_html/wp-content/blogs.dir/72e/3881037/files/2008/06/1up-banner3-dark.gif";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f06cf34b1b6d3b3235fb87217d1d4750</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1up-banner3-dark1.gif</title>
		<link>http://1up4dev.org/?attachment_id=34</link>
		<pubDate>Wed, 04 Jun 2008 11:43:34 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/06/1up-banner3-dark1.gif</guid>
		<description></description>
		<content:encoded><![CDATA[http://1up4dev.org/wp-content/uploads/2008/06/1up-banner3-dark1.gif]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date>2008-06-04 08:43:34</wp:post_date>
		<wp:post_date_gmt>2008-06-04 11:43:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1up-banner3-dark1gif</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/06/1up-banner3-dark1.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/06/1up-banner3-dark1.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:730;s:6:"height";i:180;s:14:"hwstring_small";s:23:"height='31' width='128'";s:4:"file";s:75:"/home/w1up4dev/public_html/wp-content/uploads/2008/06/1up-banner3-dark1.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:29:"1up-banner3-dark1-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:28:"1up-banner3-dark1-300x73.gif";s:5:"width";i:300;s:6:"height";i:73;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:730;s:6:"height";i:180;s:14:"hwstring_small";s:23:"height='31' width='128'";s:4:"file";s:92:"/home/wpcom/public_html/wp-content/blogs.dir/72e/3881037/files/2008/06/1up-banner3-dark1.gif";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_830d85bb6fcf2b55d96052bd64e82ad6</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>pragmatic_unit_testing</title>
		<link>http://1up4dev.org/2008/06/resenha-do-livro-pragmatic-unit-testing/pragmatic_unit_testting/</link>
		<pubDate>Thu, 26 Jun 2008 19:19:00 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/06/pragmatic_unit_testting.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[Pragmatic Unit Testing
In Java with JUnit]]></content:encoded>
		<excerpt:encoded><![CDATA[Pragmatic Unit Testing]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date>2008-06-26 16:19:00</wp:post_date>
		<wp:post_date_gmt>2008-06-26 19:19:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pragmatic_unit_testting</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>43</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/06/pragmatic_unit_testting.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/06/pragmatic_unit_testting.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:240;s:6:"height";i:240;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:81:"/home/w1up4dev/public_html/wp-content/uploads/2008/06/pragmatic_unit_testting.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:35:"pragmatic_unit_testting-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:240;s:6:"height";i:240;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/72e/3881037/files/2008/06/pragmatic_unit_testting.jpg";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SaveTheDevelopers</title>
		<link>http://1up4dev.org/2008/07/pensando-na-gente-desenvolvedores/logo/</link>
		<pubDate>Sun, 06 Jul 2008 19:57:29 +0000</pubDate>
		<dc:creator>miguelhorlle</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/07/logo.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date>2008-07-06 16:57:29</wp:post_date>
		<wp:post_date_gmt>2008-07-06 19:57:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>logo</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>45</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/07/logo.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/07/logo.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:487;s:6:"height";i:100;s:14:"hwstring_small";s:23:"height='26' width='128'";s:4:"file";s:62:"/home/w1up4dev/public_html/wp-content/uploads/2008/07/logo.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:16:"logo-150x100.gif";s:5:"width";i:150;s:6:"height";i:100;}s:6:"medium";a:3:{s:4:"file";s:15:"logo-300x61.gif";s:5:"width";i:300;s:6:"height";i:61;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:487;s:6:"height";i:100;s:14:"hwstring_small";s:23:"height='26' width='128'";s:4:"file";s:79:"/home/wpcom/public_html/wp-content/blogs.dir/72e/3881037/files/2008/07/logo.gif";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>install-gedit-rails</title>
		<link>http://1up4dev.org/2008/08/gedit-para-ror-de-modo-facil/install-gedit-rails/</link>
		<pubDate>Sun, 03 Aug 2008 15:34:06 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/08/install-gedit-rails.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[install-gedit-rails]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date>2008-08-03 12:34:06</wp:post_date>
		<wp:post_date_gmt>2008-08-03 15:34:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>install-gedit-rails</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>55</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/08/install-gedit-rails.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/08/install-gedit-rails.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:993;s:6:"height";i:435;s:14:"hwstring_small";s:23:"height='56' width='128'";s:4:"file";s:77:"/home/w1up4dev/public_html/wp-content/uploads/2008/08/install-gedit-rails.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:31:"install-gedit-rails-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:31:"install-gedit-rails-300x131.png";s:5:"width";i:300;s:6:"height";i:131;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>add-gedit-theme</title>
		<link>http://1up4dev.org/2008/08/gedit-para-ror-de-modo-facil/add-gedit-theme2/</link>
		<pubDate>Sun, 03 Aug 2008 16:36:35 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/08/add-gedit-theme2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date>2008-08-03 13:36:35</wp:post_date>
		<wp:post_date_gmt>2008-08-03 16:36:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>add-gedit-theme2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>55</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/08/add-gedit-theme2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/08/add-gedit-theme2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1356;s:6:"height";i:822;s:14:"hwstring_small";s:23:"height='77' width='128'";s:4:"file";s:74:"/home/w1up4dev/public_html/wp-content/uploads/2008/08/add-gedit-theme2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"add-gedit-theme2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:28:"add-gedit-theme2-300x181.png";s:5:"width";i:300;s:6:"height";i:181;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>result-gedit</title>
		<link>http://1up4dev.org/2008/08/gedit-para-ror-de-modo-facil/result-gedit2/</link>
		<pubDate>Sun, 03 Aug 2008 16:37:41 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/08/result-gedit2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>70</wp:post_id>
		<wp:post_date>2008-08-03 13:37:41</wp:post_date>
		<wp:post_date_gmt>2008-08-03 16:37:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>result-gedit2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>55</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/08/result-gedit2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/08/result-gedit2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1161;s:6:"height";i:615;s:14:"hwstring_small";s:23:"height='67' width='128'";s:4:"file";s:71:"/home/w1up4dev/public_html/wp-content/uploads/2008/08/result-gedit2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"result-gedit2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:25:"result-gedit2-300x158.png";s:5:"width";i:300;s:6:"height";i:158;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>gedit-snippets</title>
		<link>http://1up4dev.org/2008/08/gedit-para-ror-de-modo-facil/gedit-snippets/</link>
		<pubDate>Sat, 09 Aug 2008 18:48:56 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/08/gedit-snippets.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>83</wp:post_id>
		<wp:post_date>2008-08-09 15:48:56</wp:post_date>
		<wp:post_date_gmt>2008-08-09 18:48:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gedit-snippets</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>55</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/08/gedit-snippets.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/08/gedit-snippets.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:400;s:6:"height";i:481;s:14:"hwstring_small";s:22:"height='96' width='79'";s:4:"file";s:72:"/home/w1up4dev/public_html/wp-content/uploads/2008/08/gedit-snippets.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"gedit-snippets-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:26:"gedit-snippets-249x300.png";s:5:"width";i:249;s:6:"height";i:300;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>gedit-oblivion</title>
		<link>http://1up4dev.org/2008/08/gedit-para-ror-de-modo-facil/gedit-oblivion/</link>
		<pubDate>Sat, 09 Aug 2008 18:57:38 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/08/gedit-oblivion.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>84</wp:post_id>
		<wp:post_date>2008-08-09 15:57:38</wp:post_date>
		<wp:post_date_gmt>2008-08-09 18:57:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gedit-oblivion</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>55</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/08/gedit-oblivion.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/08/gedit-oblivion.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:888;s:6:"height";i:640;s:14:"hwstring_small";s:23:"height='92' width='128'";s:4:"file";s:72:"/home/w1up4dev/public_html/wp-content/uploads/2008/08/gedit-oblivion.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"gedit-oblivion-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:26:"gedit-oblivion-300x216.png";s:5:"width";i:300;s:6:"height";i:216;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Domain-Driven Design: Tackling Complexity in the Heart of Software (Hardcover)</title>
		<link>http://1up4dev.org/1up-nightmare-team/roger-leituras/book-ddd/</link>
		<pubDate>Tue, 19 Aug 2008 18:51:57 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/08/book-ddd.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>158</wp:post_id>
		<wp:post_date>2008-08-19 15:51:57</wp:post_date>
		<wp:post_date_gmt>2008-08-19 18:51:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>book-ddd</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>154</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/08/book-ddd.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/08/book-ddd.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:60;s:6:"height";i:75;s:14:"hwstring_small";s:22:"height='75' width='60'";s:4:"file";s:66:"/home/w1up4dev/public_html/wp-content/uploads/2008/08/book-ddd.jpg";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Pragmatic Unit Testing in Java with JUnit</title>
		<link>http://1up4dev.org/1up-nightmare-team/roger-leituras/book-prag-unit-test/</link>
		<pubDate>Tue, 19 Aug 2008 19:04:49 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/08/book-prag-unit-test.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date>2008-08-19 16:04:49</wp:post_date>
		<wp:post_date_gmt>2008-08-19 19:04:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>book-prag-unit-test</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>154</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/08/book-prag-unit-test.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/08/book-prag-unit-test.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:240;s:6:"height";i:240;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:77:"/home/w1up4dev/public_html/wp-content/uploads/2008/08/book-prag-unit-test.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:31:"book-prag-unit-test-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Pragmatic Programmer: From Journeyman to Master</title>
		<link>http://1up4dev.org/1up-nightmare-team/roger-leituras/book-prag-prog/</link>
		<pubDate>Tue, 19 Aug 2008 19:06:05 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/08/book-prag-prog.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>162</wp:post_id>
		<wp:post_date>2008-08-19 16:06:05</wp:post_date>
		<wp:post_date_gmt>2008-08-19 19:06:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>book-prag-prog</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>154</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/08/book-prag-prog.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/08/book-prag-prog.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:60;s:6:"height";i:75;s:14:"hwstring_small";s:22:"height='75' width='60'";s:4:"file";s:72:"/home/w1up4dev/public_html/wp-content/uploads/2008/08/book-prag-prog.jpg";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Head First Servlets and JSP: Passing the Sun Certified Web Component Developer Exam</title>
		<link>http://1up4dev.org/1up-nightmare-team/roger-leituras/book-hf-servlets/</link>
		<pubDate>Tue, 19 Aug 2008 19:07:24 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/08/book-hf-servlets.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>163</wp:post_id>
		<wp:post_date>2008-08-19 16:07:24</wp:post_date>
		<wp:post_date_gmt>2008-08-19 19:07:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>book-hf-servlets</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>154</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/08/book-hf-servlets.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/08/book-hf-servlets.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:240;s:6:"height";i:240;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:74:"/home/w1up4dev/public_html/wp-content/uploads/2008/08/book-hf-servlets.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"book-hf-servlets-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SCJP Sun Certified Programmer for Java 5 Study Guide (Exam 310-055)</title>
		<link>http://1up4dev.org/1up-nightmare-team/roger-leituras/book-scjp/</link>
		<pubDate>Tue, 19 Aug 2008 19:08:14 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/08/book-scjp.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>164</wp:post_id>
		<wp:post_date>2008-08-19 16:08:14</wp:post_date>
		<wp:post_date_gmt>2008-08-19 19:08:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>book-scjp</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>154</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/08/book-scjp.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/08/book-scjp.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:240;s:6:"height";i:240;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:67:"/home/w1up4dev/public_html/wp-content/uploads/2008/08/book-scjp.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"book-scjp-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Head First Design Patterns (Head First)</title>
		<link>http://1up4dev.org/1up-nightmare-team/roger-leituras/book-hf-dp/</link>
		<pubDate>Tue, 19 Aug 2008 19:08:56 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/08/book-hf-dp.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>165</wp:post_id>
		<wp:post_date>2008-08-19 16:08:56</wp:post_date>
		<wp:post_date_gmt>2008-08-19 19:08:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>book-hf-dp</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>154</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/08/book-hf-dp.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/08/book-hf-dp.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:240;s:6:"height";i:240;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:68:"/home/w1up4dev/public_html/wp-content/uploads/2008/08/book-hf-dp.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"book-hf-dp-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>livroxp</title>
		<link>http://1up4dev.org/1up-nightmare-team/roger-leituras/livroxp/</link>
		<pubDate>Mon, 20 Oct 2008 11:05:54 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/10/livroxp.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>205</wp:post_id>
		<wp:post_date>2008-10-20 08:05:54</wp:post_date>
		<wp:post_date_gmt>2008-10-20 11:05:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>livroxp</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>154</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/10/livroxp.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/10/livroxp.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:151;s:6:"height";i:198;s:14:"hwstring_small";s:22:"height='96' width='73'";s:4:"file";s:65:"/home/w1up4dev/public_html/wp-content/uploads/2008/10/livroxp.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"livroxp-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Iterativo</title>
		<link>http://1up4dev.org/2008/10/software-e-sobre-investimento/iterating/</link>
		<pubDate>Thu, 30 Oct 2008 04:38:21 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/10/iterating.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Cliente não sabe exatamente o que quer]]></excerpt:encoded>
		<wp:post_id>208</wp:post_id>
		<wp:post_date>2008-10-30 01:38:21</wp:post_date>
		<wp:post_date_gmt>2008-10-30 04:38:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>iterating</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>7</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/10/iterating.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/10/iterating.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:663;s:6:"height";i:179;s:14:"hwstring_small";s:23:"height='34' width='128'";s:4:"file";s:67:"/home/w1up4dev/public_html/wp-content/uploads/2008/10/iterating.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"iterating-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:20:"iterating-300x80.jpg";s:5:"width";i:300;s:6:"height";i:80;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>construcao de arquiteto cascateiro</title>
		<link>http://1up4dev.org/2008/11/arquiteto-cascateiro/construcao-crea/</link>
		<pubDate>Mon, 03 Nov 2008 17:26:44 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/11/construcao-crea.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Arquiteto Cascateiro trabalhando ...]]></excerpt:encoded>
		<wp:post_id>220</wp:post_id>
		<wp:post_date>2008-11-03 14:26:44</wp:post_date>
		<wp:post_date_gmt>2008-11-03 17:26:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>construcao-crea</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>210</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/11/construcao-crea.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/11/construcao-crea.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:572;s:6:"height";i:430;s:14:"hwstring_small";s:23:"height='96' width='127'";s:4:"file";s:73:"/home/w1up4dev/public_html/wp-content/uploads/2008/11/construcao-crea.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:27:"construcao-crea-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:27:"construcao-crea-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Exemplo de FAIL</title>
		<link>http://1up4dev.org/2008/11/arquiteto-cascateiro/soccer_fail/</link>
		<pubDate>Thu, 06 Nov 2008 18:16:00 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/11/soccer_fail.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[Exemplo de FAIL]]></content:encoded>
		<excerpt:encoded><![CDATA[Exemplo de FAIL]]></excerpt:encoded>
		<wp:post_id>235</wp:post_id>
		<wp:post_date>2008-11-06 15:16:00</wp:post_date>
		<wp:post_date_gmt>2008-11-06 18:16:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>soccer_fail</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>210</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/11/soccer_fail.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/11/soccer_fail.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:320;s:6:"height";i:215;s:14:"hwstring_small";s:23:"height='86' width='128'";s:4:"file";s:69:"/home/w1up4dev/public_html/wp-content/uploads/2008/11/soccer_fail.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"soccer_fail-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:23:"soccer_fail-300x201.jpg";s:5:"width";i:300;s:6:"height";i:201;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>spaceball</title>
		<link>http://1up4dev.org/2008/11/foco-no-problema/spaceball/</link>
		<pubDate>Mon, 10 Nov 2008 04:07:45 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/11/spaceball.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>247</wp:post_id>
		<wp:post_date>2008-11-10 01:07:45</wp:post_date>
		<wp:post_date_gmt>2008-11-10 04:07:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spaceball</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>243</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/11/spaceball.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/11/spaceball.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1;s:6:"height";i:1;s:14:"hwstring_small";s:20:"height='1' width='1'";s:4:"file";s:67:"/home/w1up4dev/public_html/wp-content/uploads/2008/11/spaceball.gif";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>software</title>
		<link>http://1up4dev.org/2008/11/foco-no-problema/software/</link>
		<pubDate>Mon, 10 Nov 2008 04:24:50 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/11/software.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[O processo cascateiro de desenvolvimento de software]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>249</wp:post_id>
		<wp:post_date>2008-11-10 01:24:50</wp:post_date>
		<wp:post_date_gmt>2008-11-10 04:24:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>software</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>243</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/11/software.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/11/software.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:800;s:6:"height";i:600;s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:66:"/home/w1up4dev/public_html/wp-content/uploads/2008/11/software.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"software-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:20:"software-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Tenha Coragem!</title>
		<link>http://1up4dev.org/2008/12/agilidade-cascateira/coragemcaocovarde/</link>
		<pubDate>Thu, 11 Dec 2008 12:01:15 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/12/coragemcaocovarde.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>266</wp:post_id>
		<wp:post_date>2008-12-11 09:01:15</wp:post_date>
		<wp:post_date_gmt>2008-12-11 12:01:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>coragemcaocovarde</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>262</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/12/coragemcaocovarde.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/12/coragemcaocovarde.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:150;s:6:"height";i:150;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:75:"/home/w1up4dev/public_html/wp-content/uploads/2008/12/coragemcaocovarde.jpg";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Prego só toma na cabeça!</title>
		<link>http://1up4dev.org/2008/12/agilidade-cascateira/fotopregocomcabeca/</link>
		<pubDate>Thu, 11 Dec 2008 12:28:07 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/12/fotopregocomcabeca.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Prego só toma na cabeça!]]></excerpt:encoded>
		<wp:post_id>268</wp:post_id>
		<wp:post_date>2008-12-11 09:28:07</wp:post_date>
		<wp:post_date_gmt>2008-12-11 12:28:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fotopregocomcabeca</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>262</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/12/fotopregocomcabeca.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/12/fotopregocomcabeca.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:170;s:6:"height";i:170;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:76:"/home/w1up4dev/public_html/wp-content/uploads/2008/12/fotopregocomcabeca.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:30:"fotopregocomcabeca-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Reação comum quando há um problema</title>
		<link>http://1up4dev.org/2008/12/agilidade-cascateira/imagem_spam_problem/</link>
		<pubDate>Tue, 16 Dec 2008 04:42:45 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2008/12/imagem_spam_problem.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Reação comum quando há um problema]]></excerpt:encoded>
		<wp:post_id>272</wp:post_id>
		<wp:post_date>2008-12-16 01:42:45</wp:post_date>
		<wp:post_date_gmt>2008-12-16 04:42:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>imagem_spam_problem</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>262</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2008/12/imagem_spam_problem.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2008/12/imagem_spam_problem.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:406;s:6:"height";i:245;s:14:"hwstring_small";s:23:"height='77' width='128'";s:4:"file";s:77:"/home/w1up4dev/public_html/wp-content/uploads/2008/12/imagem_spam_problem.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:31:"imagem_spam_problem-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:31:"imagem_spam_problem-300x181.jpg";s:5:"width";i:300;s:6:"height";i:181;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ship It!</title>
		<link>http://1up4dev.org/1up-nightmare-team/roger-leituras/shipit-book/</link>
		<pubDate>Mon, 05 Jan 2009 11:30:49 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/01/shipit-book.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>277</wp:post_id>
		<wp:post_date>2009-01-05 08:30:49</wp:post_date>
		<wp:post_date_gmt>2009-01-05 11:30:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>shipit-book</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>154</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/01/shipit-book.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/01/shipit-book.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:190;s:6:"height";i:228;s:14:"hwstring_small";s:22:"height='96' width='80'";s:4:"file";s:69:"/home/w1up4dev/public_html/wp-content/uploads/2009/01/shipit-book.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"shipit-book-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stripes</title>
		<link>http://1up4dev.org/1up-nightmare-team/roger-leituras/stripes-book/</link>
		<pubDate>Mon, 05 Jan 2009 11:31:39 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/01/stripes-book.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>278</wp:post_id>
		<wp:post_date>2009-01-05 08:31:39</wp:post_date>
		<wp:post_date_gmt>2009-01-05 11:31:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stripes-book</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>154</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/01/stripes-book.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/01/stripes-book.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:190;s:6:"height";i:228;s:14:"hwstring_small";s:22:"height='96' width='80'";s:4:"file";s:70:"/home/w1up4dev/public_html/wp-content/uploads/2009/01/stripes-book.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"stripes-book-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>virtualbox e multiple IEs</title>
		<link>http://1up4dev.org/2009/01/tpw-dicas-para-a-qualidade-do-software/virtualbox_multiple_ies/</link>
		<pubDate>Tue, 13 Jan 2009 00:13:54 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/01/virtualbox_multiple_ies.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>288</wp:post_id>
		<wp:post_date>2009-01-12 21:13:54</wp:post_date>
		<wp:post_date_gmt>2009-01-13 00:13:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>virtualbox_multiple_ies</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>280</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/01/virtualbox_multiple_ies.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1440;s:6:"height";i:900;s:14:"hwstring_small";s:23:"height='80' width='128'";s:4:"file";s:81:"/home/w1up4dev/public_html/wp-content/uploads/2009/01/virtualbox_multiple_ies.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:35:"virtualbox_multiple_ies-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:35:"virtualbox_multiple_ies-300x187.png";s:5:"width";i:300;s:6:"height";i:187;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/01/virtualbox_multiple_ies.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Idéia</title>
		<link>http://1up4dev.org/2009/04/business-bingo-generator/ideia/</link>
		<pubDate>Mon, 13 Apr 2009 11:32:01 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/04/ideia.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[idéia]]></excerpt:encoded>
		<wp:post_id>401</wp:post_id>
		<wp:post_date>2009-04-13 08:32:01</wp:post_date>
		<wp:post_date_gmt>2009-04-13 11:32:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ideia</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>398</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/04/ideia.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:319;s:6:"height";i:320;s:14:"hwstring_small";s:22:"height='96' width='95'";s:4:"file";s:63:"/home/w1up4dev/public_html/wp-content/uploads/2009/04/ideia.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"ideia-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:17:"ideia-299x300.jpg";s:5:"width";i:299;s:6:"height";i:300;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/04/ideia.jpg]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>nao-me-faca-pensar</title>
		<link>http://1up4dev.org/1up-nightmare-team/roger-leituras/nao-me-faca-pensar/</link>
		<pubDate>Wed, 15 Apr 2009 14:58:03 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/04/nao-me-faca-pensar.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>408</wp:post_id>
		<wp:post_date>2009-04-15 11:58:03</wp:post_date>
		<wp:post_date_gmt>2009-04-15 14:58:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nao-me-faca-pensar</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>154</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/04/nao-me-faca-pensar.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/04/nao-me-faca-pensar.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:600;s:6:"height";i:600;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:76:"/home/w1up4dev/public_html/wp-content/uploads/2009/04/nao-me-faca-pensar.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:30:"nao-me-faca-pensar-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:30:"nao-me-faca-pensar-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>marioland-clean</title>
		<link>http://1up4dev.org/2009/04/agilidade-e-a-buzzword-do-momento/marioland-clean/</link>
		<pubDate>Wed, 22 Apr 2009 02:12:24 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/04/marioland-clean.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>439</wp:post_id>
		<wp:post_date>2009-04-21 23:12:24</wp:post_date>
		<wp:post_date_gmt>2009-04-22 02:12:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>marioland-clean</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>427</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/04/marioland-clean.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/04/marioland-clean.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:450;s:6:"height";i:282;s:14:"hwstring_small";s:23:"height='80' width='128'";s:4:"file";s:73:"/home/w1up4dev/public_html/wp-content/uploads/2009/04/marioland-clean.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:27:"marioland-clean-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:27:"marioland-clean-300x188.jpg";s:5:"width";i:300;s:6:"height";i:188;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Lost</title>
		<link>http://1up4dev.org/2009/04/agilidade-e-a-buzzword-do-momento/lost_hatch_locke/</link>
		<pubDate>Wed, 22 Apr 2009 02:54:54 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/04/lost_hatch_locke.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Seu trabalho é digitar xxx a cada 108 segundos]]></excerpt:encoded>
		<wp:post_id>441</wp:post_id>
		<wp:post_date>2009-04-21 23:54:54</wp:post_date>
		<wp:post_date_gmt>2009-04-22 02:54:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>lost_hatch_locke</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>427</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/04/lost_hatch_locke.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/04/lost_hatch_locke.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:410;s:6:"height";i:273;s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:74:"/home/w1up4dev/public_html/wp-content/uploads/2009/04/lost_hatch_locke.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"lost_hatch_locke-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:28:"lost_hatch_locke-300x199.jpg";s:5:"width";i:300;s:6:"height";i:199;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>fire2</title>
		<link>http://1up4dev.org/2009/04/agilidade-e-a-buzzword-do-momento/fire2/</link>
		<pubDate>Wed, 22 Apr 2009 04:32:06 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/04/fire2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>442</wp:post_id>
		<wp:post_date>2009-04-22 01:32:06</wp:post_date>
		<wp:post_date_gmt>2009-04-22 04:32:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fire2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>427</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/04/fire2.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/04/fire2.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:550;s:6:"height";i:300;s:14:"hwstring_small";s:23:"height='69' width='128'";s:4:"file";s:63:"/home/w1up4dev/public_html/wp-content/uploads/2009/04/fire2.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"fire2-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:17:"fire2-300x163.jpg";s:5:"width";i:300;s:6:"height";i:163;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>controle-wii-remote</title>
		<link>http://1up4dev.org/2009/04/agilidade-e-a-buzzword-do-momento/controle-wii-remote/</link>
		<pubDate>Wed, 22 Apr 2009 04:54:46 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/04/controle-wii-remote.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Agilidade é propor soluções simples para os problemas]]></excerpt:encoded>
		<wp:post_id>443</wp:post_id>
		<wp:post_date>2009-04-22 01:54:46</wp:post_date>
		<wp:post_date_gmt>2009-04-22 04:54:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>controle-wii-remote</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>427</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/04/controle-wii-remote.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/04/controle-wii-remote.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:300;s:6:"height";i:399;s:14:"hwstring_small";s:22:"height='96' width='72'";s:4:"file";s:77:"/home/w1up4dev/public_html/wp-content/uploads/2009/04/controle-wii-remote.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:31:"controle-wii-remote-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:31:"controle-wii-remote-225x300.jpg";s:5:"width";i:225;s:6:"height";i:300;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>facepalm2ly3</title>
		<link>http://1up4dev.org/2009/04/agilidade-e-a-buzzword-do-momento/facepalm2ly3/</link>
		<pubDate>Wed, 22 Apr 2009 05:09:27 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/04/facepalm2ly3.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>446</wp:post_id>
		<wp:post_date>2009-04-22 02:09:27</wp:post_date>
		<wp:post_date_gmt>2009-04-22 05:09:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>facepalm2ly3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>427</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/04/facepalm2ly3.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/04/facepalm2ly3.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:339;s:6:"height";i:256;s:14:"hwstring_small";s:23:"height='96' width='127'";s:4:"file";s:70:"/home/w1up4dev/public_html/wp-content/uploads/2009/04/facepalm2ly3.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"facepalm2ly3-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:24:"facepalm2ly3-300x226.jpg";s:5:"width";i:300;s:6:"height";i:226;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>setas</title>
		<link>http://1up4dev.org/2009/04/agilidade-e-a-buzzword-do-momento/setas/</link>
		<pubDate>Wed, 22 Apr 2009 05:10:05 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/04/setas.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>447</wp:post_id>
		<wp:post_date>2009-04-22 02:10:05</wp:post_date>
		<wp:post_date_gmt>2009-04-22 05:10:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setas</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>427</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/04/setas.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/04/setas.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:509;s:6:"height";i:301;s:14:"hwstring_small";s:23:"height='75' width='127'";s:4:"file";s:63:"/home/w1up4dev/public_html/wp-content/uploads/2009/04/setas.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"setas-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:17:"setas-300x177.jpg";s:5:"width";i:300;s:6:"height";i:177;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>burning_money</title>
		<link>http://1up4dev.org/2009/04/agilidade-e-a-buzzword-do-momento/burning_money/</link>
		<pubDate>Wed, 22 Apr 2009 21:21:04 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/04/burning_money.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Queimando dinheiro]]></excerpt:encoded>
		<wp:post_id>454</wp:post_id>
		<wp:post_date>2009-04-22 18:21:04</wp:post_date>
		<wp:post_date_gmt>2009-04-22 21:21:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>burning_money</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>427</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/04/burning_money.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/04/burning_money.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:200;s:6:"height";i:150;s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:71:"/home/w1up4dev/public_html/wp-content/uploads/2009/04/burning_money.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"burning_money-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>thefoxes-3</title>
		<link>http://1up4dev.org/2009/04/guia-de-ruby-do-why-autospec-autotest-notification/thefoxes-3/</link>
		<pubDate>Mon, 27 Apr 2009 05:36:02 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/04/thefoxes-3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>463</wp:post_id>
		<wp:post_date>2009-04-27 02:36:02</wp:post_date>
		<wp:post_date_gmt>2009-04-27 05:36:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>thefoxes-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>422</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/04/thefoxes-3.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/04/thefoxes-3.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:800;s:6:"height";i:232;s:14:"hwstring_small";s:23:"height='37' width='128'";s:4:"file";s:68:"/home/w1up4dev/public_html/wp-content/uploads/2009/04/thefoxes-3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"thefoxes-3-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:21:"thefoxes-3-300x87.png";s:5:"width";i:300;s:6:"height";i:87;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sucesso</title>
		<link>http://1up4dev.org/2009/04/guia-de-ruby-do-why-autospec-autotest-notification/sucesso/</link>
		<pubDate>Mon, 27 Apr 2009 05:53:03 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/04/sucesso.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>465</wp:post_id>
		<wp:post_date>2009-04-27 02:53:03</wp:post_date>
		<wp:post_date_gmt>2009-04-27 05:53:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sucesso</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>422</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/04/sucesso.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/04/sucesso.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:552;s:6:"height";i:192;s:14:"hwstring_small";s:23:"height='44' width='128'";s:4:"file";s:65:"/home/w1up4dev/public_html/wp-content/uploads/2009/04/sucesso.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"sucesso-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:19:"sucesso-300x104.png";s:5:"width";i:300;s:6:"height";i:104;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>fail</title>
		<link>http://1up4dev.org/2009/04/guia-de-ruby-do-why-autospec-autotest-notification/fail/</link>
		<pubDate>Mon, 27 Apr 2009 05:53:15 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/04/fail.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>466</wp:post_id>
		<wp:post_date>2009-04-27 02:53:15</wp:post_date>
		<wp:post_date_gmt>2009-04-27 05:53:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fail</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>422</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/04/fail.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/04/fail.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:551;s:6:"height";i:194;s:14:"hwstring_small";s:23:"height='45' width='128'";s:4:"file";s:62:"/home/w1up4dev/public_html/wp-content/uploads/2009/04/fail.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:16:"fail-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:16:"fail-300x105.png";s:5:"width";i:300;s:6:"height";i:105;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cheatsheet example</title>
		<link>http://1up4dev.org/2009/05/gerando-cheat-sheet-para-os-snippets-do-gedit/cheatsheet-example/</link>
		<pubDate>Fri, 01 May 2009 01:57:26 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/04/cheatsheet-example.png</guid>
		<description></description>
		<content:encoded><![CDATA[Meu cheat sheet de exemplo]]></content:encoded>
		<excerpt:encoded><![CDATA[Meu cheat sheet de exemplo]]></excerpt:encoded>
		<wp:post_id>484</wp:post_id>
		<wp:post_date>2009-04-30 22:57:26</wp:post_date>
		<wp:post_date_gmt>2009-05-01 01:57:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cheatsheet-example</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>482</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/04/cheatsheet-example.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/04/cheatsheet-example.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:809;s:6:"height";i:832;s:14:"hwstring_small";s:22:"height='96' width='93'";s:4:"file";s:76:"/home/w1up4dev/public_html/wp-content/uploads/2009/04/cheatsheet-example.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:30:"cheatsheet-example-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:30:"cheatsheet-example-291x300.png";s:5:"width";i:291;s:6:"height";i:300;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>gridanimated</title>
		<link>http://1up4dev.org/2009/05/jquery-datatables-github-apilinks-semana/gridanimated/</link>
		<pubDate>Mon, 04 May 2009 03:34:30 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/05/gridanimated.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>489</wp:post_id>
		<wp:post_date>2009-05-04 00:34:30</wp:post_date>
		<wp:post_date_gmt>2009-05-04 03:34:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gridanimated</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>477</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/05/gridanimated.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/05/gridanimated.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:699;s:6:"height";i:171;s:14:"hwstring_small";s:23:"height='31' width='128'";s:4:"file";s:70:"/home/w1up4dev/public_html/wp-content/uploads/2009/05/gridanimated.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"gridanimated-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:23:"gridanimated-300x73.jpg";s:5:"width";i:300;s:6:"height";i:73;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>datatables</title>
		<link>http://1up4dev.org/2009/05/jquery-datatables-github-apilinks-semana/datatables/</link>
		<pubDate>Mon, 04 May 2009 03:41:06 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/05/datatables.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>490</wp:post_id>
		<wp:post_date>2009-05-04 00:41:06</wp:post_date>
		<wp:post_date_gmt>2009-05-04 03:41:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>datatables</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>477</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/05/datatables.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/05/datatables.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:675;s:6:"height";i:195;s:14:"hwstring_small";s:23:"height='36' width='128'";s:4:"file";s:68:"/home/w1up4dev/public_html/wp-content/uploads/2009/05/datatables.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"datatables-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:21:"datatables-300x86.png";s:5:"width";i:300;s:6:"height";i:86;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>posts</title>
		<link>http://1up4dev.org/2009/07/paginacao-no-rails-com-will_paginate-e-ajax-de-modo-facil/posts/</link>
		<pubDate>Fri, 10 Jul 2009 18:35:55 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/07/posts.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>509</wp:post_id>
		<wp:post_date>2009-07-10 15:35:55</wp:post_date>
		<wp:post_date_gmt>2009-07-10 18:35:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>posts</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>503</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/07/posts.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/07/posts.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:520;s:6:"height";i:440;s:14:"hwstring_small";s:23:"height='96' width='113'";s:4:"file";s:63:"/home/w1up4dev/public_html/wp-content/uploads/2009/07/posts.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"posts-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:17:"posts-300x253.png";s:5:"width";i:300;s:6:"height";i:253;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Caso de Uso!?! Pode ser uma cilada Bino!</title>
		<link>http://1up4dev.org/2009/07/cuidado-com-casos-de-uso/cilada_bino/</link>
		<pubDate>Mon, 20 Jul 2009 01:17:50 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/07/cilada_bino.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>525</wp:post_id>
		<wp:post_date>2009-07-19 22:17:50</wp:post_date>
		<wp:post_date_gmt>2009-07-20 01:17:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cilada_bino</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>516</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/07/cilada_bino.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/07/cilada_bino.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:360;s:6:"height";i:120;s:14:"hwstring_small";s:23:"height='42' width='128'";s:4:"file";s:69:"/home/w1up4dev/public_html/wp-content/uploads/2009/07/cilada_bino.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"cilada_bino-150x120.jpg";s:5:"width";i:150;s:6:"height";i:120;}s:6:"medium";a:3:{s:4:"file";s:23:"cilada_bino-300x100.jpg";s:5:"width";i:300;s:6:"height";i:100;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>trabalho_em_equipe</title>
		<link>http://1up4dev.org/?attachment_id=537</link>
		<pubDate>Tue, 28 Jul 2009 01:47:36 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/07/trabalho_em_equipe.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>537</wp:post_id>
		<wp:post_date>2009-07-27 22:47:36</wp:post_date>
		<wp:post_date_gmt>2009-07-28 01:47:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>trabalho_em_equipe</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/07/trabalho_em_equipe.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/w1up4dev/public_html/wp-content/uploads/2009/07/trabalho_em_equipe.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:445;s:6:"height";i:600;s:14:"hwstring_small";s:22:"height='96' width='71'";s:4:"file";s:76:"/home/w1up4dev/public_html/wp-content/uploads/2009/07/trabalho_em_equipe.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:30:"trabalho_em_equipe-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:30:"trabalho_em_equipe-222x300.jpg";s:5:"width";i:222;s:6:"height";i:300;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rails Summit 2009 Locaweb</title>
		<link>http://1up4dev.org/2009/10/rails-summit-2009/rails-summit-2009-locaweb/</link>
		<pubDate>Tue, 20 Oct 2009 02:41:41 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2009/10/4013425175_68b7b78b6f_original.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>567</wp:post_id>
		<wp:post_date>2009-10-19 23:41:41</wp:post_date>
		<wp:post_date_gmt>2009-10-20 02:41:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-summit-2009-locaweb</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>558</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2009/10/4013425175_68b7b78b6f_original.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/4013425175_68b7b78b6f_original.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"500";s:6:"height";s:3:"333";s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:42:"2009/10/4013425175_68b7b78b6f_original.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:42:"4013425175_68b7b78b6f_original-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:42:"4013425175_68b7b78b6f_original-300x199.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"199";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:25:"Rails Summit 2009 Locaweb";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ciclocorporativo</title>
		<link>http://1up4dev.org/2011/06/tpw-e-mails-vs-reunioes/ciclocorporativo/</link>
		<pubDate>Tue, 30 Mar 2010 04:34:16 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2010/03/ciclocorporativo.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>635</wp:post_id>
		<wp:post_date>2010-03-30 01:34:16</wp:post_date>
		<wp:post_date_gmt>2010-03-30 04:34:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ciclocorporativo</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>634</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2010/03/ciclocorporativo.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/03/ciclocorporativo.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"558";s:6:"height";s:3:"551";s:14:"hwstring_small";s:22:"height='96' width='97'";s:4:"file";s:28:"2010/03/ciclocorporativo.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"ciclocorporativo-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:28:"ciclocorporativo-300x296.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"296";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fusca</title>
		<link>http://1up4dev.org/2011/02/complexidade-nao-escala/fuka_herbie_oval/</link>
		<pubDate>Sun, 30 Jan 2011 20:36:53 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2011/01/fuka_herbie_oval.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>810</wp:post_id>
		<wp:post_date>2011-01-30 17:36:53</wp:post_date>
		<wp:post_date_gmt>2011-01-30 20:36:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fuka_herbie_oval</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>800</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2011/01/fuka_herbie_oval.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/fuka_herbie_oval.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"400";s:6:"height";s:3:"281";s:14:"hwstring_small";s:23:"height='89' width='128'";s:4:"file";s:28:"2011/01/fuka_herbie_oval.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"fuka_herbie_oval-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:28:"fuka_herbie_oval-300x210.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"210";}s:14:"post-thumbnail";a:3:{s:4:"file";s:28:"fuka_herbie_oval-400x198.jpg";s:5:"width";s:3:"400";s:6:"height";s:3:"198";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[Fusca]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Twitter</title>
		<link>http://1up4dev.org/2011/02/complexidade-nao-escala/baleia1/</link>
		<pubDate>Sun, 30 Jan 2011 20:37:38 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2011/01/baleia1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>811</wp:post_id>
		<wp:post_date>2011-01-30 17:37:38</wp:post_date>
		<wp:post_date_gmt>2011-01-30 20:37:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>baleia1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>800</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2011/01/baleia1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/baleia1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"500";s:6:"height";s:3:"375";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:19:"2011/01/baleia1.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"baleia1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:19:"baleia1-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:14:"post-thumbnail";a:3:{s:4:"file";s:19:"baleia1-500x198.jpg";s:5:"width";s:3:"500";s:6:"height";s:3:"198";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[Twitter]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Call Center</title>
		<link>http://1up4dev.org/2011/02/complexidade-nao-escala/call-center/</link>
		<pubDate>Sun, 30 Jan 2011 23:58:15 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2011/01/call-center.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>820</wp:post_id>
		<wp:post_date>2011-01-30 20:58:15</wp:post_date>
		<wp:post_date_gmt>2011-01-30 23:58:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>call-center</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>800</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2011/01/call-center.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/call-center.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"425";s:6:"height";s:3:"319";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:23:"2011/01/call-center.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"call-center-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"call-center-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:14:"post-thumbnail";a:3:{s:4:"file";s:23:"call-center-425x198.jpg";s:5:"width";s:3:"425";s:6:"height";s:3:"198";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:3:"DIV";s:6:"camera";s:0:"";s:7:"caption";s:106:"ATENTO2460 S12 SP 09.03.2006 ECONOMIA -- Trabalho de telemarketing na empresa Atento -- FOTO DIVULGAÃAO";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[Call Center]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Escalabilidade</title>
		<link>http://1up4dev.org/2011/02/complexidade-nao-escala/scale-up/</link>
		<pubDate>Mon, 31 Jan 2011 01:57:27 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2011/01/scale-up.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>828</wp:post_id>
		<wp:post_date>2011-01-30 22:57:27</wp:post_date>
		<wp:post_date_gmt>2011-01-31 01:57:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scale-up</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>800</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2011/01/scale-up.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/scale-up.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"640";s:6:"height";s:3:"322";s:14:"hwstring_small";s:23:"height='64' width='128'";s:4:"file";s:20:"2011/01/scale-up.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"scale-up-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"scale-up-300x150.png";s:5:"width";s:3:"300";s:6:"height";s:3:"150";}s:14:"post-thumbnail";a:3:{s:4:"file";s:20:"scale-up-640x198.png";s:5:"width";s:3:"640";s:6:"height";s:3:"198";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[Escalabilidade]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Crafting Rails Applications: Expert Practices for Everyday Rails Development</title>
		<link>http://1up4dev.org/2011/02/resenha-do-livro-crafting-rails-applications/jvrails/</link>
		<pubDate>Wed, 02 Feb 2011 11:33:38 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2011/02/jvrails.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Crafting Rails Applications: Expert Practices for Everyday Rails Development]]></excerpt:encoded>
		<wp:post_id>847</wp:post_id>
		<wp:post_date>2011-02-02 08:33:38</wp:post_date>
		<wp:post_date_gmt>2011-02-02 11:33:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jvrails</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>841</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2011/02/jvrails.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/02/jvrails.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"190";s:6:"height";s:3:"228";s:14:"hwstring_small";s:22:"height='96' width='80'";s:4:"file";s:19:"2011/02/jvrails.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"jvrails-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:14:"post-thumbnail";a:3:{s:4:"file";s:19:"jvrails-190x198.jpg";s:5:"width";s:3:"190";s:6:"height";s:3:"198";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[Crafting Rails Applications: Expert Practices for Everyday Rails Development]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morra, CRUD</title>
		<link>http://1up4dev.org/?p=6</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>hbulhoes</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/?p=10</guid>
		<description></description>
		<content:encoded><![CDATA[<div>- Observações sobre a inadequação dos modelos de dados relacionais frente ao modo como as informações são produzidas, interpretadas e utilizadas por nós, pessoas;</div>
<div>- Exercício de imaginação a respeito do que pode substituir o "padrão CRUD" numa época em que a preocupação com memória e processamento tornar-se irrelevante;</div>
<div>- Sugestões a respeito do que pode ser feito hoje.</div>
<div>Ambicioso eu hehe. Tópico bastante complexo que eu já queria escrever há mto tempo, e que o post do Rodrigo me fez relembrar. Sugestões de pauta ou participação, fiquem à vontade -- Humberto 16/05</div>
<div>------------------------------</div>
<div>A respeito das "Sugestões", tinha imaginado algo na linha de naked objects, uma idéia de altíssimo nível. Vou estudar mais a fundo. -- Humberto 16/05</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2008-05-16 14:21:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morra-crud</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hello"><![CDATA[hello]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[4118339]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[1up4dev.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Humbertohttp://www.blogger.com/profile/17514111343701686057noreply@blogger.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/feeds/posts/default/3251627382994868741]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Guerrilha agile: reconhecendo o terreno</title>
		<link>http://1up4dev.org/?p=8</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>hbulhoes</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/?p=42</guid>
		<description></description>
		<content:encoded><![CDATA[A menos que você tenha uma condição favorável ao abandono do waterfall no seu trabalho, será preciso criar essa condição. No pior dos casos você estará sozinho nessa, e o ambiente lhe será hostil. Dependendo das pessoas ao seu redor ou com mais poder que você, a hostilidade pode variar do conhecimento superficial de melhores práticas de desenvolvimento até o veto puro e simples a qualquer movimento "subversivo". Se você ocupa alguma função gerencial ou de liderança, as pessoas "abaixo" de você podem ficar melindradas e cínicas ao menor sinal de mudança. Fora da empresa também haverá obstáculos: alguns clientes podem achar que esse negócio de metodologia é problema só seu. E, para completar, a todo momento em que seus projetos falharem, a culpa será dos seus esforços em mudar as coisas.

É chover no molhado continuar a descrever indefinidamente o calvário pelo qual passaram aqueles que quiseram fazer alguma coisa diferente num contexto desfavorável. É improdutivo porque é difícil evitar o <a href="http://1up4dev.wordpress.com/2008/06/04/tpw-dicas-para-o-desenvolvedor/">muro das lamentações</a>: a situação está sempre longe do ideal. Achamos que temos <em>o direito</em> de trabalhar em melhores condições, e que as nossas intenções são as melhores possíveis: entregar melhor software em menos tempo. Mas falhamos ao querer que a empresa tome a iniciativa de mudar. A minha opinião é de que não devemos acreditar nisso.

Não quero dizer que "nenhuma" empresa investe para melhorar. Apenas não se pode esperar isso da maioria. Motivos abundam: administração amadora, estratégia equivocada ou inexistente,

- adversário: inércia alheia (não-adversário: colega, chefe, cliente)

- adversário: expectativa alheia (não-adversário: colega, chefe, cliente)

- adversário: desatenção ao contexto / agile by-the-book / síndrome do mundo perfeito

- e se o contexto fosse você, agile se aplicaria?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date>2008-07-28 18:45:05</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>guerrilha-agile-parte-2</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hello"><![CDATA[hello]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[4118339]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Agilismo de porta de cadeia</title>
		<link>http://1up4dev.org/?p=9</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>hbulhoes</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/?p=45</guid>
		<description></description>
		<content:encoded><![CDATA[Um post sobre aqueles que advogam agilismo em benefício marketeiro próprio, especialmente quem vende con$ultoria (ou treinamento ou certificação ou coisa do tipo) sobre agile, sempre mostrando como o mundo pode ser maravilhoso, sempre desviando dos problemas realmente hard. Tipo, cliente que não colabora; silos de informação; chefe/diretoria/colegas com prioridades divergentes. Aquelas coisas que não adianta fingir que não existem, nem vão deixar de existir por causa do processo perfeito e supremo.

Humberto, veja se este post ajuda na inspiração: http://queroseragil.wordpress.com/2008/11/15/the-decline-and-fall-of-agile/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date>2008-11-17 15:51:16</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hello"><![CDATA[hello]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1up Nightmare Team</title>
		<link>http://1up4dev.org/1up-nightmare-team/</link>
		<pubDate>Mon, 02 Jun 2008 20:44:02 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?page_id=23</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Como surgiu?</h2>
Este blog nasceu de uma vertigem num domingo ensolarado após 12 horas dando suporte numa nova versão que estava sendo implantada. Revoltado com a vida, e principalmente com a metodologia usada na empresa, precisava desabafar e com um porém, sem ninguém notar. Não demorei muito pra concluir que não daria conta de posts quase diários, e tive a ótima idéia de olhar ao redor e perceber que não sou o único a sofrer com os mesmos problemas, foi ai que nasceu a equipe 1up4dev.
<h2>Por que 1up4dev!?</h2>
Como um bom <em>nerd</em>, jogos clássicos fazem parte da nossa vida. 1up = cogumelo verde do mário (está no banner) que significa uma nova vida e dev = developer, sim somos chamados assim na pilha de documentos do waterfall. Lendo em inglês (pode ser o inglês indiano mesmo), ai teremos algo como ... "Uma nova vida ao desenvolvedor"

Sobre os autores ainda está pendente, os requisitos foram levantados e está em fase de definir a Arquitetura e blá blá blá ... provavelmente após uns dois anos de "levantamento", sairá uma versão <em>alpha</em> com muitos <em>bugs</em> e com certeza não será aquilo que você leitor está esperando! :-)
<h2>Autores</h2>
<h3>Miguel Baldi</h3>
Bom, não tive escolha, já estava ficando feio...

Meu nome é Miguel Aranha Baldi Hörlle, tenho 22 anos e trabalho com tecnologia desde os 15 (parece exagerado, mas não é). Comecei fazendo estágio na época do colégio, primeiro montando e configurando micros, administração de redes e tal. Até que comecei a aprender a linguagem C, neste ponto ingressei na faculdade de Ciencias da Computação na PUC. Aí consegui meu primeiro estágio de programação, C++ e Visual Basic 6, é eu já programei VB6! Nesse ponto me apaixonei por algoritmos e programação, daí já viu...

Então tive contato com Java na faculdade, apartir daí comecei a trabalhar com esta linguagem e estou até hoje. Tenho bastante experiência com sistemas web de diversos tamanhos, e comecei a gostar muito de interfaces, javascript e tal. Coisas que na época do C++ eu considerava abomináveis, tipo: "html não é linguagem...", "javascript não é programação", e coisas preconceituosas do gênero. Os tempos mudam. Comecei a usar linux no começo da faculdade, e hoje em dia isso virou uma constante na minha vida. Até já pensei em comprar um Mac, mas acho que instalaria linux nele (risos). Atualmente me deparei com uma linguagem chamada Ruby, me empolguei, comecei a estudar Rails, então não parei mais. Daí para os principios do Manifesto Ágil foi um passo.

Não acabei a faculdade ainda, pois infelizmente nesta área se você começa a trabalhar muito cedo, fica cada vez mais dificil estudar. Claro, dificil de frequentar a faculdade, porque estudar mesmo é todo dia. Na verdade às vezes percebo que fico à cada dia mais viciado em trabalho. Minha proporção de leitura é: para cada livro não-técnico, 3 técnicos. Sinto que está piorando, hehe.

<a href="http://www.linkedin.com/pub/9/162/671"><img src="http://www.linkedin.com/img/webpromo/btn_viewmy_160x25.gif" border="0" alt="View Miguel Baldi's profile on LinkedIn" width="160" height="25" /></a>

Twitter: <a href="http://twitter.com/miguelbaldi">@miguelbaldi</a>
<h3>Humberto Bulhões</h3>
Um impostor. Não-graduado e não-certificado, explora informalmente o mercado de trabalho de desenvolvimento de sistemas há 12 anos. Sobrevive pagando de programador C++, embora não manje nada. Já aplicou o mesmo golpe utilizando HTML, JavaScript, Java e C#. Nunca teve pudor de rezar para Microsoft, IBM, Sun ou qualquer outra desde que rolasse grana. Seu código de ética resume-se a "não utilizarás VB nem PHP". Arriscou ser gerente e se deu mal, mas quer revanche.
Acredita que a adoção de metodologias ágeis é muito favorável a seus interesses.

<a href="http://www.linkedin.com/in/humbertobulhoes"><img src="http://www.linkedin.com/img/webpromo/btn_viewmy_160x25.gif" border="0" alt="View Humberto Bulhoes's profile on LinkedIn" width="160" height="25" /></a>

Twitter: <a href="http://twitter.com/01berto">@01berto</a>
<a href="http://myidlethread.wordpress.com/" target="_blank">http://myidlethread.wordpress.com</a>

&nbsp;
<h3>Rodrigo Panachi</h3>
Sou formado em Ciência da Computação e trabalho com desenvolvimento de software há 4 anos. Comecei com suporte, passei pela infra, experimentei Delphi, .NET, C#, Java e agora estou só com Ruby. Tenho estudado constantemente e, como profissional, prezo pela qualidade do meu trabalho. Já trabalhei em várias empresas onde pude acumular experiência suficiente para concluir que somente a agilidade funciona. Acredito na comunidade open-source, não defendo marcas e me esforço para disseminar o pensamento ágil nos profissionais ao meu redor.

<a href="http://www.linkedin.com/in/rodrigopanachi"><img src="http://www.linkedin.com/img/webpromo/btn_viewmy_160x25.gif" border="0" alt="View Rodrigo Panachi's profile on LinkedIn" width="160" height="25" /></a>

Twitter: <a title="Twitter" href="http://twitter.com/rpanachi">@rpanachi</a>
<h3><a title="Twitter" href="http://twitter.com/rpanachi"></a>
<span style="color: #000000; font-size: 18px; line-height: 27px;">Roger Leite</span></h3>
<span style="color: #000000; font-size: 18px; line-height: 27px;"> </span>Olá, atualmente não sei o meu cargo definitivo, isso é bom pois atuo em vários papéis desenvolvedor, analista de sistemas, tester e design. Minha paixão desde moleque foi computadores, e do dia pra noite me peguei lendo sobre Basic na era "pré-histórica" da computação. Comecei trabalhando com hardware, passei por suporte também , tanto de usuário como de infra estrutura,  mas a grande paixão mesmo foi a programação. Como uma evolução natural, a ideologia open source me abraçou e hoje trabalho com Linux e Java, e dou os meus "pitacos" em linguagens de scripts. Já trabalhei em diferentes empresas, com linguagens e pensamentos diferentes, mas o que busco hoje é um ambiente ágil que nunca encontrei ou tive oportunidade de desenvolver.

<a href="http://www.linkedin.com/in/rogerleite"><img src="http://www.linkedin.com/img/webpromo/btn_viewmy_160x25.gif" border="0" alt="View Roger Leite's profile on LinkedIn" width="160" height="25" /></a>

Twitter: <a href="http://twitter.com/rogerleite">@rogerleite</a>
<a href="http://1up4dev.org/roger-leituras/">Minhas Leituras</a>
<a name="pbalduino"><h3>Plínio Balduino</h3></a>
Meu nome é Plínio, 33 anos, atualmente dizem que sou Engenheiro de Software ou seja lá que diabos isso signifique. Sou formado em Matemática e desenvolvo softwares há 18 anos, o que também não quer dizer muita coisa.

Tive a honra de ser convocado para essa equipe depois que o barco já estava no mar e a fama do grupo já estava feita, então tenho que mostrar serviço para não ser jogado aos tubarões.

Atualmente o Java paga as minhas contas, o Rails me dá esperanças de um mundo melhor e JS, Clojure e Erlang me mantém com tesão pelo que eu faço e vontade de aprender cada vez mais. Sou test addicted, o que não é bem aceito entre alguns colegas, viciado em leitura, o que já me causou sérios problemas de orçamento, e sempre acho que existe uma forma mais rápida e eficiente de resolver um problema.

Também toco baixo numa banda de Rock antigo, sou pai do Gustavinho e escrevi o livro <a href="www.casadocodigo.com.br/products/livro-javascript-jquery">Dominando JavaScript com jQuery</a>, pela Editora Casa do Código.

Twitter: <a title="Twitter" href="http://twitter.com/p_balduino" target="_blank">@p_balduino</a>

<a href="http://www.linkedin.com/in/pbalduino"><img src="http://www.linkedin.com/img/webpromo/btn_viewmy_160x25.gif" border="0" alt="View Plinio Balduino's profile on LinkedIn" width="160" height="25" /></a>
<h3>Rogério Ramos</h3>
<div id="_mcePaste">

Incompreendido até por mim mesmo, conheci tecnologia num sem querer sem precedentes. Comecei com VB6, mas ninguém me disse que tinha coisa muito melhor por aí. Minha sorte foi cair num empresa que apoiava Open Source, e daí pra frente foi GNU/Linux, PHP, Java e as Enterprises, que ainda não compreendi, e é o que vou tentar compartilhar por aqui. Meu foco é Ruby e Python... Go Ahead!

Já tentei vendas, esportes, neurolingüística, mas só nas linhas de códigos me senti um pouco útil.

</div>
Twitter: <a href="http://twitter.com/habutre" target="_blank">@habutre</a>
<a href="http://br.linkedin.com/in/habutre"><img src="http://www.linkedin.com/img/webpromo/btn_viewmy_160x25.gif" border="0" alt="View Rogério Ramos's profile on LinkedIn" width="160" height="25" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date>2008-06-02 20:44:02</wp:post_date>
		<wp:post_date_gmt>2008-06-02 20:44:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1up-nightmare-team</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[If you enjoyed this post, please consider <a href="#comments">leaving a comment</a> or <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">subscribing to the <abbr title="Really Simple Syndication">RSS</abbr> feed</a> to have future articles delivered to your feed reader.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078362]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[Andre]]></wp:comment_author>
			<wp:comment_author_email>andref5@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.65.103.243</wp:comment_author_IP>
			<wp:comment_date>2008-06-13 20:29:40</wp:comment_date>
			<wp:comment_date_gmt>2008-06-13 23:29:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ou seja, o parada ja surgiu do inferno!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>530</wp:comment_id>
			<wp:comment_author><![CDATA[Voltamos! | 1up4developers]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2011/01/voltamos/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2011-01-17 09:14:19</wp:comment_date>
			<wp:comment_date_gmt>2011-01-17 12:14:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Sejam bem vindos à guerrilha! [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Roger Leituras</title>
		<link>http://1up4dev.org/1up-nightmare-team/roger-leituras/</link>
		<pubDate>Tue, 19 Aug 2008 19:20:19 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?page_id=154</guid>
		<description></description>
		<content:encoded><![CDATA[Quero manter aqui, a lista de livros que li e/ou estou lendo, somente como um histórico mesmo, e até quem sabe, inspirar os desenvolvedores a lerem mais.

Mantenho uma "fila" de livros a ler (cada vez crescendo ...), numa <a href="http://www.amazon.com/gp/registry/wishlist/1UTRX7BSI2V1Q/ref=wl_web"><em>Wish List</em></a> da Amazon.
Sugestões de novas leituras são sempre bem vindas, não seja tímido e <span style="text-decoration: line-through;">comente</span> err, me mande um email mesmo em roger.leite [at] 1up4dev [dot] org ! :D
<table style="height: 85px;" border="0" width="90%">
<tbody>
<tr>
<td><a href="http://www.submarino.com.br/produto/1/157586"><img class="alignnone size-medium wp-image-278" title="Não me faça pensar" src="http://1up4dev.org/wp-content/uploads/2009/04/nao-me-faca-pensar.jpg" alt="" width="118" height="122" /></a></td>
<td>Não me faça pensar
by Steve Krug</td>
</tr>
<tr>
<td><a href="http://www.pragprog.com/titles/fdstr/stripes"><img class="alignnone size-medium wp-image-278" title="Stripes" src="http://1up4dev.org/wp-content/uploads/2009/01/stripes-book.jpg" alt="" width="86" height="104" /></a></td>
<td>Stripes: ...And Java Web Development Is Fun Again
by Frederic Daoud</td>
</tr>
<tr>
<td><a href="http://www.pragprog.com/titles/prj/ship-it"><img class="alignnone size-medium wp-image-277" title="Ship It!" src="http://1up4dev.org/wp-content/uploads/2009/01/shipit-book.jpg" alt="" width="92" height="110" /></a></td>
<td>Ship it!: A Practical Guide to Successful Software Projects
by Jared Richardson, Will Gwaltney, Jr</td>
</tr>
<tr>
<td><a href="http://www.improveit.com.br/xp/livroxp"><img class="alignnone size-medium wp-image-205" title="livroxp" src="http://1up4dev.org/wp-content/uploads/2008/10/livroxp.jpg" alt="" width="92" height="120" /></a></td>
<td>Extreme Programming: Aprenda como encantar seus usuários desenvolvendo software com agilidade e alta qualidade De Vinícius Manhães Teles (Autor)</td>
</tr>
<tr>
<td><a href="http://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215/ref=pd_bbs_sr_1?ie=UTF8&amp;s=books&amp;qid=1206629616&amp;sr=8-1"><img class="size-medium wp-image-158 alignleft" title="Domain-Driven Design: Tackling Complexity in the Heart of Software (Hardcover)" src="http://1up4dev.org/wp-content/uploads/2008/08/book-ddd.jpg" alt="" width="92" height="115" /></a></td>
<td>Domain-Driven Design: Tackling Complexity in the Heart of Software (Hardcover)
by Eric Evans (Author)</td>
</tr>
<tr>
<td><a href="http://www.amazon.com/Pragmatic-Unit-Testing-Java-JUnit/dp/0974514012/ref=pd_bbs_sr_1?ie=UTF8&amp;s=books&amp;qid=1219171184&amp;sr=1-1"><img class="alignleft size-medium wp-image-161" title="Pragmatic Unit Testing in Java with JUnit" src="http://1up4dev.org/wp-content/uploads/2008/08/book-prag-unit-test.jpg" alt="" width="105" height="105" /></a></td>
<td>Pragmatic Unit Testing in Java with JUnit
by Andy Hunt (Author), Dave Thomas (Author)</td>
</tr>
<tr>
<td><a href="http://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X/ref=pd_bbs_sr_1?ie=UTF8&amp;s=books&amp;qid=1206629406&amp;sr=8-1"><img class="alignleft size-medium wp-image-162" title="The Pragmatic Programmer: From Journeyman to Master" src="http://1up4dev.org/wp-content/uploads/2008/08/book-prag-prog.jpg" alt="" width="90" height="112" /></a></td>
<td>The Pragmatic Programmer: From Journeyman to Master
by Andrew Hunt (Author), David Thomas (Author)</td>
</tr>
<tr>
<td><a href="http://www.amazon.com/Head-First-Servlets-JSP-Brain-Friendly/dp/0596516681/ref=pd_sim_b_29"><img class="alignleft size-medium wp-image-163" title="Head First Servlets and JSP: Passing the Sun Certified Web Component Developer Exam" src="http://1up4dev.org/wp-content/uploads/2008/08/book-hf-servlets.jpg" alt="" width="125" height="125" /></a></td>
<td>Head First Servlets and JSP: Passing the Sun Certified Web Component Developer Exam
by Bryan Basham (Author), Kathy Sierra (Author), Bert Bates (Author)</td>
</tr>
<tr>
<td><a href="http://www.amazon.com/Certified-Programmer-310-055-Certification-Guides/dp/0072253606/ref=pd_sim_b_46"><img class="alignleft size-medium wp-image-164" title="SCJP Sun Certified Programmer for Java 5 Study Guide (Exam 310-055)" src="http://1up4dev.org/wp-content/uploads/2008/08/book-scjp.jpg" alt="" width="116" height="116" /></a></td>
<td>SCJP Sun Certified Programmer for Java 5 Study Guide (Exam 310-055)
by Katherine Sierra (Author), Bert Bates (Author)</td>
</tr>
<tr>
<td><a href="http://www.amazon.com/Head-First-Design-Patterns/dp/0596007124/ref=pd_sim_b_12"><img class="alignleft size-medium wp-image-165" title="Head First Design Patterns (Head First)" src="http://1up4dev.org/wp-content/uploads/2008/08/book-hf-dp.jpg" alt="" width="118" height="118" /></a></td>
<td>Head First Design Patterns (Head First)
by Elisabeth Freeman (Author), Eric Freeman (Author), Bert Bates (Author), Kathy Sierra (Author)</td>
</tr>
</tbody></table>
Estou pendente de colocar os livros não técnicos que leio também, mas ainda não tive coragem. :D]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>154</wp:post_id>
		<wp:post_date>2008-08-19 16:20:19</wp:post_date>
		<wp:post_date_gmt>2008-08-19 19:20:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>roger-leituras</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>23</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>uml</title>
		<link>http://1up4dev.org/?attachment_id=860</link>
		<pubDate>Mon, 14 Feb 2011 19:39:31 +0000</pubDate>
		<dc:creator>pbalduino</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2011/02/UMLUSE1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>860</wp:post_id>
		<wp:post_date>2011-02-14 16:39:31</wp:post_date>
		<wp:post_date_gmt>2011-02-14 19:39:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>umluse1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2011/02/UMLUSE1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/02/UMLUSE1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"513";s:6:"height";s:3:"304";s:14:"hwstring_small";s:23:"height='75' width='128'";s:4:"file";s:19:"2011/02/UMLUSE1.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"UMLUSE1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:19:"UMLUSE1-300x177.png";s:5:"width";s:3:"300";s:6:"height";s:3:"177";}s:14:"post-thumbnail";a:3:{s:4:"file";s:19:"UMLUSE1-513x198.png";s:5:"width";s:3:"513";s:6:"height";s:3:"198";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Snapshot Guide (inspirado no Rails Guides)</title>
		<link>http://1up4dev.org/2011/02/documentacao-nao-pode-ser-chato-como-fazer-igual-ao-rails-guides/snapshot_guide/</link>
		<pubDate>Thu, 24 Feb 2011 03:55:12 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2011/02/snapshot_guide.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>891</wp:post_id>
		<wp:post_date>2011-02-24 00:55:12</wp:post_date>
		<wp:post_date_gmt>2011-02-24 03:55:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>snapshot_guide</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>878</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2011/02/snapshot_guide.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/02/snapshot_guide.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"974";s:6:"height";s:3:"784";s:14:"hwstring_small";s:23:"height='96' width='119'";s:4:"file";s:26:"2011/02/snapshot_guide.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"snapshot_guide-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"snapshot_guide-300x241.png";s:5:"width";s:3:"300";s:6:"height";s:3:"241";}s:14:"post-thumbnail";a:3:{s:4:"file";s:26:"snapshot_guide-940x198.png";s:5:"width";s:3:"940";s:6:"height";s:3:"198";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[Snapshot Guide (inspirado no Rails Guides)]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>infinity_test</title>
		<link>http://1up4dev.org/?attachment_id=979</link>
		<pubDate>Sat, 23 Apr 2011 16:27:46 +0000</pubDate>
		<dc:creator>andrefarina</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2011/04/infinity_test.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>979</wp:post_id>
		<wp:post_date>2011-04-23 13:27:46</wp:post_date>
		<wp:post_date_gmt>2011-04-23 16:27:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>infinity_test</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2011/04/infinity_test.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/infinity_test.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"871";s:6:"height";s:3:"192";s:14:"hwstring_small";s:23:"height='28' width='128'";s:4:"file";s:25:"2011/04/infinity_test.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"infinity_test-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"infinity_test-300x66.png";s:5:"width";s:3:"300";s:6:"height";s:2:"66";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rolo Games - Rede Social de Troca de Jogos</title>
		<link>http://1up4dev.org/2012/06/a-experiencia-de-lancar-o-rologames/logo-3/</link>
		<pubDate>Wed, 20 Jun 2012 11:06:44 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2012/06/logo1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1174</wp:post_id>
		<wp:post_date>2012-06-20 08:06:44</wp:post_date>
		<wp:post_date_gmt>2012-06-20 11:06:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>logo-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1161</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2012/06/logo1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/06/logo1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"600";s:6:"height";s:3:"120";s:14:"hwstring_small";s:23:"height='25' width='128'";s:4:"file";s:17:"2012/06/logo1.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"logo1-150x120.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"120";}s:6:"medium";a:3:{s:4:"file";s:16:"logo1-300x60.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"60";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[Rolo Games - Rede Social de Troca de Jogos]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A Arte do Começo - The Art of Start</title>
		<link>http://1up4dev.org/2012/06/concepcao-do-rologames/kawasaki-sm/</link>
		<pubDate>Fri, 22 Jun 2012 19:07:55 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2012/06/kawasaki-sm.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Sorriso pimpão do Sr. Kawasaki]]></excerpt:encoded>
		<wp:post_id>1199</wp:post_id>
		<wp:post_date>2012-06-22 16:07:55</wp:post_date>
		<wp:post_date_gmt>2012-06-22 19:07:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>kawasaki-sm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1184</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2012/06/kawasaki-sm.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/06/kawasaki-sm.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"240";s:6:"height";s:3:"347";s:14:"hwstring_small";s:22:"height='96' width='66'";s:4:"file";s:23:"2012/06/kawasaki-sm.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"kawasaki-sm-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"kawasaki-sm-207x300.jpg";s:5:"width";s:3:"207";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:23:"kawasaki-sm-240x198.jpg";s:5:"width";s:3:"240";s:6:"height";s:3:"198";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[A Arte do Começo - The Art of Start]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>objc1</title>
		<link>http://1up4dev.org/?attachment_id=1315</link>
		<pubDate>Wed, 06 Mar 2013 00:23:31 +0000</pubDate>
		<dc:creator>tonyfabeen</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-9.37.33-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1315</wp:post_id>
		<wp:post_date>2013-03-05 21:23:31</wp:post_date>
		<wp:post_date_gmt>2013-03-06 00:23:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2013-03-04-at-9-37-33-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-9.37.33-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"429";s:6:"height";s:3:"160";s:14:"hwstring_small";s:23:"height='47' width='128'";s:4:"file";s:48:"2013/03/Screen-Shot-2013-03-04-at-9.37.33-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-Shot-2013-03-04-at-9.37.33-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-Shot-2013-03-04-at-9.37.33-PM-300x111.png";s:5:"width";s:3:"300";s:6:"height";s:3:"111";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/Screen-Shot-2013-03-04-at-9.37.33-PM.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen Shot 2013-03-04 at 9.39.02 PM</title>
		<link>http://1up4dev.org/?attachment_id=1316</link>
		<pubDate>Wed, 06 Mar 2013 00:24:42 +0000</pubDate>
		<dc:creator>tonyfabeen</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-9.39.02-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1316</wp:post_id>
		<wp:post_date>2013-03-05 21:24:42</wp:post_date>
		<wp:post_date_gmt>2013-03-06 00:24:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2013-03-04-at-9-39-02-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-9.39.02-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/Screen-Shot-2013-03-04-at-9.39.02-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"727";s:6:"height";s:3:"488";s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:48:"2013/03/Screen-Shot-2013-03-04-at-9.39.02-PM.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-Shot-2013-03-04-at-9.39.02-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-Shot-2013-03-04-at-9.39.02-PM-300x201.png";s:5:"width";s:3:"300";s:6:"height";s:3:"201";}s:14:"post-thumbnail";a:3:{s:4:"file";s:48:"Screen-Shot-2013-03-04-at-9.39.02-PM-727x198.png";s:5:"width";s:3:"727";s:6:"height";s:3:"198";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen Shot 2013-03-04 at 9.37.33 PM</title>
		<link>http://1up4dev.org/?attachment_id=1317</link>
		<pubDate>Wed, 06 Mar 2013 00:25:34 +0000</pubDate>
		<dc:creator>tonyfabeen</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-9.37.33-PM1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1317</wp:post_id>
		<wp:post_date>2013-03-05 21:25:34</wp:post_date>
		<wp:post_date_gmt>2013-03-06 00:25:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2013-03-04-at-9-37-33-pm-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-9.37.33-PM1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/Screen-Shot-2013-03-04-at-9.37.33-PM1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"429";s:6:"height";s:3:"160";s:14:"hwstring_small";s:23:"height='47' width='128'";s:4:"file";s:49:"2013/03/Screen-Shot-2013-03-04-at-9.37.33-PM1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-Shot-2013-03-04-at-9.37.33-PM1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:49:"Screen-Shot-2013-03-04-at-9.37.33-PM1-300x111.png";s:5:"width";s:3:"300";s:6:"height";s:3:"111";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen Shot 2013-03-04 at 9.39.02 PM</title>
		<link>http://1up4dev.org/?attachment_id=1318</link>
		<pubDate>Wed, 06 Mar 2013 00:26:19 +0000</pubDate>
		<dc:creator>tonyfabeen</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-9.39.02-PM1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1318</wp:post_id>
		<wp:post_date>2013-03-05 21:26:19</wp:post_date>
		<wp:post_date_gmt>2013-03-06 00:26:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2013-03-04-at-9-39-02-pm-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-9.39.02-PM1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/Screen-Shot-2013-03-04-at-9.39.02-PM1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"727";s:6:"height";s:3:"488";s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:49:"2013/03/Screen-Shot-2013-03-04-at-9.39.02-PM1.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-Shot-2013-03-04-at-9.39.02-PM1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:49:"Screen-Shot-2013-03-04-at-9.39.02-PM1-300x201.png";s:5:"width";s:3:"300";s:6:"height";s:3:"201";}s:14:"post-thumbnail";a:3:{s:4:"file";s:49:"Screen-Shot-2013-03-04-at-9.39.02-PM1-727x198.png";s:5:"width";s:3:"727";s:6:"height";s:3:"198";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen Shot 2013-03-04 at 9.37.33 PM</title>
		<link>http://1up4dev.org/?attachment_id=1319</link>
		<pubDate>Wed, 06 Mar 2013 00:28:42 +0000</pubDate>
		<dc:creator>tonyfabeen</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-9.37.33-PM2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1319</wp:post_id>
		<wp:post_date>2013-03-05 21:28:42</wp:post_date>
		<wp:post_date_gmt>2013-03-06 00:28:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2013-03-04-at-9-37-33-pm-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-9.37.33-PM2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/Screen-Shot-2013-03-04-at-9.37.33-PM2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"429";s:6:"height";s:3:"160";s:14:"hwstring_small";s:23:"height='47' width='128'";s:4:"file";s:49:"2013/03/Screen-Shot-2013-03-04-at-9.37.33-PM2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-Shot-2013-03-04-at-9.37.33-PM2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:49:"Screen-Shot-2013-03-04-at-9.37.33-PM2-300x111.png";s:5:"width";s:3:"300";s:6:"height";s:3:"111";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen Shot 2013-03-04 at 9.46.23 PM</title>
		<link>http://1up4dev.org/?attachment_id=1320</link>
		<pubDate>Wed, 06 Mar 2013 00:29:21 +0000</pubDate>
		<dc:creator>tonyfabeen</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-9.46.23-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1320</wp:post_id>
		<wp:post_date>2013-03-05 21:29:21</wp:post_date>
		<wp:post_date_gmt>2013-03-06 00:29:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2013-03-04-at-9-46-23-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-9.46.23-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/Screen-Shot-2013-03-04-at-9.46.23-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"409";s:6:"height";s:3:"125";s:14:"hwstring_small";s:23:"height='39' width='128'";s:4:"file";s:48:"2013/03/Screen-Shot-2013-03-04-at-9.46.23-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-Shot-2013-03-04-at-9.46.23-PM-150x125.png";s:5:"width";s:3:"150";s:6:"height";s:3:"125";}s:6:"medium";a:3:{s:4:"file";s:47:"Screen-Shot-2013-03-04-at-9.46.23-PM-300x91.png";s:5:"width";s:3:"300";s:6:"height";s:2:"91";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen Shot 2013-03-04 at 9.45.53 PM</title>
		<link>http://1up4dev.org/?attachment_id=1321</link>
		<pubDate>Wed, 06 Mar 2013 00:30:06 +0000</pubDate>
		<dc:creator>tonyfabeen</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-9.45.53-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1321</wp:post_id>
		<wp:post_date>2013-03-05 21:30:06</wp:post_date>
		<wp:post_date_gmt>2013-03-06 00:30:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2013-03-04-at-9-45-53-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-9.45.53-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/Screen-Shot-2013-03-04-at-9.45.53-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"150";s:6:"height";s:3:"118";s:14:"hwstring_small";s:23:"height='96' width='122'";s:4:"file";s:48:"2013/03/Screen-Shot-2013-03-04-at-9.45.53-PM.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen Shot 2013-03-04 at 9.51.48 PM</title>
		<link>http://1up4dev.org/?attachment_id=1322</link>
		<pubDate>Wed, 06 Mar 2013 00:31:38 +0000</pubDate>
		<dc:creator>tonyfabeen</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-9.51.48-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1322</wp:post_id>
		<wp:post_date>2013-03-05 21:31:38</wp:post_date>
		<wp:post_date_gmt>2013-03-06 00:31:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2013-03-04-at-9-51-48-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-9.51.48-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/Screen-Shot-2013-03-04-at-9.51.48-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"728";s:6:"height";s:3:"493";s:14:"hwstring_small";s:23:"height='86' width='128'";s:4:"file";s:48:"2013/03/Screen-Shot-2013-03-04-at-9.51.48-PM.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-Shot-2013-03-04-at-9.51.48-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-Shot-2013-03-04-at-9.51.48-PM-300x203.png";s:5:"width";s:3:"300";s:6:"height";s:3:"203";}s:14:"post-thumbnail";a:3:{s:4:"file";s:48:"Screen-Shot-2013-03-04-at-9.51.48-PM-728x198.png";s:5:"width";s:3:"728";s:6:"height";s:3:"198";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen Shot 2013-03-04 at 9.57.33 PM</title>
		<link>http://1up4dev.org/?attachment_id=1323</link>
		<pubDate>Wed, 06 Mar 2013 00:33:10 +0000</pubDate>
		<dc:creator>tonyfabeen</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-9.57.33-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1323</wp:post_id>
		<wp:post_date>2013-03-05 21:33:10</wp:post_date>
		<wp:post_date_gmt>2013-03-06 00:33:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2013-03-04-at-9-57-33-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-9.57.33-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/Screen-Shot-2013-03-04-at-9.57.33-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"583";s:6:"height";s:3:"167";s:14:"hwstring_small";s:23:"height='36' width='128'";s:4:"file";s:48:"2013/03/Screen-Shot-2013-03-04-at-9.57.33-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-Shot-2013-03-04-at-9.57.33-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:47:"Screen-Shot-2013-03-04-at-9.57.33-PM-300x85.png";s:5:"width";s:3:"300";s:6:"height";s:2:"85";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen Shot 2013-03-04 at 10.05.15 PM</title>
		<link>http://1up4dev.org/?attachment_id=1324</link>
		<pubDate>Wed, 06 Mar 2013 00:34:07 +0000</pubDate>
		<dc:creator>tonyfabeen</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-10.05.15-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1324</wp:post_id>
		<wp:post_date>2013-03-05 21:34:07</wp:post_date>
		<wp:post_date_gmt>2013-03-06 00:34:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2013-03-04-at-10-05-15-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://1up4dev.org/wp-content/uploads/2013/03/Screen-Shot-2013-03-04-at-10.05.15-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/Screen-Shot-2013-03-04-at-10.05.15-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1279";s:6:"height";s:3:"717";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:49:"2013/03/Screen-Shot-2013-03-04-at-10.05.15-PM.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-Shot-2013-03-04-at-10.05.15-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:49:"Screen-Shot-2013-03-04-at-10.05.15-PM-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:50:"Screen-Shot-2013-03-04-at-10.05.15-PM-1024x574.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"574";}s:14:"post-thumbnail";a:3:{s:4:"file";s:49:"Screen-Shot-2013-03-04-at-10.05.15-PM-940x198.png";s:5:"width";s:3:"940";s:6:"height";s:3:"198";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Post de Inauguração</title>
		<link>http://1up4dev.org/2008/05/post-de-inauguracao/</link>
		<pubDate>Sat, 10 May 2008 19:37:00 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/2008/05/10/post-de-inauguracao/</guid>
		<description></description>
		<content:encoded><![CDATA[Hello hello hello ! Inaugurando o Blog do Mal ...
Foi lançado convites de autores a grandes poggers da atualidade !

A idéia deste blog inicialmente é discutir as dificuldades que vivemos diariamente num ambiente <em>Waterfall</em> 2.0, mais como um desabafo mesmo ! E também é claro, postar sobre tecnologias dos sonhos ... afinal, não é todo mundo que trabalha numa <a href="http://www.thoughtworks.com/">ThoughtWorks</a>, <a href="http://www.37signals.com/">37signals</a>, <a href="http://www.surgeworks.com/">Surgeworks</a> ... etc. que realmente trabalham com tecnologia de ponta !

O que vem a ser <strong>tecnologias dos sonhos</strong> ?!?
Resposta rápida e cruel: São as tecnologias que não podemos desenvolver em nosso ambiente <em>waterfall</em> de trabalho ! Ruby, Ruby on Rails, Python, Java 5 ... e muito mais !

Vamos ver o que vem por ai !

Sucesso e paz a todos !]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>10</wp:post_id>
		<wp:post_date>2008-05-10 19:37:00</wp:post_date>
		<wp:post_date_gmt>2008-05-10 19:37:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>post-de-inauguracao</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hello"><![CDATA[hello]]></category>
		<category domain="post_tag" nicename="inauguracao"><![CDATA[inauguração]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[1up4dev.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Roger Leitehttp://www.blogger.com/profile/08477746727544999338noreply@blogger.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2008/05/post-de-inaugurao.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077737]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-12 19:57:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-12 19:57:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Teste de comentários ...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[HB]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-12 21:36:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-12 21:36:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sô praierooô<br/>Sô poguerooôoo<br/><br/>aí Roger, não convida 2x que eu aceito hein!<br/><br/>Abraço<br/>Humberto]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Error: Access Denied</title>
		<link>http://1up4dev.org/2008/05/error-access-denied/</link>
		<pubDate>Tue, 13 May 2008 20:38:00 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/2008/05/13/error-access-denied/</guid>
		<description></description>
		<content:encoded><![CDATA[Inicio de nova tarefa:
<ul>
	<li> Descobrir onde está o documento de requisito.</li>
	<li> 10 minutos depois, achei o documento, mas só tem tela.</li>
	<li> Descobrir onde está o outro documento de casos de uso.</li>
	<li> 10 minutos, descobri que está em outro documento.</li>
	<li> 10 minutos, descobri que este outro documento não tem a funcionalidade que preciso desenvolver, mas tenho esperanças, pois achei um link pra outro possivel documento.</li>
	<li> 10 minutos, realmente desisto, no documento só tem os tópicos, nada de texto.</li>
	<li> Pergunto ao lider onde encontrar o documento, e é claro que está no Sharepoint.</li>
	<li> Finalmente acesso e ganho um  "Error: Access Denied" ...</li>
</ul>
<a href="http://bp3.blogger.com/_XL8FQmVF9qY/SCn9d4INJ_I/AAAAAAAAAFw/Q4u_m5onkV0/s1600-h/access-denied.png"><img style="display:block;text-align:center;cursor:pointer;margin:0 auto 10px;" src="http://bp3.blogger.com/_XL8FQmVF9qY/SCn9d4INJ_I/AAAAAAAAAFw/Q4u_m5onkV0/s320/access-denied.png" border="0" alt="" /></a>
~40 minutos ... Realmente o <span style="font-style:italic;">Waterfall</span> não tem limites !

obs: Espero que o <span style="font-style:italic;">Request access</span> do Sharepoint realmente funcione !]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date>2008-05-13 20:38:00</wp:post_date>
		<wp:post_date_gmt>2008-05-13 20:38:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>error-access-denied</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cascata"><![CDATA[cascata]]></category>
		<category domain="post_tag" nicename="passando-raiva"><![CDATA[passando raiva]]></category>
		<category domain="category" nicename="processos"><![CDATA[processos]]></category>
		<category domain="category" nicename="waterfall"><![CDATA[waterfall]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[1up4dev.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Roger Leitehttp://www.blogger.com/profile/08477746727544999338noreply@blogger.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2008/05/error-access-denied.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077831]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[HB]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-14 02:26:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-14 02:26:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Iterativo e incremental, oras<br/><br/>E eis que, de surpresa, ouço falar em SharePoint de novo!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Mas que SOA é essa!?</title>
		<link>http://1up4dev.org/?p=260</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=260</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.webservices.org/weblog/joe_mckendrick/the_seven_greatest_soa_mistakes

http://it.toolbox.com/blogs/the-soa-blog/soa-top-ten-mistakes-20821

http://it.toolbox.com/blogs/the-soa-blog/top-soa-mistakes-24844

http://news.zdnet.com/2424-9595_22-184030.html

http://www.infoblogs.com.br/view.action?contentId=35861&amp;Governanca+SOA+Erros+Comuns+e+Solucoes+parte+II

http://www.itweb.com.br/voce_informa/interna.asp?cod=2093

http://shashivelur.com/blog/2009/01/so-what-is-soa/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>260</wp:post_id>
		<wp:post_date>2009-02-23 22:06:09</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hello"><![CDATA[hello]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Autocomplete no Rails com jQuery de modo fácil</title>
		<link>http://1up4dev.org/?p=520</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=520</guid>
		<description></description>
		<content:encoded><![CDATA[http://poocs.net/2006/4/6/introducing-acts-as-searchable

http://codeintensity.blogspot.com/2008/02/auto-complete-text-fields-in-rails-2.html

http://github.com/rails/auto_complete/tree/master]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>520</wp:post_id>
		<wp:post_date>2011-06-28 15:26:33</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hello"><![CDATA[hello]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ae5c0d1b75124ba728060e4d20e821c9</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_91c20c4b523ec63f5c841edd6d3b38bb</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f0af801e43fdb654a27981d279d79efd</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A arte da simplicidade</title>
		<link>http://1up4dev.org/?p=580</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=580</guid>
		<description></description>
		<content:encoded><![CDATA[Além das dicas e assuntos técnicos que abordamos no blog,  nosso tema principal continua sendo como podemos nos tornar programadores melhores. Qual caminhos devemos percorrer ou não. Discutir, questionar, mostrar outros pontos de vista sobre nossa profissão.

Outra idéia é dizer que o software não é nosso. O software é do cliente. E é por isso que o cliente deve estar satisfeito com ele. É apenas uma ferramente para que o cliente consiga conduzir o negócio de uma maneira mais simples. O software deve simplificar o trabalho do cliente. Tenha isso em mente quando começar a ter idéias...

começar falando da idéia, estudar continuamente, aperfeiçoar, mas manter o pé no chão, simplicidade...
quanto mais você sabe, menos você usa.
tentar procurar algum artivo científico falando disso... alguém muito bom tecnicamente que tem uma rotina de vida pacata.
listar também todos os conceitos que estudei até hoje... fazer uma lista grande mesmo
depois dar um exemplo de uma aplicaçãozinha que retorna uma página e explicar todos os conceitos envolvidos e por que é importante saber isso...
idéia: é possível um garoto criar um blog em 15 minutos, mas será que ele sabe o que está realmente fazendo? quais são os coneitos aplicados? quais estatégias está usando? como o mecanismo funciona?

idéia: para projetar algo simples é preciso saber toda complexidade envolvida!
simplificar é complexo!

realidade: por que encontramos profissionais no mercado de trabalho que complicam tudo? não seria muito mais fácil simplificar? resolver o problema da maneira mais simples possível?

usar a metáfora do contexto: imagine apresentar uma pintura abstrata para um leigo. Ele com certeza vai dizer: "é um rabisco sem sentido". Mas a perspectiva de um conhecedor de arte é bem diferente. Este é um exemplo simples de como "conhecimento" faz a difereça. É preciso conhecer muito sobre arte para reconhecer uma boa obra.

Qual a perspectiva de um músico ouvindo funk? Mesmo sendo um gênero popular não significa que é algo de qualidade, que exige conhecimento específico.

(procurar uma metáfora mais próxima da realidade de programaçao...)

Um leigo pode fazer algo simples de qualidade? sim, alguém que não entende nada de música pode compor uma música excelente no ponto de vista técnico.

Um leigo pode fazer algo complexo de qualidade? não, imagine uma sinfonia composta por um funkeiro? não há a menor possíbilidade.

Com software é a mesma coisa... pode um programador inexperiente desenvolver algo complexo de maneira simples? dificilmente....

analogia: mestres de artes marciais. Eu sei que é um péssimo exemplo, mas quem assistiu Karatê Kid lembra do Mestre Miagi que ensinava o Daniel San apenas coisas simples, que ele não entendia no início. Qual a lógica em pintar portões? simplicidade. Somente um mestre consegue ter essa visão de simplicidade. Ele conhece todos os conceitos e técnicas mas decide simplesmente ensinar seu discipulo a pintar portões. Essa é a diferença de um mestre. Ele precisa SABER mas não quer dizer que precisa APLICAR. Como isso seria aplicado com software? (colocar uma foto daquele design do google com apenas um botão e nossas aplicações com dezenas de campos e botões). Os criadores do Google fizeram mestrado sobre pesquisas e etc. Mas criaram o site mais simples possível. Como eles conseguiriam chegar a um design tão simples se não conhecessem a fundo os conceitos de buscas? Essa é a questão

Não sou um mestre, longe disso... sou um eterno aprendiz. Mas já aprendi muita coisa. Mas principalmente aprendi que devo aprender constantemente. Aprender a resolver problemas com simplicidade.

Simplicidade é excelência. E excelência só é conseguida estudo e conhecimento.

finalizar com a idéia de KEEP IT SIMPLE, STUPID!
Tudo que sei é que nada sei!

http://gc.blog.br/2008/08/30/simplicidade]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>580</wp:post_id>
		<wp:post_date>2010-03-26 01:33:45</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hello"><![CDATA[hello]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_b93f5cf6ef2cef38a5771d99e029edd0</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Entrevista com um cascateiro</title>
		<link>http://1up4dev.org/?p=583</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=583</guid>
		<description></description>
		<content:encoded><![CDATA[Conseguimos em primeira mão uma entrevista com um cascateiro - seguidor do Waterfall:

Como você conheceu o waterfall?

Quando eu estava na faculdade e queria me enturmar mais com o pessoal resolvi aceitar... estavamos fazendo um trabalho de estrutura de dados e precisávamos escrever um programa em C para ordenar uma lista de números. Eu não sabia programar e estava meio perdido, não sabia  o que fazer. Desesperado, pedi a um amigo que me ajudasse, mas ele disse que também não sabia nada de C, mas iria "copiar" um programa qualquer, alterar a saída da tela e entregar assim mesmo. Como estava desesperado, resolvi fazer o mesmo. Peguei um "helloworld", copiei vários códigos da apostila para ficar ilegível e alterei os "prints" para simular o que o professor queria. Achei que não daria certo, mas pra minha surpreza o professor me deu nota 7. Esse foi meu primeiro contato com o modelo cascata: "entregar uma coisa que parece o que o cliente queria".

Você experimentou mais?

Você usa waterfall no seu trabalho?

Qual a reação dos seus amigos?

Seus pais sabem?

Você já tentou parar?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>583</wp:post_id>
		<wp:post_date>2009-11-12 23:47:28</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hello"><![CDATA[hello]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Como turbinar seu console IRB (Interactive Ruby Shell)</title>
		<link>http://1up4dev.org/?p=627</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=627</guid>
		<description></description>
		<content:encoded><![CDATA[.irbrc

http://gist.github.com/276299

Falar sobre como navegar nos fontes do IRB.

http://en.wikipedia.org/wiki/Interactive_Ruby_Shell

http://tagaholic.me/2009/05/29/exploring-how-to-configure-irb.html

http://tagaholic.me/2009/05/11/demystifying-irb-commands.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>627</wp:post_id>
		<wp:post_date>2012-12-12 12:06:17</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hello"><![CDATA[hello]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Resenha do livro Menos é mais: os segredos da produtividade</title>
		<link>http://1up4dev.org/?p=630</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=630</guid>
		<description></description>
		<content:encoded><![CDATA[Este livro é como um manifesto ágil para empresas.

O simples e GRANDE objetivo da empresa nunca se origina da contabilidade, recursos humanos ou de um departamento centralizado do planejamento estratégico e não tem nada a ver com os números atuais sobre o lucro do trimestre ou da reação do CEO.

Burocracia

Na maioria das empresas, à medida que a receita aumenta, o mesmo acontece com a burocracia. O cenário é típico e provavelmente lhe é familiar: quando um funcionário parece estar sobrecarregado, em vez de considerar opções paliativas, otimizar o processo ou procurar pelo problema, a maioria das empresa opta por promover a pessoa a chefe.

Oito passos para acabar com a burocracia

Mude tudo o mais rápido que você puder

Engaje as pessoas certas

Acabe com silos funcionais e forme equipes sinterdisciplinares

Descentralize para estimular o empreendedorismo

Diminua os níveis hierárquicos da organização para aumentar a capacidade  de reação ao cliente e às outras partes dentro da empresa

Crie entusiasmo nas fileiras: lidere pelo exemplo visível, mostre à tropa que você se importa - e muito!

Crie e reforce uma cultura de alto desempenho

Veja todas as decisões da perspectiva de "isto ajuda o cliente?" e "isto nos faz ganhar dinheiro?" Em caso negativo, é burocracia. Elimine-a!

Combata os guardiões

O verdadeiro desafio real é investir menos tempo tentando elaborar programas motivacionais e mais tempo imaginando como não atrapalhar as pessoas que tentam fazer coisas boas

Características dos líderes

1. Atenção aos detalhes

2. Fibra moral

3. Simplicidade

4. Competitividade

5. Foco no longo prazo

6. Desprezo pelo desperdício

7. Liderança em orientação

8. Humildade

9. Rejeição de burocracia

10. Crença nas outras pessoas

11. Confiança

O que vem primeiro? O gerente confia nas pessoas e depois espera que tenham confiança nele? Ou os empregados devem confiar primeiro enquanto esperam pacientemente para ganhar a confiança de seus supervisores e patrões?

A confiança existe, ou não existe. Quando a confiança é oferecida parciomoniosamente, não é confiança, mas manipulação; condescentente, desrespeitoso e injusto.

A maioria das empresas têm a cultura da ganância: aumentar lucros! Empresas produtivas possuem uma cultura baseada em verdade, honestidade e respeito. Se um funcionário não acreditar e praticar esses valores, livre-se dele imediatamente. Ele não é necessariamente uma má pessoa, mas é a pessoa errada.

Acabe com hierarquias e de privilégios especiais para executivos. Distinções de classe tornam as pessoas invejosas.

Ouça seus funcionários. Convide-os a participar das decisões estratégicas da empresa.

Recompense equipes por suas metas alcaçadas e produtividade. Deixe que a pressão dos colegas expulsem os osiosos.

http://www.amazon.com/Less-More-Great-Companies-Productivity/dp/1591840015]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>630</wp:post_id>
		<wp:post_date>2010-03-26 21:16:21</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hello"><![CDATA[hello]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Definindo cenários de dados com steps genéricos no Cucumber com FactoryGirl</title>
		<link>http://1up4dev.org/?p=678</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=678</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>678</wp:post_id>
		<wp:post_date>2010-06-02 20:48:36</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>definindo-cenarios-de-dados-com-steps-genericos-no-cucumber-com-factorygirl</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cucumber"><![CDATA[cucumber]]></category>
		<category domain="post_tag" nicename="dicas"><![CDATA[dicas]]></category>
		<category domain="post_tag" nicename="factory-girl"><![CDATA[factory girl]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="ruby-on-rails"><![CDATA[ruby on rails]]></category>
		<category domain="post_tag" nicename="testes-funcionais"><![CDATA[testes funcionais]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Padronizando a geração de chaves de cache com Memorize no Rails</title>
		<link>http://1up4dev.org/?p=723</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=723</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>723</wp:post_id>
		<wp:post_date>2011-01-13 20:38:58</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Sobre programadores, desenvolvedores e ninjas: senioridade e generalismo</title>
		<link>http://1up4dev.org/?p=782</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=782</guid>
		<description></description>
		<content:encoded><![CDATA[existem e tipos de programadores na guerrilha:
- os que recebem uma ordem mas precisam ser guiados (jr)
- os que recebem uma ordem (pl)
- os que tomam iniciativa (sr)

mostrar todos os skills necessários de um desenvolvedor sr:
- dominar n linguagens, desde c-like, tipadas, script, stc
- saber programacao estruturada, orientada a objetos, etc
- dominar estruturas de dados e tecnicas de programacao
- modelar banco de dados. administrar banco de dados
- configurar e administrar um ambiente de producao. webserver, seguranca, bd, ferramentas, firewall, dns, etc
- arquitetura cliente-server, web, desktop, etc

desenvolver mais a idéia... só pensamentos por enquanto]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>782</wp:post_id>
		<wp:post_date>2011-01-22 15:42:56</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Templates dinâmicos client-side para nested attributes com jQuery no Rails</title>
		<link>http://1up4dev.org/?p=784</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=784</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>784</wp:post_id>
		<wp:post_date>2011-01-26 19:50:46</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Criando seu próprio ActiveRecord com Ruby e metaprogramação</title>
		<link>http://1up4dev.org/?p=802</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=802</guid>
		<description></description>
		<content:encoded><![CDATA[- post voltado para quem está aprendendo Ruby e Rails
- mostrar um pouco dos internals do Rails
- exemplo com Sinatra
- HyperactiveRecord]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>802</wp:post_id>
		<wp:post_date>2011-02-01 12:24:27</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Formatando JavaScript no gEdit</title>
		<link>http://1up4dev.org/?p=963</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>miguelhorlle</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=963</guid>
		<description></description>
		<content:encoded><![CDATA[Bom pessoal, depois de muito tempo estou de volta, e venho com uma dica simples porém muito útil: JS-Beautifier no gEdit.

Esta é uma ferramenta de formatação de código que já existe há um bom tempo e que eu vinha usando com uma certa frequência. Ela começou com uma versão web no qual você colava seu código, alterava alguns paramêtros e ela formatava seu código. Na verdade ela ainda existe desta forma, mas agora a coisa ficou melhor, pois os desenvolvedores resolveram transformar em uma biblioteca de código aberto.

O <em>core</em> continua sendo JavaScript, porém agora temos a biblioteca também em python, o que facilita muito sua integração em ambientes *ix (quem souber alguma dica para Windows, é só comentar).

Muitos desenvolvedores usam IDE's monstruosas que fazem de tudo um pouco, como Eclipse, Visual Studio, RubyMine e por aí vai (a lista é grande). Não tenho nada contra, muito pelo contrário, já usei muito e minha idéia não é começar uma guerra sobre editores de código.  Só que nos últimos tempos entrei numa busca incessante pelo simples, tudo que for funcional, útil e muito simples. Cansei de um monte de parafernálias que muitas vezes me distraem de meu objetivo: codificar, por isso tenho usado muito ViM e gEdit como editores de texto de uma forma geral, por isso segue a dica para gEdit.

Esta dica foi implementada e testada em Debian e Ubuntu, mas pode ser facilmente adaptada para outras distros ou até mesmo outros sistemas operacionais. As únicas dependências são python e o próprio gEdit, com o plugin External Tools instalado.

Para instalar este plugin no Ubuntu (Debian), rode este comando ($: é o prompt de usuário do bash):
<pre>$: sudo apt-get install gedit-plugins</pre>
Este comando já instala todos plugins oficiais do gEdit, inclusive o External Tools que é o nosso foco.

Feito isso agora você pode baixar o js-beautifier, que felizmente está hospedado no github em <a title="https://github.com/einars/js-beautify" href="https://github.com/einars/js-beautify" target="_blank">https://github.com/einars/js-beautify</a>. Pode descompactar onde achar melhor, pois depois vamos referenciar esta pasta no gEdit.bEx.: ~/dev/javascript/js-beautify

Para testar se o comando vai funcionar podemos abrir um terminar, na pasta do js-beautifier e executar com um arquivo de exemplo (baixe aqui &lt;link&gt;):

<pre>$: python python/jsbeautifier.py exemplo.js</pre>

Agora vamos ao gEdit, verificar se o plugin External Tools está habilitado: Edit &gt; Preferences, aba Plugins e procure por External Tools, habilite se já não estiver.

Agora vamos configurar a ferramenta para ser chamada por dentro do gEdit.Menu Tools &gt; Manage External Tools...Adicione um novo comando e coloque o nome que desejar, ex.: JS Beautifier.

Copie o script abaixo para ser usado como comando:--codigo#!/usr/bin/env python

<pre>
#!/usr/bin/env python

import os
import sys
import tempfile

jsbeautifier_home = "~/dev/javascript/js-beautify/"

content = sys.stdin.read()
h, tmpfile = tempfile.mkstemp()
os.close(h)

f = open(tmpfile, "w")
f.write(content)
f.close()

cmd = "python python/jsbeautifier.py -s 4 %s"%(tmpfile)
os.chdir(jsbeautifier_home)
content = os.system(cmd)
os.remove(tmpfile)
</pre>
Nos campos restantes: Input: Current Selection.Output: Replace the current selection.Applicability: All documents.

Dessa forma poderemos formatar código javascript em qualquer formato de arquivo (erb, jsp, xhtml, php ...),pois o comando vai formatar o que está selecionado, e vai substituir a seleção pelo resultado.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>963</wp:post_id>
		<wp:post_date>2011-04-25 22:47:51</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Tutorial] Configurando o ambiente de desenvolvimento Ruby: Rubygems e Bundler</title>
		<link>http://1up4dev.org/?p=1071</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1071</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1071</wp:post_id>
		<wp:post_date>2011-08-16 23:17:29</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tutorial-configurando-o-ambiente-de-desenvolvimento-ruby-rubygems-e-bundler</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[If you enjoyed this post, please consider <a href="#comments">leaving a comment</a> or <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">subscribing to the <abbr title="Really Simple Syndication">RSS</abbr> feed</a> to have future articles delivered to your feed reader.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Tutorial] Configurando o ambiente de desenvolvimento Ruby: ViM</title>
		<link>http://1up4dev.org/?p=1074</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1074</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1074</wp:post_id>
		<wp:post_date>2011-08-16 23:19:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tutorial-configurando-o-ambiente-de-desenvolvimento-ruby-vim</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[If you enjoyed this post, please consider <a href="#comments">leaving a comment</a> or <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">subscribing to the <abbr title="Really Simple Syndication">RSS</abbr> feed</a> to have future articles delivered to your feed reader.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Tutorial] Configurando o ambiente de desenvolvimento Ruby: começando com Rails</title>
		<link>http://1up4dev.org/?p=1076</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1076</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1076</wp:post_id>
		<wp:post_date>2011-08-16 23:20:55</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tutorial-configurando-o-ambiente-de-desenvolvimento-ruby-comecando-com-rails</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[If you enjoyed this post, please consider <a href="#comments">leaving a comment</a> or <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">subscribing to the <abbr title="Really Simple Syndication">RSS</abbr> feed</a> to have future articles delivered to your feed reader.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Trabalho em equipe</title>
		<link>http://1up4dev.org/?p=1123</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>rramos</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1123</guid>
		<description></description>
		<content:encoded><![CDATA[A palavra de ordem atualmente é colaboratividade. Sistemas cada vez mais integrados, pessoas cada vez mais atuando mutuamente e essas duas formas de colaboração em sinergia com o objetivo único de se obter produtividade com eficácia em níveis cada vez mais altos, ao menos na teoria.

Na prática o munda gira em outra rotação, desmentindo muitas vezes essas duas naturezas de colaboratividade.

Vejo atualmente sistemas cada vez mais difíceis de se integrar, pessoas recriando a roda a todo momento,  e as maiores pogs[1], gambis[2] ou adapatações técnicas[3] tentando fazer esse meio de campo. Alguns chamam isso de SOA[4], que na teoria convence bem, mas que na realidade é quase impraticável.

Vou me limitar aos sistemas por aqui, já que na minha visão as pessoas são a causa raíz de todo o problema.

A buzzword do momento, ou não tão do momento assim, é colaborativadade ou a mágica de fazer as pessoas interagirem o máximo possível visando obter o melhor dos melhores de seus recursos; além do famigerado clima organizacional idealizado pelo RH.

Basicamente dois comportamentos ou características corroboram para o não alcançamento tanto da colaboratividade quanto do clima organizacional. Primeiramente o orgulho que move as pessoas, impulsionando-as a ver suas idéias, e apenas as suas idéias, levadas a cabo dentro das organizações. Em seguida, o próprio RH que estimula a competitividade interna sempre em busca de resultados, e isso destoa da idéia de colaboração esperada.

Quem nunca vivenciou um ambiente onde poucos fazem muito e muitos fazem pouco, e dentre esses, os que mais se evidenciam são considerados as alavancas da colaboratividade, os precursores dos melhores resultados atingidos? Resumidamente, a conjugação desse verbo seria:

Você idealiza e planeja,

Ele dá tangibilidade à idéia e

Eu apresento os resultados!

Talvez seja um equívoco, mas qual desses pessoas vai ganhar a prenda? Colaboratividade, produtividade e eficácia sem a correta avaliação dos valores - individuais e de equipe - não é efetivamente o caminho para transformar a teoria em prática, algo tangível e mensurável.

Se todos os envolvidos não compreenderem sua parcela de comprometimento e responsabilidade, e mais, não os coloca em prática, colaboração e trabalho em equipe não passarão de teoria e com isso um incontável número de colaboradores descontentes e desmotivados permanecerão borbulhando por aí.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1123</wp:post_id>
		<wp:post_date>2011-12-09 13:54:38</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[If you enjoyed this post, please consider <a href="#comments">leaving a comment</a> or <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">subscribing to the <abbr title="Really Simple Syndication">RSS</abbr> feed</a> to have future articles delivered to your feed reader.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Desenvolvimento do RoloGames</title>
		<link>http://1up4dev.org/?p=1192</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1192</guid>
		<description></description>
		<content:encoded><![CDATA[Dica: <a href="https://bitbucket.org/">bitbucket.org</a>. Lá você consegue criar repositórios privados e de grátis.

Graças aos rascunhos percebemos que o <a title="Simple and flexible HTML, CSS, and Javascript for popular user interface components and interactions." href="twitter.github.com/bootstrap/">Twitter Bootstrap</a> seria um grande aliado.

Livro Rework, coçar a própria sarna. Ideologia 37signals, fazer um produto melhor por não ter verba disponível. Exemplos: OAuth, imagem do perfil vem do facebook ou gravatar, uso do twitter bootstrap.

Quando começamos a codificar, mantemos um TODO no projeto mesmo, e lá era o nosso "quadro" de tasks. Houve um daily bem fiel, toda manhã no café a gente se atualizava do que foi feito e quais tasks cada um pegaria.

Corte de funcionalidades.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1192</wp:post_id>
		<wp:post_date>2013-09-17 14:41:07</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[If you enjoyed this post, please consider <a href="#comments">leaving a comment</a> or <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">subscribing to the <abbr title="Really Simple Syndication">RSS</abbr> feed</a> to have future articles delivered to your feed reader.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TDC, QCon</title>
		<link>http://1up4dev.org/?p=1450</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>pbalduino</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1450</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1450</wp:post_id>
		<wp:post_date>2013-09-03 19:12:48</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Engenharia naïf</title>
		<link>http://1up4dev.org/2008/05/engenharia-naif/</link>
		<pubDate>Wed, 14 May 2008 02:36:00 +0000</pubDate>
		<dc:creator>hbulhoes</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/2008/05/14/engenharia-naif/</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-style:italic;">-- Inaugurando a minha participação no blog --</span>

Sabe aqueles quadros que costumam vender na rua? Esses de feirinha, que são verdadeiros clássicos: casas toscas num gramado, cenários praianos, <a title="Galeria de Arte Tosquista" href="http://shoe-me.blogspot.com/2008_01_01_archive.html#3365084320162022222" target="_new">coisas deste naipe</a>. São parte do que é chamado de <a href="http://pt.wikipedia.org/wiki/Arte_na%C3%AFf" target="_new">arte naïf</a>: obras não necessariamente intelectuais ou acadêmicas. Que podem até ser tecnicamente bem-feitas, mas dificilmente vão transformar seus autores em Van Goghs, mesmo que eles arranquem as próprias orelhas com os dentes.

Lembrei dessas coisas no mês passado, quando eu estava a ponto de precisar desenvolver um parser para uma certa linguagem de programação antiga. O parser seria um pedaço de uma ferramenta que extrai informações sintáticas e estruturais de um programa a partir do seu fonte -- coisa que qualquer IDE atual disponibiliza quando se faz refactoring ou checagem de referências e dependências. Mas, como a tal linguagem não tem exatamente um IDE, a ferramenta (e o parser) tem que ser desenvolvidos "do zero". E lá estava eu estudando as necessidades do meu trabalho.

Em pouco tempo concluí (instintivamente, não objetivamente) que o ideal era construir um mecanismo de parsing genérico, que servisse para qualquer linguagem. Entendi que esse mecanismo era possível de existir, desde que o léxico (sintaxe para definir sintaxes) fosse potente. Foi divertido então definir um léxico que permitisse uma estruturação a la <a href="http://en.wikipedia.org/wiki/Backus-Naur_form" target="_new">BNF</a>. E de forma bastante ingênua parti para montar um protótipo de parser. Um protótipo que entendesse uma linguagem simples. Um parser de XPath, por exemplo, só pra começar...

Foi aí que eu vi que ainda preciso comer muito arroz e feijão! O fato é que eu nunca precisei fazer um compilador na faculdade (ha!), e portanto não sabia que o buraco é muito mais embaixo. Existe um monte de formas de se <a href="http://en.wikipedia.org/wiki/Parser_generator" target="_new">construir um parser</a>, uma porção de <a href="http://en.wikipedia.org/wiki/Comparison_of_parser_generators" target="_new">ferramentas</a>, documentos, exemplos... e eu lá, escavando a pedra pra fazer a roda.

Pra mim foi interessante entender como esses mecanismos funcionam, e também foi bacana ter imaginado alguns algoritmos que, depois vi, são usados no ramo há muito tempo. Mas o ruim da história é ter entrado num caminho arriscado ao criar uma solução duvidosa, por pura ignorância. Nesse episódio eu fui um engenheiro naïf!

A minha "obra" até poderia ser passável tecnicamente, mas sem dúvida eu deixaria uma série de defeitos para trás, que qualquer um mais capacitado iria bater o olho e pensar: <span style="font-style:italic;">mas quem fez esta merda?</span> Que é mais ou menos o que eu penso quando vejo uma ou outra pog alheia...

Seu código se sentiria à vontade na feirinha hippie?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>12</wp:post_id>
		<wp:post_date>2008-05-14 02:36:00</wp:post_date>
		<wp:post_date_gmt>2008-05-14 02:36:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>engenharia-naif</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="devaneios"><![CDATA[devaneios]]></category>
		<category domain="category" nicename="questionamento"><![CDATA[questionamento]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[1up4dev.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Humbertohttp://www.blogger.com/profile/17514111343701686057noreply@blogger.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2008/05/engenharia-naf.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077633]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[miguelbaldi]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-14 14:15:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-14 14:15:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Grande post! Pelo visto teremos grandes revelações literárias por vir. Abraço]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-14 14:22:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-14 14:22:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Tentei fazer um parser esses dias também, segui a mesma trajetória ... acabei que no final, guardando o código nas minhas obras <i>naif</i>.<br/><br/>Belo post !]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[Tiago Albineli Motta]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-15 02:42:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-15 02:42:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Também já dei uma de programador naif criando um compilador simples. No caso a linguagem eu havia criado, bem básica, nos inicios da minha vida nerdiana, quando programava em delphi precisei criar uma linguagenzinha de script para fazer calculos e rodar na aplicação. Foi simples, e hoje se eu olhar o código sem dúvida direi MaQueMerdaEhEssa.com. A notícia boa, é que 7 anos depois, o negócio ainda é usado, funciona direitinho, e felizmente não pediram nenhuma alteração... Se pedirem aí sim vai ser foda.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>A ferramenta/metodologia que ainda não existe.</title>
		<link>http://1up4dev.org/2008/05/a-ferramentametodologia-que-ainda-nao-existe/</link>
		<pubDate>Thu, 15 May 2008 13:47:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/2008/05/15/a-ferramentametodologia-que-ainda-nao-existe/</guid>
		<description></description>
		<content:encoded><![CDATA[Este é meu primeiro <span class="blsp-spelling-error">post</span> aqui no 1<span class="blsp-spelling-error">up</span>4<span class="blsp-spelling-error">developers</span> e tentarei ser <span class="blsp-spelling-error">objetivo</span>.

É fato que a maioria das empresas de desenvolvimento de <span class="blsp-spelling-error">softwares</span> são desorganizadas, têm problemas nas entregas, falta documentação, etc. Outro ponto em comum é a <span class="blsp-spelling-error">espectativa</span> de resolver todos os problemas apenas <span class="blsp-spelling-error">adotando</span> uma ferramenta/metodologia de nome forte ou que ainda não foi inventada.

Só para ilustrar essa afirmação, vou expor algumas situações reais que presenciei:

Multinacional <span class="blsp-spelling-error">alemâ</span> com dificuldades no levantamento de requisitos e testes buscou resolver seus problemas com uma <span class="blsp-spelling-error">suíte</span> de produtos da <span class="blsp-spelling-error">Borland</span>. Não deu certo.
Empresa nacional de médio porte quando enfrentou uma crise financeira por não conseguir cumprir datas buscou solução contratando uma <span class="blsp-spelling-error">consultoria</span> especializada e "organizar" a <span class="blsp-spelling-error">bagunça</span>. Não deu certo e deixou a empresa à beira da falência.
Empresa nacional de pequeno porte pretendia migrar a tecnologia/plataforma de desenvolvimento fornecendo cursos para seus <span class="blsp-spelling-error">desenvolvedores</span> na esperança de melhorar o processo e a qualidade de seu produto. O resultado foi desastroso.

É comum hoje ouvirmos nomes como <span class="blsp-spelling-error">RUP</span>, XP ou <span class="blsp-spelling-error">Scrum</span> como a solução para todos os problemas de uma empresa. Outros nomes como <span class="blsp-spelling-error">UML</span>, Testes Unitários e <span class="blsp-spelling-error">TDD</span> também têm ganhado espaço nessa lista de "celebridades". O erro das empresas é achar que esses nomes são "roupas" que podem ser vestidas ou trocadas facilmente. Elas têm um problema X e acham que resolvem aquilo <span class="blsp-spelling-error">adotando</span> uma <span class="blsp-spelling-error">ferramenta</span>/metodologia Y.

A grande solução para esses problemas são as pessoas, os profissionais da empresa. Encorajar o desenvolvimento profissional, incentivar financeiramente, deixar os profissionais à vontade para opinarem são alguns pontos que geram resultados a longo prazo. Valorizar o profissional na contratação também é muito motivador ao invés de tentar negociar seu salário com base em seu tempo de experiência ou quantidade de ferramentas que já trabalhou.

Só para finalizar o <span class="blsp-spelling-error">post</span>, esperando que tenham entendido a mensagem, fica um artigo do <a href="http://pt.wikipedia.org/wiki/Martin_Fowler"><span class="blsp-spelling-error">Fowler</span></a> falando de quando o <a href="http://martinfowler.com/bliki/CheaperTalentHypothesis.html">barato sai caro</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date>2008-05-15 13:47:00</wp:post_date>
		<wp:post_date_gmt>2008-05-15 13:47:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-ferramentametodologia-que-ainda-nao-existe</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="corporativismo"><![CDATA[corporativismo]]></category>
		<category domain="post_tag" nicename="metodologia"><![CDATA[metodologia]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[1up4dev.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Rodrigohttp://www.blogger.com/profile/15414819394415097763noreply@blogger.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2008/05/ferramentametodologia-que-ainda-no.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077972]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-15 14:38:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-15 14:38:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bem vindo!<br/>É truta, adotar <b>metodologias só em frases</b> não adianta mesmo, o que é necessário são ações. É a mesma coisa que eu, no melhor estilo Homer, falar que agora sou Vegetariano, muito mais saudável  ... e continuar a bater as pratadas de pedreiro. No final, ainda digo pra todos, que ser Vegetariano não funciona ! :D<br/><br/>boa, belo rápido post !]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[Humberto]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-15 18:18:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-15 18:18:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[É isso: a mentalidade de "baixo custo a qualquer custo" é AMADORISMO. Apostar tudo em metodologia mágica é só pra achar culpado. <br/><br/>A metodologia só funciona a partir de um certo nível de profissionalização. Não adianta só abandonar o waterfall. Idéias para posts? Dá pra ir longe nisso.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-15 19:14:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-15 19:14:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<b>A metodologia só funciona a partir de um certo nível de profissionalização.</b><br/>Concordo plenamente !<br/>E vou além, as empresas acreditam que usar uma metodologia serve para "gerenciar" o <i>waterfall</i>, sendo que, o próposito principal de qualquer metodologia, é <b>acabar</b> com o bendito - ou seria maldito? - !]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[miguelbaldi]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-15 19:41:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-15 19:41:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Um dos erros facilmente cometidos por estas empresas é acreditar que o processo/método substitui o valor humano. Empresas como Google provam exatamente o contrário, o sucesso de um determinado produto ou serviço muitas vezes está no esforço de um determinado profissional. Tratar o profissional apenas como uma 'engrenagem' para fazer funcionar um motor (leia-se métodologia) é uma enganação.<br/><br/>Ótimo post! Abraço à todos...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Proposta de discussão: banco de dados</title>
		<link>http://1up4dev.org/2008/05/proposta-de-discussao-banco-de-dados/</link>
		<pubDate>Fri, 16 May 2008 00:58:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/2008/05/16/proposta-de-discussao-banco-de-dados/</guid>
		<description></description>
		<content:encoded><![CDATA[Diferente do meu <a href="http://rodrigopanachi.eti.br/weblog">blog</a>, onde o foco é apresentar as idéias "mastigadas", aqui eu pretendo gerar discussões para que possamos entrar num consenso.

Primeiro, deem uma olhada neste artigo que apresenta <a href="http://blpsilva.wordpress.com/2008/03/17/bancos-de-dados-ja-sao-commodities/">bancos de dados como commodities</a>, ou seja, qualquer um serve. Depois tem mais esses posts sobre <a href="http://mecanicamente.blogspot.com/2007/09/pra-que-orm-se-no-se-usa-oo.html">ORM</a> e <a href="http://log4dev.com/2008/03/11/proposta-de-discussao-sobre-frameworks/">Frameworks</a> que também acho interessante.

Agora gostaria de saber a opinião de vocês: dado um sistema não crítico de mercado (tipo um CRM, e-commerce, portal, etc), onde mais de 50% das funcionalidades são CRUD, 30% relatórios e os 20% restantes alguma lógica e processamento, a escolha do banco de dados e a forma com que os dados serão manipulados são os principais fatores determinantes do sucesso de um projeto?

1... 2... 3... Valendooo!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date>2008-05-16 00:58:00</wp:post_date>
		<wp:post_date_gmt>2008-05-16 00:58:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>proposta-de-discussao-banco-de-dados</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="banco-de-dados"><![CDATA[banco de dados]]></category>
		<category domain="post_tag" nicename="orm"><![CDATA[orm]]></category>
		<category domain="category" nicename="questionamento"><![CDATA[questionamento]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[1up4dev.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Rodrigohttp://www.blogger.com/profile/15414819394415097763noreply@blogger.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2008/05/proposta-de-discusso-banco-de-dados.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078010]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-16 03:07:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-16 03:07:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Minha humilde opinião ...<br/>"a escolha do banco de dados e a forma com que os dados serão manipulados são os principais fatores determinantes do sucesso de um projeto?"<br/>Direto e reto: Não ! Estes <i>commodities</i> influenciam em alguns fatores, mas não nos determinantes !<br/><br/>Ultimamente, acho que o fator determinante é o "relacionamento" com o cliente, e as metodologias agéis mostram maneiras legais de lidar com isso.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[Humberto]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-16 13:33:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-16 13:33:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Escolha do banco de dados: irrelevante (desde que a equipe esteja familiarizada com o sgbd)<br/><br/>Forma como os dados são manipulados: usar do jeito em que a equipe for mais produtiva.<br/><br/>Não tem jeito, a palavra-chave é <b>equipe</b> sempre.<br/><br/>Torcendo um pouco o assunto, torço pelo dia em que os bancos de dados como conhecemos hoje virem passado. CRUD é desumano, anti-natural.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[Rodrigo]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-16 16:58:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-16 16:58:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Concordo com vocês. Acho que o banco de dados tem pouco ou nenhum peso para esses sistemas corriqueiros.<br/><br/>Só levantei a discussão pois um dos pilares do waterfall, defendido pelos "DBAs", é a modelagem de banco de dados como se fosse o ponto principal do sistema. E nós sabemos que isso não funciona. <br/><br/>Reforçando a idéia e aproventando a mensagem do meu post anterior, o que determina sucesso num projeto é a EQUIPE.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[Walter Cruz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-19 16:56:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-19 16:56:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Embora minha preferência seja Postgres, por achá-lo mais completo, tenho de admitir que bancos de dados estão perto de ser commodities.<br/><br/>Já o são na prática pra quem usa ORM e não precisa de todo o poder de fogo de um Oracle ou PostgreSQL, mas se alguém se arriscar a fazer queries na mão, as diferenças ainda serão um pouco chatas de lidar.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>O Processo</title>
		<link>http://1up4dev.org/2008/05/o-processo/</link>
		<pubDate>Tue, 20 May 2008 14:26:00 +0000</pubDate>
		<dc:creator>hbulhoes</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/2008/05/20/o-processo/</guid>
		<description></description>
		<content:encoded><![CDATA[Ultimamente eu tenho me sentido um pouco Josef K, <a href="http://pt.wikipedia.org/wiki/O_Processo">daquela história</a>. Acordo sem peso na consciência, mas basta abrir a porta (ou o Google Reader) e parece que o mundo decidiu que eu preciso tomar parte de um processo, o qual quanto mais eu tento compreender, mais enrolado, culpado e incompetente eu tenho que me sentir.

"O processo" aqui é todo o conjunto de metodologias, patterns, mindsets e filosofias que, se eu não absorver e professar, não sou digno nem de abrir o Visual Basic 4. Claro que ficar expert no processo não é coisa simples assim como ler um blog ou ler um livro. Além de estudar, você tem pôr em prática, compartilhar o conhecimento e encantar as pessoas ao redor, ao mesmo tempo. Você tem que se tornar um especialista em tudo e ter uma wikipédia implantada na cabeça, pra não se esquecer de nada.

De todas as suas especialidades, você deve conhecer os patterns, os anti-patterns, como aplicá-los, como não aplicá-los, os casos de sucesso e os fracassos. E não basta todo o conhecimento puro e simples. Isso é fácil de ter! O passo 1 na sua hierarquia de necessidades é adquirir uma técnica apurada, ficando fera do assembly ao Haskell, do file system à enésima forma normal, do calloc() ao GC, sem tropeços.

Depois você precisa expandir um pouco os seus horizontes com o estudo das metodologias que fazem um software nascer, crescer e vencer. É preciso saber como um projeto é gerido, como os programadores funcionam, o que o cliente realmente quer... enfim, satisfazer todos os <em>stakeholders</em>, como você vai se acostumar a dizer. Tudo isso dentro do orçamento que você vai obviamente saber controlar para depois calcular o ROI -- coisa simples, admita.

E já que está manjando de finanças, o degrau a seguir é acompanhar o mercado de IT corporativo e open-source, para conhecer os produtos, estratégias, <em>mergers</em>, <em>winners</em> e <em>losers</em>. E, conhecendo, escolher o que é melhor. Não vai querer ficar pra trás, né? Não vai ser difícil para alguém tão inteligente quanto você.

Ficará evidente que você não passa deste ponto do processo se não souber aplicar toda a sua <em>expertise</em> na forma de arquiteturas ágeis, interfaces ágeis, <em>teamwork</em> ágil e comunicação ágil. Claro, a esta altura absolutamente tudo o que você faz é ágil de alguma maneira. (Sua namorada pode reclamar, porém.) Este momento é crítico na sua carreira, pois você não pode errar só porque seu desempenho tem que estar num ponto ótimo dentro de 10 ou 12 dimensões. Por sorte, você conhecerá todas as métricas e seus <em>benchmarks</em>, para poder guiar a si próprio e sua equipe.

Então, passando esses níveis de subsolo você está pronto pra atingir o térreo do desenvolvimento bacana de software. Você já tem experiência e conhecimento suficientes para exercer sua profissão em alguma empresa 2.0 (quiçá 3.0!) por aí. Já poderá participar de discussões de arquitetura, engenharia e filosofia de software nos blogs. Você venceu o processo.

Quanto aos Josef K da vida... bom, você sabe o que acontece no final.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date>2008-05-20 14:26:00</wp:post_date>
		<wp:post_date_gmt>2008-05-20 14:26:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>o-processo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="questionamento"><![CDATA[questionamento]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[1up4dev.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Humbertohttp://www.blogger.com/profile/17514111343701686057noreply@blogger.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2008/05/o-processo.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078053]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[Humberto]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-20 17:33:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-20 17:33:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[PS: a escalada do desenvolvedor ficou meio waterfall! Um passo depois do outro. Não foi de propósito, claro. É porque eu ainda não desenvolvi um raciocínio ágil.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>828</wp:comment_id>
			<wp:comment_author><![CDATA[habutre]]></wp:comment_author>
			<wp:comment_author_email>habutre@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>177.60.161.158</wp:comment_author_IP>
			<wp:comment_date>2011-10-26 18:16:40</wp:comment_date>
			<wp:comment_date_gmt>2011-10-26 21:16:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Quase 3 anos e meio depois, nada mudou, acho que piorou. Ia dizer, "quiçá piorou", mas quando usei essa palavara no meu TCC minha orientadora disse que essa palavra não existia! Acho que o problema do processo também passa pela faculdade. Aliás na faculdade você já começa aprender as buzzwords necessárias para ter uma carreira de sucesso.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>830</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email>roger.leite@1up4dev.org</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>187.3.123.82</wp:comment_author_IP>
			<wp:comment_date>2011-11-06 20:47:25</wp:comment_date>
			<wp:comment_date_gmt>2011-11-06 23:47:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Foi um prazer reler esta pérola muito bem escrita pelo pai Beto! Realmente, o texto tem potencial para ser atual por décadas.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The Pragmatic Programmer, no ambiente Waterfall é claro !</title>
		<link>http://1up4dev.org/2008/05/the-pragmatic-programmer-no-ambiente-waterfall-e-claro/</link>
		<pubDate>Mon, 26 May 2008 12:38:00 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/2008/05/26/the-pragmatic-programmer-no-ambiente-waterfall-e-claro/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X"><img style="float:left;cursor:pointer;margin:0 10px 10px 0;" src="http://bp1.blogger.com/_XL8FQmVF9qY/SDqv0OnB-jI/AAAAAAAAAF4/DLYKHqhh_2Y/s320/pragmatic-programer-book.jpeg" border="0" alt="" /></a>

Estou lendo o consagrado <a href="http://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X">The Pragmatic Programmer</a>, o livro é ótimo e faz com que eu tenha certeza que sou um sadomasoquista -calma, eu vou explicar-. Da sua capacidade técnica eu nunca desconfiei, pois sempre é citado nas lista de "top hits" de pessoal muito bom como o <a href="http://gc.blog.br/2008/03/27/10-livros-recomendados-para-desenvolvedores/">Guilherme Chapiewski</a> e <a href="http://blog.fragmental.com.br/2008/05/20/trilha-de-livros-desenvolvedor/trackback/">Phillip Calçado</a>.
Agora entra a explicação do sadomasoquismo ... ler um livro destes, realmente nos faz pensar, tanto em corrigir hábitos ruins que adquirimos com o tempo, quanto novas possibilidade em automatizar todas as tarefas rotineiras por exemplo. Até ai tudo bem, maravilha, o livro até parece uma auto-ajuda alá Paulo Coelho para o programador sofrido e abatido pelo rotina Waterfall ... E é nesse momento que volto a realidade e lembro que não sou um programador e muito menos pragmático, pois aqui, no <span style="font-style:italic;">real world</span> Waterfall eu sou apenas um macaco digitador, logo adaptei algumas lições do livro para a vida real:
<ul>
	<li><a href="http://www.artima.com/intv/dry.html"><span style="font-style:italic;">The DRY Principle</span></a>, bom aqui é diferente, parafraseando o Miguel, aqui temos o <span style="font-style:italic;">PRY Principle</span>, que se auto explica, <span style="font-style:italic;">Please Repeat Yourself</span>.</li>
	<li><span class="ts"><a href="http://www.artima.com/intv/adapt.html">Building Adaptable Systems</a>, essa parte aqui se resume a criar "flags" no banco de dados e dar um nome bonitinho de "parametrização".</span></li>
	<li><span class="ts"><a href="http://www.artima.com/intv/domain.html">Programming Close to the Domain</a>, Domain !?! Seria enviar 18 ou mais parâmetros pra procedures que contém as regras de negócio ? Se for, aqui a gente faz !</span></li>
	<li><span class="ts"><a href="http://www.artima.com/intv/defense.html">Programming Defensively</a>, aqui isso se resume a colocar logs em lugares chaves pra passar a culpa do bug para outro equipe.</span></li>
</ul>
É claro que existem mais conceitos, mais para um programador-pragmático-waterfall os principais estão acima. O significado real de cada tópico você pode ver nos links, apesar que nada substitui a leitura do mesmo, que por sinal eu recomendo!

Enquanto isso, continuo com a minha sessão "sado", lendo sobre <a href="http://en.wikipedia.org/wiki/Domain-driven_design">DDD</a> e tentando descobrir <a href="http://thiagoarrais.wordpress.com/2007/12/10/resenha-por-que-as-pessoas-de-negocios-falam-como-idiotas/trackback/">Por que as pessoas de negócios falam como idiotas</a>.

Qualquer desabafo deixem nos comentários.

*obs: o link do amazon não é "paitrocinado", só ilustrativo mesmo.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date>2008-05-26 12:38:00</wp:post_date>
		<wp:post_date_gmt>2008-05-26 12:38:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-pragmatic-programmer-no-ambiente-waterfall-e-claro</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="pragmatic-waterfall"><![CDATA[pragmatic waterfall]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="category" nicename="resenhas"><![CDATA[resenhas]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[1up4dev.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Roger Leitehttp://www.blogger.com/profile/08477746727544999338noreply@blogger.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2008/05/pragmatic-programmer-no-ambiente.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078154]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[miguelbaldi]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-26 13:55:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-26 13:55:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excelente post! Ainda vou ler este livro, hehe.<br/><br/>Completando, temos:<br/><br/>-Duck Typing for Use Cases:<br/> Se parece uma caso de uso, se soa como um caso de uso...É um caso de uso!!! Mais uma funcionalidade inútil para o cliente (ou séria idiota que financia um pesadelo esperando um sonho!).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[Farina]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-26 21:30:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-26 21:30:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Grande Roger Alberto de Nobrega.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>55</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; TPW - Colocando dicas em prática]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2008/08/tpw-colocando-dicas-em-pratica/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2008-08-18 14:02:55</wp:comment_date>
			<wp:comment_date_gmt>2008-08-18 17:02:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] de ler The Pragmatic Programmer é natural ficar empolgado, bom, uma prova disso foi meu próprio post sobre o assunto. Depois de [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>90</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; Arquiteto Cascateiro]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2008/11/arquiteto-cascateiro/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2008-11-07 06:44:59</wp:comment_date>
			<wp:comment_date_gmt>2008-11-07 09:44:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Acredito muito na teoria que desenvolver software não é construir prédios. Livros de renome como Pragmatic Programmer citam [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>O paradoxo: iterativo-incremental x confiança</title>
		<link>http://1up4dev.org/2008/05/o-paradoxo-iterativo-incremental-x-confianca/</link>
		<pubDate>Mon, 26 May 2008 18:00:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/2008/05/26/o-paradoxo-iterativo-incremental-x-confianca/</guid>
		<description></description>
		<content:encoded><![CDATA[Recentemente trabalhei em uma empresa de pequeno porte tentando implantar (ensinar, vender, disseminar, ou outro termo que caiba aqui) Scrum na tentativa de organizar e agilizar o processo de desenvolvimento do software da empresa, que até o momento só conhecia (e conhece) Waterfall.

As desculpas da empresa para não adotar Scrum (ou outro processo ágil) são todas apoiadas em confiança (ou desconfiança): como confiar num projeto que não tem tudo detalhadamente especificado desde o início? Era comum ouvir: "só isso não vai dar certo", "precisamos detalhar todas as funcionalidades primeiro", "não quero chegar lá na frente e ter que mudar alguma coisa hein", "o cliente não vai querer comprar uma coisa que ele nem sabe o que é".

Na ocasião, encontrei este <a href="http://www.agileproductdesign.com/blog/dont_know_what_i_want.html">artigo</a> falando sobre desenvolvimento iterativo e incremental, e utilizei estas imagens para (tentar) argumentar meu ponto de vista.

Iterativo:
<a href="http://bp3.blogger.com/_5zxY-DmU9a8/SDr7jaCyLPI/AAAAAAAAAAU/KpwkWCPETcU/s1600-h/incrementing.jpg"><img style="cursor:pointer;" src="http://bp3.blogger.com/_5zxY-DmU9a8/SDr7jaCyLPI/AAAAAAAAAAU/KpwkWCPETcU/s320/incrementing.jpg" border="0" alt="" /></a>

Incremental:
<a href="http://bp1.blogger.com/_5zxY-DmU9a8/SDr7b6CyLOI/AAAAAAAAAAM/SAcQqmmkHZA/s1600-h/iterating.jpg"><img style="cursor:pointer;" src="http://bp1.blogger.com/_5zxY-DmU9a8/SDr7b6CyLOI/AAAAAAAAAAM/SAcQqmmkHZA/s320/iterating.jpg" border="0" alt="" /></a>

É evidente que ninguém entendeu a mensagem. Para eles, a confiança ainda estava em jogo. Em termos de proteção, o Waterfall ainda garante uma "falsa segurança" à empresa: "estamos entregando apenas o que estava documentado nas especificações", "a documentação nos protege".

Bom, tá aí um resumo da minha experiência e tenho certeza que vocês já passaram por algo parecido. Continuamos nos comentários...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>17</wp:post_id>
		<wp:post_date>2008-05-26 18:00:00</wp:post_date>
		<wp:post_date_gmt>2008-05-26 18:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>o-paradoxo-iterativo-incremental-x-confianca</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cascata"><![CDATA[cascata]]></category>
		<category domain="post_tag" nicename="corporativismo"><![CDATA[corporativismo]]></category>
		<category domain="post_tag" nicename="metodologia"><![CDATA[metodologia]]></category>
		<category domain="category" nicename="processos"><![CDATA[processos]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="category" nicename="waterfall"><![CDATA[waterfall]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[1up4dev.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Rodrigohttp://www.blogger.com/profile/15414819394415097763noreply@blogger.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2008/05/o-paradoxo-iterativo-incremental-x.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077606]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[Rodrigo]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-26 18:31:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-26 18:31:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[PS: O post ficou meio "vago", mas estou escrevendo "incrementalmente"... hehehe]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[Humberto]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-26 18:57:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-26 18:57:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No Brasil existe a "mentalidade cartorial", ou seja, só vale o que está escrito. Dizem que isso é herança ibérica. De qualquer forma essa mentalidade pode justificar essa sensação de segurança <i>proporcionada</i> pelos contratos e especificações. As responsabilidades não são intrínsecas, têm que estar detalhadas em algum papel.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[Miguel Galves]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-26 19:45:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-26 19:45:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[O que mais me incomoda nesta visão de  "documente TUDO antes de implementar" é que raramente o cliente tem uma noção completa do que ele quer ou precisa. E se ele não tem noção, fica difícil especificar tudo no início, e duas coisas irão acontecer:<br/><br/>1) a especificação inicial vai ser que nem a cara do analista, e em algum ponto do processo será necessário fazer tudo novamente<br/>2) o cliente vai descobrir que certas coisas não são como ele imaginava, e e em algum ponto do processo será necessário fazer tudo novamente<br/><br/>O segundo caso é o que mais me incomoda. Porquê apesar de não conhecermos bem o negócio do cliente, em geral sabemos melhor do que ele o que pode funcionar ou não  em software. E ainda assim, ele é quem manda e define design.<br/><br/>Mas como foi dito em outro post, eu ainda vou trabalhar em uma empresa ideal onde tudo funciona e o café não dá cancer....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[Humberto]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-26 20:46:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-26 20:46:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Completando o que o Miguel disse, desde os tempos mais primórdios Fred Brooks já constatava que o software é tão vivo que, concluída a dita especificação, nesse exato momento ela já está obsoleta, pois as regras que lhe deram origem já estariam ligeiramente diferentes... e mesmo que a coisa não seja assim tão fluida, todos já se depararam com a seguinte situação: o software está "pronto" e o cliente, ao experimentá-lo, diz que <i>na verdade</i> precisa de outra coisa. Mecanicamente dizemos, "não está na especificação!", e vence quem falar mais alto.<br/><br/>Não é que ele esteja errado em "reclamar" do software. O cliente apenas percebeu que pode ir um pouco mais longe agora. Ele não tinha como melhorar a especificação que deu origem ao sistema, mas agora que as coisas estão um pouco mais redondas e alguns problemas foram tirados do campo de visão, ele pode ir mais além com o sistema. Neste momento temos um contrato engessado para atrapalhar. Um contrato que, no máximo, prevê uma taxa de manutenção que a empresa fornecedora do sistema usa de forma mesquinha.<br/><br/>É um jeito de agir que está profundamente enraizado em nós e nos clientes. Fato é que dificilmente são encontradas pessoas esclarecidas tanto de um lado quanto do outro.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Frequently Asked (by me) Questions, parte I</title>
		<link>http://1up4dev.org/2008/05/frequently-asked-by-me-questions-parte-i/</link>
		<pubDate>Mon, 26 May 2008 18:42:00 +0000</pubDate>
		<dc:creator>hbulhoes</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/2008/05/26/frequently-asked-by-me-questions-parte-i/</guid>
		<description></description>
		<content:encoded><![CDATA[Um post no estilo "remoendo coisas que passam pela minha cabeça". À medida em que continuarem passando, aumento a FAQ.
<ol>
	<li><strong>Por que se fala mais de processos e ferramentas do que de indivíduos e interações?</strong>
O item 1 do <a id="zg2u" title="manifesto agile" href="http://agilemanifesto.org/" target="_blank">manifesto agile</a> não me parece tão professado quando se observa a quantidade de informação dedicada a sistematizar -- isto é, pôr em um processo -- as alternativas agile. É da natureza do engenheiro colocar tudo em um diagrama?</li>
	<li><strong>Por que tanta gente (incluindo eu) prefere reclamar do emprego ao invés de arrumar coisa melhor para fazer?</strong>
Parece haver uma terra prometida onde os projetos não atrasam, os clientes estão sorrindo, os chefes têm bom senso e os salários são muito bons. Lá você vai trabalhar quatro dias por semana e tem um andar com mesas de sinuca. Você acha que merece trabalhar lá, mas se conforma com "a situação", que "é assim mesmo", e ainda cobra pouco por isso.</li>
	<li><strong>Como metodologisificar* os projetos concebidos em erro?</strong>
Imagine o seguinte: o cliente precisa cumprir uma meta, não vai conseguir e convenceu você a <span style="text-decoration: line-through;">levar a culpa</span> tocar o projeto. Não foi difícil te convencer, pois você precisa da fatura. Qual metodologia vai te salvar? Em casos assim, é sempre erro de negociação ou o projeto pode ser metodologizado* direito?

<span style="font-size:78%;">*Dá pra sentir o quanto eu gosto da palavra metodologia</span></li>
	<li><strong>Por que é tão difícil segurar gente boa na equipe?</strong>
Provavelmente o seu talentoso colega vai trabalhar num lugar que oferece praticamente as mesmas CNTP para a proliferação de programadores medíocres: projetos mal geridos, chefes acomodados, clientes insanos e café ruim. Tudo por 1 ou 2 reais a mais à hora. Por que tantas empresas insistem em tratar programador como commodity? (Os signatários do blog já viram pessoas sendo pagas para dizer isso.)</li>
	<li><strong>Por que é tão difícil mandar os incompetentes embora?</strong>
Qualquer pessoa que faça a mesma coisa do mesmo jeito há mais de um ano está acomodada. Uma empresa que aceita um recurso desses, também. Desconfio que quando ela hesita em mandar incompetentes embora alegando "perda de conhecimentos <span style="text-decoration: line-through;">esclerosados</span> acumulados", ela quer dizer "somos incapazes de fazer avaliação profissional objetiva". Engraçado: cadê o programador-commodity nessas horas?</li>
	<li><strong>Existe uma palavra melhor para <em>iteração</em>?</strong>
Essa palavra é muito pedante. Só os iniciados sabem do que se trata, e os demais ficam pensando em "interação". Que, na boa, pode muito bem se referir à mesma coisa. Não estou falando de "iteração de loop/enumeração/lista", onde a tal palavra é indispensável. Agora, falando de projetos, com gente normal (não-programadora), que se fale então em ciclo, passo, ação, ou interação mesmo -- preciosismo pra quê, meu deus.</li>
	<li><strong>Por que as empresas acreditam em antivírus?</strong>
Vou ter que interromper a escrita das FAQs pois o antivírus começou a executar sua rotina diária. Ele não vai encontrar nenhum vírus mas a empresa vai dormir tranqüila. Enquanto isso, estou numa máquina Windows com direitos de admin local e o único browser que posso usar é o Internet Explorer 7. Paciência.</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date>2008-05-26 18:42:00</wp:post_date>
		<wp:post_date_gmt>2008-05-26 18:42:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>frequently-asked-by-me-questions-parte-i</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="devaneios"><![CDATA[devaneios]]></category>
		<category domain="post_tag" nicename="faq"><![CDATA[faq]]></category>
		<category domain="category" nicename="questionamento"><![CDATA[questionamento]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[1up4dev.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Humbertohttp://www.blogger.com/profile/17514111343701686057noreply@blogger.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2008/05/frequently-asked-by-me-questions-parte.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078279]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[Bruno Carvalho]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-26 19:34:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-26 19:34:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Roger Leite,<br/><br/>Primeiramente obrigado por visitar meu blog ! <br/><br/>Sobre o seu blog, achei muito interessante e divertida a forma como você coloca suas opiniões. Já assinei no google reader e a galera da minha equipe da globo-ponto-com também !<br/><br/>parabéns :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[Tiago Peczenyj]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-26 19:38:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-26 19:38:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Faltou o:<br/>Por que as empresas acreditam que devem restringir sites <i>inuteis</i> como google, msdn e java.sun.com?<br/><br/>Afinal, quem usa isso? ;-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[Rodrigo]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-26 19:55:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-26 19:55:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fantástico! E reforçando o item 4, tive que ouvir "programador se acha em qualquer lugar... é só balançar uma árvore que cai um monte deles..."]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-27 02:16:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-27 02:16:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Bruno Carvalho<br/>Obrigado pelo comentário-retribuição. Somente para constar, como escrevo pouco e mau, acabei apelando para a "inteligência coletiva", convidei um pessoal que trabalha(ou) comigo e toparam !<br/><br/>Ah, e quem me incentivou - sem saber - foi o próprio Peczenyj, que comentou no meu falecido blog de um único post, logo quando entrou ai na Globo !<br/><br/>valeu !]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[Miguel Galves]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-27 13:39:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-27 13:39:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Outras perguntas pertinentes:<br/><br/>- Porque é tão difícil conseguir máquinas decentes para trabalho na maioria das empresas de desenvolvimento de SW?<br/><br/>- Porque é tão difícil conseguir que uma empresa compre alguma lincença de  SW importante para o trabalho (apesar de que isso em geral não me incomoda já que eu trabalho apenas com SW livre)?<br/><br/>- Porque empresas se dão o trabalho de colocar firewalls que bloqueiam o acesso a certos sites, quando é obvio que existem workarounds simples?<br/><br/>- Porque todos concordam que a apple e o google fazem produtos com interfaces incríveis, mas na hora do vamovê, design é sempre algo deixado pra ultima hora e ainda falam que isso não é pra gente?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[Humberto]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-27 13:55:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-27 13:55:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Miguel, essas perguntas já dão idéia para outros posts!<br/><br/>Acho que vou continuar a FAQ mais cedo que eu pensava...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[Miguel Galves]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-28 12:18:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-28 12:18:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Humberto,<br/><br/>se quiser, podemos fazer um livro sobre as perguntas que não querem calar do mundo da computação]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Frequently Asked (by me) Questions, parte II</title>
		<link>http://1up4dev.org/2008/05/frequently-asked-by-me-questions-parte-ii/</link>
		<pubDate>Tue, 27 May 2008 21:23:00 +0000</pubDate>
		<dc:creator>hbulhoes</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/2008/05/27/frequently-asked-by-me-questions-parte-ii/</guid>
		<description></description>
		<content:encoded><![CDATA[Prosseguindo com a série de perguntas que não querem calar, desta vez com um enfoque em RH &amp; correlatos. Já com sugestões do respeitável público! Continuem comentando. A intenção é catalogar tosquices de comportamento encravadas no nosso cotidiano.
<ol>
	<li><strong>Por que "anos de experiência" são tão importantes nos classificados de emprego?</strong>
As profissões de informática já existem há décadas, e existe um grande histórico de coisas que deram certo e outras que nem tanto. Entre essas últimas, persiste uma forma garantida de contratar gente inepta, ao mesmo tempo em que aliena bons profissionais: a temível "experiência comprovada" em alguma coisa! Não importa se o candidato trabalhou uma vez por mês ou 16h por dia com a tal tecnologia durante todo o tempo requerido, ou se ele trabalhou com algo similar e não terá dificuldade, ou se consegue tranqüilamente ficar craque no tal requisito em duas semanas. Competência e experiência se confundem de forma surreal. É tão difícil assim avaliar aptidões?</li>
	<li><strong>Se certificações são tão inúteis, por que fazem tanto sucesso entre candidatos e recrutadores?</strong>
Existe um debate acalorado sobre a utilidade/qualidade das certificações como forma de filtro de candidatos a emprego. As empresas não abrem mão de exigir algum diploma, pois a oferta está grande. Os candidatos, por sua vez, fazem sacrifícios para colocar uma estrelinha a mais no CV, pois a concorrência está grande. E na prática, quando pintar um problema, tanto o profissional ultra-graduado quanto o humildezinho vão recorrer a dois recursos: (1) capacidade de raciocínio e (2) Google. Quem tira proveito disso tudo além das empresas de treinamento?</li>
	<li><strong>Por que contratadores dificultam o acesso à internet por parte dos contratados?</strong> <em>by <a id="ytwi" title="peczenyj" href="http://peczenyj.blogspot.com/" target="_blank">peczenyj</a></em>
Será que quem contrata acha que o cara vai ser mais produtivo se ficar longe do GMail, MSN, Terra Esportes, 1Up4Dev? Sei lá. Eu achava que as empresas contratavam pessoas para que elas atingissem determinados objetivos, e não para que produzissem código ininterruptamente, sem "distrações". Mas pode ser que, para elas, a produtividade seja um número, não um valor.</li>
	<li><strong>Qual é o sentido de se impor políticas de segurança inócuas?</strong> <em>by <a id="aq9s" title="miguel" href="http://log4dev.com/" target="_blank">miguel</a></em>
Há quem se sinta seguro contratanto dummies quaisquer para implementar filtros de firewall e fazer papel de polícia, bloqueando pen drives e colocando a impressora pra funcionar só das 8 às 18h. Missão: racionalizar o uso dos recursos de trabalho! Aumentar a segurança! Impedir vazamento dos fontes! Ao mesmo tempo, relaxam no recrutamento e logo a empresa vai estar infestada de pessoas que pareciam super-bem-intencionadas, mas vão passar o dia vendendo muamba no Mercado Livre através de um proxy russo. Ou emporcalhando os preciosos fontes, o que é bem pior que roubá-los.</li>
	<li><strong>Por que contratados e contratadores gostam de se tratar como empregados e patrões, mesmo em condições "PJ"?</strong>
É fato inegável que a carga escorchante de tributos incidentes sobre a folha de pagamento leva as empresas a procurarem alternativas. Invariavelmente elas sub-contratam outras empresas para que, estas sim, se virem com o problema da mão-de-obra. Mas alguém já viu isso acontecer pra valer? O que existe é um local de atividade, um horário de trabalho, um salário, e cara feia se você quiser atender outro "cliente". Os contratados não agem como empresários, embora paguem caro para o serem. E parece que ninguém se incomoda com o teatrinho patrão-empregado.</li>
	<li><strong>Qual a lógica em se cobrar por hora e não ganhar por hora?</strong>
Os iniciantes começam com 10 ou 12 reais. Os júniores podem sonhar com o dobro disso. Os plenos estão na faixa dos 30 ou 35. E para os sêniores, o céu é o limite! Mas, curiosamente, quase todos trabalham 160 horas por mês. Quero dizer, <em>são pagos por</em> 160 horas trabalhadas no mês, recorrendo talvez a um <em>banco de horas</em> (muitas vezes fictício) quando a conta estoura. Ainda assim, freqüentemente gostamos de calcular nossos rendimentos pelo valor-hora, sonhando que estaríamos quase ricos se as contas batessem. 160 horas, my ass.</li>
	<li><strong>Como se enquadram projetos temporários nas variantes do Agile? Ou: posso ser free-lancer e agile ao mesmo tempo?</strong>
Esta pergunta não é irônica (é, as outras pretendiam ser). É uma dúvida que eu tenho de verdade. Não sou expert em Agile/Scrum/XP/etc, e lendo a respeito dessas formas de trabalho, às vezes acho difícil compatibilizar a idéia de contrato temporário com desenvolvimento incremental sem tempo para terminar. Agile, por natureza, contra-indica prazos precisos. O contrato temporário, por natureza, baseia-se no inverso. Gostaria de entender melhor como essa situação já se resolveu na vida real.</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2008-05-27 21:23:00</wp:post_date>
		<wp:post_date_gmt>2008-05-27 21:23:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>frequently-asked-by-me-questions-parte-ii</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="faq"><![CDATA[faq]]></category>
		<category domain="category" nicename="questionamento"><![CDATA[questionamento]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[1up4dev.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Humbertohttp://www.blogger.com/profile/17514111343701686057noreply@blogger.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2008/05/frequently-asked-by-me-questions-parte_27.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078266]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-27 23:18:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-27 23:18:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No melhor estilo agressivo ! Assim que gosto de ver !! :D<br/><br/>Sobre a questão 14, não posso ajudar sobre Agile, mas sobre o Waterfall eu te garanto que não existe projeto temporário, quando um projeto acaba é porque morreu mesmo, ninguém mais compra/usa.<br/><br/>sucesso!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[Rodrigo]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-27 23:46:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-27 23:46:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Quanto ao item 8, e já conversamos uma vez sobre isso, é uma triste realidade. Infelizmente os "analistas" de RH e gestores tratam desenvolvedores da mesma maneira que tratam administradores de empresas ou operadores de guindastes. O que importa é o tempo de "experiência". Capacidade, comprometimento, facilidade de aprendizado, profissionalismo, etc, são qualidades irrelevantes para quem enxerga programador/desenvolvedor como commodity.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[Miguel Galves]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-28 12:24:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-28 12:24:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Dois pontos que merecem destaque nesta lista de perguntas:<br/><br/>1) a respeito das certificações: eu perdi respeito por elas há muito tempo. Eu já vi barbaridades escritas por programadores certificados. Afirmar "eu sou expert em programação pq sou certificado é besteira". Seria o mesmo que afirmar que fulaninho é ótimo escritor pq tem o TOEFL. No máximo, ele sabe as regras de gramática. As únicas áreas que eu acho que uma certificação pode ajudar são em trabalhos técnicos de manutenção.<br/><br/>2) A questão da experiência, por parte dos recrutadores. Eu vou mais longe: eu tenho horror a esses recrutadores das famosas "Consultorias de RH de TI", que no fundo querem ganhar o seu e não entendem picas de tecnología. Uma vez me ligaram pra sondar pra um trabalho. A mocinha, tadinha, tinha um checklist. Por telefone me perguntou se eu sabia Java...disse que era minha especialidade...daí perguntou se eu sabia VB..disse que tinha brincado em casa...e eu fui eliminado :-P<br/><br/>Não é por nada não, mas depois de ver de perto os processos seletivos  da Google e da MS, o resto é resto.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[Guilherme Piccin]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-29 00:10:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-29 00:10:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[De certa forma eu até concordo que em algumas situações é necessário exigir "anos de experiência", pois já tive essa experiência. Um projeto foi fechado do dia pra noite e precisávamos de gente experiente em Java. Como a empresa considerava o projeto um investimento no cliente, resolveu pagar mais caro nos analistas experientes do que treinar quem não tivesse qualificação. Mas cada caso é um caso.<br/>Sobre usar a internet, sou totalmente o incentivo do uso consciente e ético. Bloquear o uso, é a mesma coisa que colocar uma boqueira e querer controlar os funcionários no cabresto, igual fazemos com burro de carga. Daqui a pouco vão proibir o uso de celular e mp3 player no trabalho, pois estamos lá para trabalhar, não para ouvir música... [tem um post no meu blog sobre isso]<br/><br/>Continue com a série, está bem interessante! Um abraço]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[Humberto]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-29 02:30:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-29 02:30:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Guilherme, concordo que a pessoa só fica realmente preparada depois de ralar muito tempo em cima de algum assunto ou ferramenta. Duro é que em muitos casos as empresas reduzem essa "bagagem" profissional a um mero número, N anos de experiência, para facilitar um filtro de candidatos.<br/><br/>Nessa redução, um cara que tenha 3 anos de C# é considerado "júnior" em Java, quando é evidente que as duas linguagens têm muito em comum e que o programador talentoso não terá dificuldade em assimilar o conhecimento que lhe falta.<br/><br/>Talvez uma avaliação mais profunda, que revelasse o potencial dos candidatos, seja inviável financeiramente para as empresas de software, muitas delas pequenas demais. Daí a necessidade de que as empresas de recrutamento, que hoje são meros bancos de dados de currículos, executem avaliações a um custo atraente. "It's not rocket science!"]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Ressuscitando o webdesigner</title>
		<link>http://1up4dev.org/2008/05/ressuscitando-o-webdesigner/</link>
		<pubDate>Wed, 28 May 2008 18:16:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/2008/05/28/ressuscitando-o-webdesigner/</guid>
		<description></description>
		<content:encoded><![CDATA[Ultimamente temos acompanhados posts-desabafo sobre metodologias e o cenário atual do mercado de desenvolvimento de software. Pois bem, mudemos de assunto um pouco.

Outro dia estava tendo uma <span style="text-decoration: line-through;">conversa</span> discussão com meu amigo Nivaldo sobre interfaces web com uso abusivo de javascript. Aí lembrei o que o <a href="http://log4dev.com/">Miguel</a> disse sobre interfaces citando como parâmetro o Google e a Apple e a pouca importância que as empresas dão para esse assunto.

O mercado (alvo) está cada vez mais competitivo. Usuários não querem simplesmente um sistema funcional; ele deve ser bonito, intuitivo, agradável de usar. Um bom exemplo do que estou falando é o popular Goggle Reader: será que estaria tão popular se não fosse sua interface "rica"?

Acredito que atualmente, para sistemas web, a interface deve(ria) ser o principal "exciter" e onde as forças devem atuar consideravelmente. Digo isso porque as outras partes de um sistema (estou falando do negócio e banco de dados) estão razoávelmente maduras em termos de conceitos (OO, Teste, ORM), frameworks, etc.

Foi o tempo em que precisavamos saber apenas escrever código funcional. O desenvolvedor de hoje precisa saber muito bem HTML, CSS e JavaScript. E para isso, felizmente podemos (e devemos) utilizar recursos e <a href="http://rodrigopanachi.eti.br/weblog/post/simplifique-javascript-com-jquery/">frameworks</a> para isso.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date>2008-05-28 18:16:00</wp:post_date>
		<wp:post_date_gmt>2008-05-28 18:16:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ressuscitando-o-webdesigner</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="interfaces"><![CDATA[interfaces]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[1up4dev.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Rodrigohttp://www.blogger.com/profile/15414819394415097763noreply@blogger.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2008/05/ressuscitando-o-webdesigner.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078315]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[Humberto]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-29 13:18:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-29 13:18:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Existe uma carência muito forte de pessoas competentes em interface com o usuário. Mas na minha opinião essa carência não é sequer percebida! Como você Rodrigo e o Miguel disseram, a "UI" parece sempre deixada em segundo plano. Tipo da coisa que, se ficar boa, será por acidente.<br/><br/>Piora a situação o fato de que não se investe em educação voltada para interfaces, que é um assunto amplo e que integra não só tecnologia (parte fácil da coisa) mas também organização espacial, percepção e até estatística.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[miguelbaldi]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-29 13:29:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-29 13:29:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Realmente, a interface com o usuário ainda é tratada como a "telinha". Com o se fosse uma trivialidade, quando na verdade ela diz muito sobre o sistema e deve imprimir de forma realista as regras de negócio. Existe uma vasta literatura sobre o assunto, autores como Torsten Stapelkamp mostram que o assunto é bem mais complicado como parece. E os programadores de hoje em dia são praticamente analfabetos em JavaScript, CSS e até HTML, preferindo sempre culpar estas tecnologias como "gargalo" no tempo de construção do sistema e tudo mais. Acho que uma melhoria neste sentido deveria partir da própria comunidade de desenvolverdores, do profissional que está construindo os sistemas de hoje em dia.<br/><br/>Excelente post, abraço à todos.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Campanha de vendas e promoções para fechar bem o ano fiscal - Coisas do Bill...</title>
		<link>http://1up4dev.org/2008/05/campanha-de-vendas-e-promocoes-para-fechar-bem-o-ano-fiscal-coisas-do-bill/</link>
		<pubDate>Thu, 29 May 2008 22:02:00 +0000</pubDate>
		<dc:creator>miguelhorlle</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/2008/05/29/campanha-de-vendas-e-promocoes-para-fechar-bem-o-ano-fiscal-coisas-do-bill/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://bp1.blogger.com/_7Uib7nyDPPg/SD8oTJoo3jI/AAAAAAAAAN0/Gs8XT0u2Fy8/s1600-h/evil.png"><img style="display:block;text-align:center;cursor:pointer;margin:0 auto 10px;" src="http://bp1.blogger.com/_7Uib7nyDPPg/SD8oTJoo3jI/AAAAAAAAAN0/Gs8XT0u2Fy8/s320/evil.png" border="0" alt="" /></a>
Pessoal, não pude deixar de compartilhar essa!
Nos meus tempos negros trabalhei com a bendita Microsoft, com isso acabei deixando rastros nesse sub-mundo que me perseguem até hoje. Um deles é este newsletter do capeta que me persegue (nem o anti-spam do gmail funcionou!).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date>2008-05-29 22:02:00</wp:post_date>
		<wp:post_date_gmt>2008-05-29 22:02:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>campanha-de-vendas-e-promocoes-para-fechar-bem-o-ano-fiscal-coisas-do-bill</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="microsoft"><![CDATA[microsoft]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="spam"><![CDATA[spam]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[1up4dev.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[miguelbaldihttp://www.blogger.com/profile/13681035222097082208noreply@blogger.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2008/05/campanha-de-vendas-e-promoes-para_29.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078259]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-29 22:10:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-29 22:10:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Também tenho um passado negro perseguidor ... e também recebi este spam !<br/>Por sorte hoje pra mim é somente motivo de piada mesmo :D !<br/><br/>paz a todos !]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Waterfalling...</title>
		<link>http://1up4dev.org/2008/06/waterfalling/</link>
		<pubDate>Sun, 01 Jun 2008 06:40:00 +0000</pubDate>
		<dc:creator>miguelhorlle</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/2008/06/01/waterfalling/</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="text-align:left;">
<div>Primeiramente tenho que admitir que o termo usado no titulo do post não existe em nenhum dicionário convencional (encontrei apenas no <a href="http://www.urbandictionary.com/define.php?term=waterfalling" target="_blank">UrbanDictionary</a>, mas não era bem o que queria expressar...<span style="font-style:italic;">risos</span>).
Mas mesmo assim vou usá-lo livremente, pois acho que não teria nenhum verbete mais adequado para expressar como me sinto atualmente (profissionalmente falando claro!), nada descreve o fenômeno que é desenvolver software, ou pelo menos tentar, em um mercado onde praticamente 99% das grandes empresas ainda gastam milhares de reais com consultorias <span style="font-style:italic;">especializadas</span> em implementar metodologias e processos que no fundo só servem para gastar tempo, dinheiro e a paciência dos colaboradores envolvidos. O resultado disso é uma empresa certificada(CMM/i, MPS.br e afins) e dezenas de funcionários <span style="font-style:italic;">estressados</span>.</div>
<div style="text-align:left;"><span>É impressionante como a falsa segurança de um processo todo controlado,</span>
<span>medido e previsivel (isso é o que os </span><span style="font-style:italic;">chairmen</span><span> ainda pensam!) ainda está</span>
<span>presente nos gestores de TI atuais, pelo menos no Brasil.</span>
<span>O Waterfall continua enraízado em nossa cultara de gestão por simples</span>
<span>jogo de interesses. Essas metodologias (CMM/i e similares...) só</span>
<span>beneficiam pessoas que não querem se comprometer, não estão</span>
<span>interessadas na real satisfação do cliente e querem se manter no</span>
<span>mercado, muitas vezes sendo incompetentes no que fazem (afinal este</span>
<span>tipo de processo permite que as pessoas se escondam atrás desta</span>
<span>burocracia). Existem milhares de papéis (analista, projetista, analista</span>
<span>de negocios, gerentes e mais gerentes, analista de qualidade...blah</span>
<span>blah blah) a serem desempenhados, mas estes papeis são tratados como se</span>
<span>fossem exercidos por robôs. Isso gera o tipo de frase: "Mas eu faço</span>
<span>análise, prazo não é comigo!".</span></div>
<span>Eu vejo este tipo de metodologia como a velha discussão dos sistemas sócio-politicos. Se analisarmos de forma fria e racional as duas principais vertentes desenvolvidas neste campo, percebemos que de uma lado temos o socialismo com todo seu esforço para ser algo justo e equilibrado, e na outra ponta temos o capitalismo com toda sua desigualdade, agressividade competitiva entre outras coisas.</span>
<p style="font-style:italic;text-align:center;"><span>"O </span><strong>Socialismo</strong><span> é um sistema sócio-político caracterizado pela apropriação dos </span><span>meios de produção</span><span> pela </span><span>coletivadade</span><span>. Abolida a sua </span><span style="font-style:italic;">propriedade privada</span>
<span>destes meios, todos se tornariam trabalhadores, tomando parte na</span>
<span>produção, e as desigualdades sociais tenderiam a ser drasticamente</span>
<span>reduzidas uma vez que a produção, sendo social, poderia ser</span>
<span>equitativamente distribuída.</span><span> A proposta de Karl Marx, um dos autores que desenvolveu este tema, é a de que o socialismo fosse um sistema de transição para o </span><span>comunismo</span><span>, que eliminaria de forma integral o Estado e as desigualdades sociais." Ver referencias</span>

<span>Como sabemos atualmente o mundo é capitalista, apesar de algumas exceções. Mas que relação isto tem com processo de desenvolvimento de software??</span>
<span>Uma das razões para o capitalismo dar certo é a sua naturalidade, quero dizer com isso que este pensamento/comportamento é intrínseco ao ser humano, todos nós de alguma forma nascemos pensando e agindo assim, uns mais outros menos, e isso acaba refletindo no sucesso que teremos ou não no futuro. Por isso digo que é natural.</span>
<div>
<div style="text-align:center;"><span style="font-style:italic;">"</span><strong>Capitalismo</strong><span style="font-style:italic;"> é comumente definido como um sistema de organização de sociedade baseado na propriedade privada dos meios de produção e propriedade intelectual, e na liberdade de contrato sobre estes bens (livre-mercado</span><span style="font-style:italic;">).</span>
<span style="font-style:italic;">"Capitalismo" é o nome que se dá às atitudes econômicas decorrentes</span>
<span style="font-style:italic;">naturalmente numa sociedade que respeita a propriedade privada e a</span>
<span style="font-style:italic;">liberdade de contrato. As pessoas quando sujeitas a estas condições,</span>
<span style="font-style:italic;">com o intuito de satisfazer seus desejos e/ou necessidades, tendem</span>
<span style="font-style:italic;">espontaneamente a dirigir seus esforços no sentido de acumular capital,</span>
<span style="font-style:italic;">o qual é então usado como moeda de troca a fim de adquirir os serviços</span>
<span style="font-style:italic;">e produtos desejados.</span>" Ver referencias</div>
Quando falamos de socialismo, logo percebemos que ele parece muito perfeito, realmente tudo é pensado em prol de todos, todos são uma peça de um esquema muito maior e que tem um plano ideal para todos.
A desigualdade não existe, porém temos que pagar um preço muito alto por isso, ficamos o tempo todo lutando contra nossos instintos, motivações e tudo mais que move o ser humando em sua busca por uma condição melhor pra si. Temos que sempre pensar no coletivo antes do individual, temos que nos conformar em ter as mesmas coisas que todos, perdemos caracteristicas que nos tornam únicos em nome de uma causa maior. Isto é muito legal!! Mas é altruísmo demais até para um monge.</div>
<span>Apenas para deixar claro, não tenho intenção nenhuma de discutir ciências politicas ou econômia com ninguém, realmente não tenho conhecimento para isso (desconsiderem qualquer bobagem que eu tenha dito, tentem captar a intenção. </span><span style="font-style:italic;">risos</span><span>).</span>
<span>Minha intenção desde o inicio é mostrar que os processos e metodologias que conhecemos na vida real como parte do </span><a class="mw-redirect" title="Livre-mercado" href="http://pt.wikipedia.org/wiki/Livre-mercado"></a><a href="http://en.wikipedia.org/wiki/Waterfall_model" target="_blank">Waterfall</a><span> não são naturais ao desenvolvimento de software e muito menos à nós desenvolvedores. Eles parecem maravilhosos em um quadro na parede com todo fluxo do </span><a href="http://en.wikipedia.org/wiki/Project_Management_Body_of_Knowledge" target="_blank">PMBOK</a><span>, por exemplo, mas no dia-a-dia custam muito para serem aplicados e exigem que nademos contra nossos instintos para que cheguemos à algum lugar. </span>
<span>
Quando falamos de metodologias ágeis, em primeiro momento parece muito vago, o manifesto ágil em sí não se mostra muito técnico, em alguns momentos parece um pouco distante de uma aplicabilidade real. Mas na verdade em sua excência ele tem tudo que nos identificamos. A começar por suas ferramentas, quem na vida nunca se viu praticando </span><a href="http://en.wikipedia.org/wiki/Pair_programming" target="_blank"><span style="font-style:italic;">pair programming</span></a><span>, pois bem isto é uma pratica muito útil de uma coisa maior chamada </span><span style="font-style:italic;">Extreme Programming. </span><span>E não precisamos procurar muito para chegar a conclusão de o </span><span style="font-style:italic;">Scrum</span><span> tem como consequencia uma maior aproximação da equipe e auto conhecimento dentre os participantes, com isso proporciana um maior controle gerencial para quem exercer esta função.</span>

Tudo isso natural para nós
programadores e <span style="font-style:italic;">computeiros</span><span>, assim como o capitalismo é para a sociedade e o mercado ecônimico.</span>

Reforçando, não quero iniciar nenhum tipo de flamming relacionado à política ou econômia, quero apenas expôr algumas maluquices que venho pensando ultimamente.

<span>Bom galera, gostaria de dizer que me motivei a escrever essas idéias depois de ler um excelente post do </span><a href="http://blog.aspercom.com.br/2008/05/27/nao-jogue-dinheiro-fora-com-melhoria-de-processos/" target="_blank">Rodrigo Yoshima</a><span> no Blog Débito Técnico. É bom saber que ainda existem pessoas que tem a capacidade de provocar o pensamento e instigar a busca por explicações.</span>

<span style="font-style:italic;">Eu sonho um dia poder trabalhar com uma metodologia ágil, enquanto isso não chega vou me lamentando por aí.</span>

<span>Abraços, e coloquem suas opiniões! Podem esculachar, </span><span style="font-style:italic;">risos...</span>

<span>Referências:</span>
<a href="http://pt.wikipedia.org/wiki/Socialismo" target="_blank">Socialismo</a>
<a href="http://pt.wikipedia.org/wiki/Capitalismo" target="_blank">Capitalismo</a>
<a href="http://blog.aspercom.com.br/2008/05/27/nao-jogue-dinheiro-fora-com-melhoria-de-processos/" target="_blank">Débito Técnico - Não jogue dinheiro com melhoria de processos...</a></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date>2008-06-01 06:40:00</wp:post_date>
		<wp:post_date_gmt>2008-06-01 06:40:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>waterfalling</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cascata"><![CDATA[cascata]]></category>
		<category domain="post_tag" nicename="corporativismo"><![CDATA[corporativismo]]></category>
		<category domain="category" nicename="processos"><![CDATA[processos]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="category" nicename="waterfall"><![CDATA[waterfall]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[1up4dev.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[miguelbaldihttp://www.blogger.com/profile/13681035222097082208noreply@blogger.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2008/06/waterfalling.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078055]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-01 19:10:00</wp:comment_date>
			<wp:comment_date_gmt>2008-06-01 19:10:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pessoal, eu estou cadastrado no RSS de vocês e é impossível ler o texto no Google Reader. Fica o texto cinza claro num fundo branco.<br/><br/>O texto do RSS de vocês tem que ser na mesma cor que no site principal? Tem um jeito de resolver isso sem ter que mexer com o tema do site principal?<br/><br/>Abraços]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39</wp:comment_id>
			<wp:comment_author><![CDATA[Humberto]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-02 03:03:00</wp:comment_date>
			<wp:comment_date_gmt>2008-06-02 03:03:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Miguel, realmente tem coisa estranha no HTML do post...<br/><br/>Sobre o texto, parabéns! Interessante a menção aos sistemas econômicos como ilustração das alternativas de desenvolvimento de sistemas. Pode parecer até inusitado para algumas pessoas, mas as semelhanças entre socialismo/waterfall e entre capitalismo/agile fazem muito sentido, exatamente porque um é espontâneo e o outro é idealizado.<br/><br/>Agile pode então ser visto como uma forma de se conviver com pontos de vista divergentes e voláteis. Trabalha-se com micro-contratos (iterações) que abrangem os investimentos de maior valor ao longo do tempo. A noção de "valor" não pode ser estabelecida a priori, pois os interesses mudam rapida e naturalmente.<br/><br/>Waterfall por sua vez equivale ao planejamento centralizado e burocrático de um governo socialista, que sabe quem precisará do que e quando. Pode parecer muito científico e justo, mas inútil quando se sabe que o sistema (governo ou projeto) é sujeito a forças imprevistas ou desorganizadas.<br/><br/>Continuando a analogia, é claro que o sistema waterfallista (hehe) tem beneficiado uma pequena elite burocrática às custas do trabalho em vão de toda uma classe proletária. E então camaradas? Quando será decretada a Revolução Capitalista do desenvolvimento de software?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>99</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; Agilidade cascateira]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2008/12/agilidade-cascateira/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2008-12-16 10:50:33</wp:comment_date>
			<wp:comment_date_gmt>2008-12-16 13:50:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] à testes, utilizam Scrume para gerenciar os projetos, etc. Na verdade estão apenas praticando um waterfall incremental, cometendo os mesmos erros clássicos da cascata, valorizando os processos ao invés das pessoas, [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>1up4developers 2.0</title>
		<link>http://1up4dev.org/2008/06/1up4developers-20/</link>
		<pubDate>Tue, 03 Jun 2008 20:20:33 +0000</pubDate>
		<dc:creator>hbulhoes</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/?p=35</guid>
		<description></description>
		<content:encoded><![CDATA[Então, nobres colegas e respeitável público, o nosso blog estava meio estranho no Blogger e decidimos mudar para uma plataforma mais funcional, mais gerenciável, mais colaborativa, enfim, uma coisa totalmente mais 2.0 mesmo.

O conteúdo continua composto de puro veneno partindo de mentes furiosas por não terem uma vida agilemente ativa. Aposto que você, leitor, também se encontra nessa situação aviltante, então <a title="feed:1up4developers" href="http://feeds.feedburner.com/1up4dev?format=xml">assine o novo feed</a> e participe comentando as nossas observações, frustrações e viagens.

Muito sucesso a todos! Prossigamos...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date>2008-06-03 17:20:33</wp:post_date>
		<wp:post_date_gmt>2008-06-03 20:20:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1up4developers-20</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hello"><![CDATA[hello]]></category>
		<category domain="post_tag" nicename="inauguracao"><![CDATA[inauguração]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077839]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[Miguel Galves]]></wp:comment_author>
			<wp:comment_author_email>mgalves+blogcomments@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://log4dev.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>200.183.0.130</wp:comment_author_IP>
			<wp:comment_date>2008-06-04 13:50:09</wp:comment_date>
			<wp:comment_date_gmt>2008-06-04 16:50:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Caros,

esse negócio de blog, audiência, comentári e afins é viciante. Acreditem, estou neste "ramo" há quase 4 anos, com o job4dev, e é muito bom ver as coisas evoluindo. Se dica minha vale algo, anotem aí: em termos de blog e audiência, perseverança é a palavra chave. Tendo conteúdo bom, constante, o retorno virá. Alguma ações de divulgação e marketing tb ajudam!

E obrigado pelo feed do job4dev!!!!

[]s]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>TPW - Dicas para o Desenvolvedor</title>
		<link>http://1up4dev.org/2008/06/tpw-dicas-para-o-desenvolvedor/</link>
		<pubDate>Wed, 04 Jun 2008 12:30:00 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/?p=18</guid>
		<description></description>
		<content:encoded><![CDATA[<div><a href="http://bp3.blogger.com/_XL8FQmVF9qY/SDya_OnB-kI/AAAAAAAAAGA/PNvOGr9fz1A/s1600-h/dilbert2733310071001.gif"><img style="margin: 0pt 10px 10px 0pt; cursor: pointer; width: 481px; height: 163px;" src="http://bp3.blogger.com/_XL8FQmVF9qY/SDya_OnB-kI/AAAAAAAAAGA/PNvOGr9fz1A/s320/dilbert2733310071001.gif" border="0" alt="" width="570" height="193" /></a></div>
<div>Tradução rápida do diálogo:</div>
<div>
<p style="font-family:times new roman;">Chefe (com chifrinhos): Por que você levou seis meses para completar esta simples tarefa ?</p>
<p style="font-family:times new roman;">Dilbert: Por causa das suas mudanças contínuas, sua comunicação confusa e seu pequeno expediente de trabalho.</p>
<p style="font-family:times new roman;">Chefe (com chifrinhos): Estou procurando por alguma coisa mais parecida como você sendo preguiçoso.</p>

Hello hello hello ! Estas tirinhas do Dilbert estão de matar ultimamente. E já pra avisar, o TPW significa <em>The Pragmatic Waterfall</em>, um novo termo para o que buscamos aqui neste blog, ajudar quem sofre com o <em>Waterfall</em> ! Ok, isso inclui a mim mesmo.

Quem vive num <span style="text-decoration: line-through;">maldito</span>digno ambiente Waterfall já deve ter vivenciado muito disso que ocorreu acima, o gerente "junior" procurando uma desculpa de porque o gant chart está vermelho para repassar ao gerente "pleno" que este repassará ao "senior junior" e que este repassará "senior pleno" ... bom, já entenderam até onde a desculpa vai chegar.

Na tentativa de transformar este post de "muro das lamentações" para Pragmatic Waterfall, vamos as dicas didáticas (ou seria um guia de sobrevivência?) de como tentar contornar este tipo de situação frustante:

<a href="http://1up4dev.org/wp-content/uploads/2008/06/14-03-06_sharon.jpg"><img class="alignnone size-medium wp-image-31" src="http://1up4dev.org/wp-content/uploads/2008/06/14-03-06_sharon.jpg?w=300" alt="" width="341" height="207" /></a>==&gt;&gt;<a href="http://1up4dev.org/wp-content/uploads/2008/06/waterfall_model.png"><img class="alignnone size-medium wp-image-32" src="http://1up4dev.org/wp-content/uploads/2008/06/waterfall_model.png?w=300" alt="Waterfall Model" width="300" height="230" /></a>
<ul>
	<li>Gerador de código descartável. Sim, é isso mesmo que você leu, o gerador de código você já sabe o que é, agora o descartável é o que você deve estar imaginando. Isso não tem muito a ver com o Waterfall, mas todo projeto que trabalhei tem aquelas camadas que repassam chamadas e seguem um padrão comum. Logo, você não precisa - e nem deve - escrevê-los, para isto inventaram o computador. Se você tem sorte de usar um sistema unix like, se aventure com shell scripts, vale a pena, caso não tenha esta sorte ... err, primeiro sinto muito por ti ... mas você tem opção de linguagens de scripts como Perl, Python e Ruby em suas mãos, aproveite ! Crie estes scripts descartáveis e gere toneladas de código, seu chefe vai ficar feliz da vida com o aumento da produtividade.</li>
	<li>Conheça todos os recursos que a sua IDE ou seu editor de texto oferecem. Isso parece ser uma dica besta, mas pode acreditar que não é, já vi muita gente usando um mesmo editor por mais de meses e ficam "abobados" ao descobrirem que o Ctrl+H abre a tela de Replace !!! Bom no meu caso que uso Eclipse o dia todo, as dicas são:
<ul>
	<li>Aprenda a usar teclas de atalho, elas realmente aumentam a produtividade. <em>Cheat Sheets</em> como <a href="http://www.n0sl33p.org/dev/eclipse_keys.html" target="_blank">este</a>, ajudam no processo de adaptação.</li>
	<li>Use e abuse dos Templates, aquelas configurações chatas de xml que toda hora são necessárias, não perca tempo, crie um template para isso e seja feliz. Você pode criar também para aqueles métodos chatos com assinaturas iguais sempre (tipo do Struts mesmo sabe !?!) ... o céu é o limite !</li>
	<li>Aprenda a usar as opções do menu Refactor e - adivinhe! - Geradores de Códigos.</li>
</ul>
</li>
	<li>Mantenha um <em>checklist</em> de documentos a atualizar, aqueles do tipo, Requisitos, Casos de Uso, Arquitetura, Alteração, Instalação ... etc. Com um <em>checklist</em> você não precisa ocupar a cabeça com este passo muito importante do <em>waterfall</em> e lembre-se que neste ambiente o que é valorizado são os documentos e não as pessoas.</li>
	<li>Antes de começar a sua nova tarefa que está no Gantt, descubra quem são os envolvidos, neste nosso ambiente temos especialistas para todos os lados, converse com eles e feche pactos, pois é muito comum no final da tarefa você descobrir que a procedure retornará um <a href="http://blogs.ittoolbox.com/oracle/guide/archives/learn-oracle-miscellaneous-user-defined-and-complex-types-17977" target="_blank">tipo complexo</a> e não um cursor como você imaginava.</li>
	<li>Sei que isso pode parecer irreal para você que está num <em>waterfall</em> enraízado, porém, tente pelo menos. Tenha um ambiente <a href="http://en.wikipedia.org/wiki/Mock_object" target="_blank">mock</a> para desenvolvimento, isso pode te salvar ao manter sua tarefa "verdinha" no Gantt Chart. Sim, todos nos <a href="http://blog.aspercom.com.br/2007/11/15/ganttchartnaofunciona/trackback/" target="_blank">sabemos que o Gantt Chart não funciona</a>, porém eu e você que estamos no <em>waterfall</em> temos que usar e até fingir que <a href="http://gc.blog.br/2007/12/04/cronogramas-nao-funcionam/" target="_blank">funciona</a>.</li>
</ul>
Espero que com essas dicas você consiga se livrar de suas tarefas em menos tempo, e com o tempo que sobrar, aproveite para aprender coisas novas, metodologias novas e descobrir que existe vida fora do <em>waterfall</em> ... e acredite ! Estão documentando, <a href="http://blog.aspercom.com.br/2008/05/29/um-exemplo-a-ser-seguido/trackback/" target="_blank">aqui</a>, <a href="http://gc.blog.br/2008/05/27/como-estamos-indo-com-a-adocao-de-scrum-na-globocom/" target="_blank">aqui</a> e <a href="http://blog.seatecnologia.com.br/articles/2008/05/29/experiencias-%C3%81geis-na-sea-episodio-i-%E2%80%93-a-ameaca-fantasma" target="_blank">aqui</a> !</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date>2008-06-04 09:30:00</wp:post_date>
		<wp:post_date_gmt>2008-06-04 12:30:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tpw-dicas-para-o-desenvolvedor</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cascata"><![CDATA[cascata]]></category>
		<category domain="post_tag" nicename="dicas"><![CDATA[dicas]]></category>
		<category domain="post_tag" nicename="pragmatic-waterfall"><![CDATA[pragmatic waterfall]]></category>
		<category domain="category" nicename="processos"><![CDATA[processos]]></category>
		<category domain="category" nicename="waterfall"><![CDATA[waterfall]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[1up4dev.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Roger Leitehttp://www.blogger.com/profile/08477746727544999338noreply@blogger.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/feeds/posts/default/7468390621292808696]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>61</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; TPW - Colocando dicas em prática]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2008/08/tpw-colocando-dicas-em-pratica/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2008-09-03 04:09:33</wp:comment_date>
			<wp:comment_date_gmt>2008-09-03 07:09:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] foi meu próprio post sobre o assunto. Depois de ter &#8220;digerido&#8221; o livro, lancei as dicas para o desenvolvedor, acabei inventando um termo legal The Pragmatic Waterfall, que resolvi transformá-lo numa [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Parem o mundo que eu quero descer !</title>
		<link>http://1up4dev.org/2008/06/parem-o-mundo-que-eu-quero-descer/</link>
		<pubDate>Sun, 08 Jun 2008 22:00:41 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/?p=33</guid>
		<description></description>
		<content:encoded><![CDATA[<span class="maintitle"><span class="maintitle">Falta pessoal qualificado em TI, diz Assespro</span></span>

<a href="http://www.guj.com.br/posts/list/15/92783.java#497015" target="_blank">http://www.guj.com.br/posts/list/15/92783.java#497015</a>

Esta discussão está boa, e no meio das chamas levei um "impacto" ao ler a frase abaixo.

<span class="postbody"><strong><cite>louds wrote:</cite></strong> [...] Não usem a incompetência alheia como desculpa. Se está ruim e você não está ativamente combatendo isso, você é parte do problema e não da solução. [...]</span>

Esta é uma das frases que eu deveria lembrar toda vez que começo a lamentar sobre o ambiente atual de trabalho, eu tento, me gerencio, mas confesso que é difícil.

Com o diabinho no ombro, logo ouvi um suspiro ... Waterfall é bom ! Não questione ... volte a codificar ... Só que ao olhar pro lado, vi o meu poster do <a href="http://gc.blog.br/2007/09/13/dijkstra-is-watching/" target="_blank">Dijkstra</a> e voltei a realidade. Foi quando me perguntei:

<strong>Por que é difícil combater o Waterfall ?!?</strong>

Sei que esta é uma pergunta sem resposta direta e que depende de muitos fatores do seu ambiente de trabalho, mas eu numa análise fria e cruel respondo: <strong>Porque a maioria não sabe o que é waterfall</strong>.

No último ano da faculdade (cursei Sistemas de Informação), e sem brincadeira, nas aulas de Engenharia fui obrigado a decorar todas as fases, papéis, artefatos e etc. do <a href="http://en.wikipedia.org/wiki/IBM_Rational_Unified_Process" target="_blank">RUP</a>, e pra fechar com chave de ouro, no segundo semestre veio o famoso Análise de Ponto de Função. Isso somente prova que já aprendemos errado, e sei que muita gente fica nisso. Se hoje tivesse a oportunidade de encontrar este mesmo professor, iria fazer a pergunta acima, e acrescentar com questionamentos como, engenharia de software não é eng. civil e neste processo todo quem está preocupado com o Retorno de Investimento do cliente !?!

Acredito que a chave para combater o Waterfall é conhecimento, temos que trazer questionamentos a quem está do lado e isso não é nada fácil, como você convence os mais de vinte desenvolvedores que estão ao seu redor que eles estão na Matrix !?! O que fazer com o pessoal que não quer sair da Matrix !?! <strong>O Waterfall é uma grande mãe que coloca muitas pessoas (Analistas, Desenvolvedores, Gerentes, Testers ... etc.) numa casca irreal de proteção e que gera um ciclo vicioso que se auto sustenta.</strong>

Neste exato momento que sou obrigado a concordar com o grande malucão <a href="http://pt.wikipedia.org/wiki/Raul_Seixas" target="_blank">Raulzito</a>:
<blockquote>É pena não ser burro ! Não sofria tanto.</blockquote>
As vezes me questiono sobre esta insistência em tentar mudar, nadar contra o Waterfall. Não seria melhor se "render" logo e entrar no jogo, sei lá, poder falar, "Caso de Uso não é comigo, só programação!" e ver que são 10 pras 18, desligar o computador e sair sem o minimo peso na consciência.

Por que numa equipe de dez desenvolvedores, só eu sinto falta de testes unitários !?! Fico indignado ao receber um caso de uso que não agrega nada ao cliente, somente foi "inventado" pra ser cobrado dele, e só eu que vejo isso !?! Sei lá, eu devo estar maluco mesmo com toda esta historia de desenvolvimento ágil, e se preocupar com ROI do cliente, apesar de achar uns <a href="http://queroseragil.wordpress.com/2007/11/08/apresentando-scrum-ao-gerente/trackback/" target="_blank">malucos</a> por ai que sofrem do mesmo "problema" que o meu.

Como no filme dos <a href="http://pt.wikipedia.org/wiki/300_(filme)" target="_blank">300</a>, tenho esperanças e sei que poucos enfrentarão muitos, e continuo minha batalha com o Waterfall.

Paz a Todos !

Obs: Sei que o RUP é mal usado, pois uma brecha dele é ser muito <a href="http://blog.fragmental.com.br/2008/02/11/generico/" target="_blank">genérico</a>, e isto cada vez se confirma mais, que o <a href="http://blog.aspercom.com.br/2008/04/23/so-agilidade-funciona/" target="_blank">modelo atual "tradicional" está falido</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date>2008-06-08 19:00:41</wp:post_date>
		<wp:post_date_gmt>2008-06-08 22:00:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>parem-o-mundo-que-eu-quero-descer</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cascata"><![CDATA[cascata]]></category>
		<category domain="post_tag" nicename="devaneios"><![CDATA[devaneios]]></category>
		<category domain="post_tag" nicename="paranoia"><![CDATA[paranoia]]></category>
		<category domain="category" nicename="processos"><![CDATA[processos]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="category" nicename="waterfall"><![CDATA[waterfall]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077872]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[Humberto B]]></wp:comment_author>
			<wp:comment_author_email>humberto.bulhoes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://idle-thread.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>189.94.76.122</wp:comment_author_IP>
			<wp:comment_date>2008-06-09 22:27:43</wp:comment_date>
			<wp:comment_date_gmt>2008-06-10 01:27:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Roger, compartilho da sua preocupação. Às vezes parece que as coisas caminham muito devagar e que ninguém está pouco se lixando para melhorar alguma coisa.

Infelizmente, não ajuda muito procurarmos algum tipo de "iluminação" e encontrarmos apenas opiniões enviesadas, equivocadas, superficiais e ingênuas nos fóruns e blogs da vida. É muito ruído e pouca informação que preste. Fica difícil filtrar pois o bombardeio é intenso. E o que temos, na real, é um dia-a-dia maçante e enferrujado, contra o que individualmente podemos fazer muito pouco.

Acho que ficamos mais estressados que o necessário quando começamos a achar que temos que dominar não somente a boa técnica, mas também o mercado, o gerenciamento, as finanças de projeto. Me perdoem, mas quando o desenvolvedor começa a se preocupar muito com ROI, acho esquisito. Mais ou menos como se um economista de repente se interessasse por registradores de CPU.

Outra fonte de stress é o que você comentou sobre os colegas relaxados. Os que entram às 9 e saem às 6. Cara, isso literalmente não é problema nosso! Essas pessoas sempre vão existir, é um direito delas serem "tapadas" assim. E se um modelo de trabalho qualquer depender de pessoas perfeitas em um ambiente perfeito, não se trata de um modelo de trabalho útil, não é? Às vezes acho que querem empurrar metodologia como panacéia, óleo de cobra, sei lá.

Nosso poder está em poder escolher onde e com quem trabalhar. Essa é a vantagem de um mercado de trabalho aquecido... dizem que está, né.

Abraço e não perca a fé!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[Guilherme Piccin]]></wp:comment_author>
			<wp:comment_author_email>guilhermepiccin@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://guilhermepiccin.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>201.73.233.178</wp:comment_author_IP>
			<wp:comment_date>2008-06-10 09:21:38</wp:comment_date>
			<wp:comment_date_gmt>2008-06-10 12:21:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Roger, como o Humberto disse: "Não perca a fé!".
Já trabalhei com pessoas que achavam que ambição era "pecado". Já ouvi frases do tipo: "ah... eu não quero esse tipo de coisa não [ganhar dinheiro, ter vida estável e esforço reconhecido]... quero ter tempo pra levar meus filhos na escola e tal". Ele não está nem um pouco errado, pois é a qualidade de vida que ele quer... mas isso reflete integralmente em como seu trabalho é desempenhado. Tanto faz ou tanto fez para ele. Esse tipo de gente não quer saber se o sistema será bem ou mal desenvolvido, se o caso de uso tá bem feito ou não, se foram encontrados 80% de bugs/erros na fase de teste, se existem novos paradigmas. Pra ele está bom. Acho que o mercado de trabalho está contaminado por esse tipo de mentalidade, o que dificulta as mudanças que queremos ver.
Também existe a síndrome do funcionário público: seu trabalho se resume a carimbar papéis o dia inteiro. Ele acabou de molhar o carimbo na almofadinha e está levando seu braço ao papel.. o sinal das 18h toca! Ele sequer carimba o papel. Bota o carimbo de lado denovo, pega suas coisas e vai embora.
Eu sei o quão complicado é mudar um ambiente desfavorável às nossas filosofias, mas não tenha medo de tomar decisões corajosas. Se está insuportável, pense que existem pessoas no mercado que compartilham dos mesmo sentimentos que você.
Boa sorte e um grande abraço!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>44</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email>roger.barreto+comments@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>189.100.101.45</wp:comment_author_IP>
			<wp:comment_date>2008-06-10 11:22:31</wp:comment_date>
			<wp:comment_date_gmt>2008-06-10 14:22:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Humberto
"E o que temos, na real, é um dia-a-dia maçante e enferrujado, contra o que individualmente podemos fazer muito pouco."
Você matou a pau neste frase, considero a síntese do meu post.
Sobre o ROI, o que quis dizer e que não ficou muito claro no post é, te mandam fazer funcionalidades que não agregam nada ao produto e ao cliente e ao tentar mudar isso e questionar, você vê que ninguém está preocupado e o que querem mesmo, é a sua porcentagem em cima da venda da nova funcionalidade. Não vejo problema nenhum em ganhar dinheiro, desde que seja um ganha-ganha, e nessa parte o cliente também tem culpa de aceitar isso.

@Guilherme Piccin
A "síndrome do funcionário público" é realmente fantástica e me fez rir aqui ... Vou até verificar quando vão abrir concurso aqui onde trabalho.

Valeu aê pelos comentários "auto-ajuda" ! :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[Alexandre]]></wp:comment_author>
			<wp:comment_author_email>simpsomboy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>201.67.136.148</wp:comment_author_IP>
			<wp:comment_date>2008-06-15 19:16:41</wp:comment_date>
			<wp:comment_date_gmt>2008-06-15 22:16:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[O pior é saber que o que você diz não é só teoria, Graças a Deus eu trabalho para mim mesmo e posso usar quantos testes unitários eu quiser.... o melhor Especificações... Viva o BDD]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>73</wp:comment_id>
			<wp:comment_author><![CDATA[Iterações pra que te quero! at Mergulhando no Caos]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.thiagoarrais.com.br/2008/10/02/iteracoes-pra-que-te-quero/</wp:comment_author_url>
			<wp:comment_author_IP>209.123.162.241</wp:comment_author_IP>
			<wp:comment_date>2008-10-02 21:42:38</wp:comment_date>
			<wp:comment_date_gmt>2008-10-03 00:42:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] na verdade não. Como podemos observar a partir de alguns relatos bem recentes, desenvolvimento de software em cascata ainda é realidade em muitos lugares. Pode parecer uma [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Guerrilha agile: a motivação</title>
		<link>http://1up4dev.org/2008/06/guerrilha-agile-parte-1/</link>
		<pubDate>Fri, 13 Jun 2008 03:58:51 +0000</pubDate>
		<dc:creator>hbulhoes</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/?p=41</guid>
		<description></description>
		<content:encoded><![CDATA[Eu preciso desenvolver uma idéia que vem me provocando ultimamente. Na verdade é menos uma idéia do que um reflexo da situação desoladora em que a maioria de nós está.

Em se tratando de 1up4dev, nem preciso dizer que a situação a que me refiro é a de quase inevitabilidade do waterfall, em que estamos tão engolidos pelo "sistema" que, aparentemente, só nos resta lamentar, se frustrar e eventualmente se acostumar com tudo. Não deduzo, porém, que esses são estágios de uma manifestação de bunda-molice. Do contrário, seria suficiente encerrar o assunto com algo do tipo <em>"ou somos parte da solução ou do problema"</em> (doutrina Bush, em pleno 2008). E ainda assim, sem que ao menos sejam esboçados tanto "o problema" como "a solução", esse raciocínio binário não serviria para nada.

Antes de continuar com a minha idéia, gostaria de escrever rapidamente sobre o panorama que se desenha para o futuro. Especificamente, o nosso futuro. Nem sempre lembramos dele, mas é lá que vamos viver em breve. E sem querer parecer auto-ajudesco, digo que o futuro do desenvolvimento de software está nas nossas mãos -- e não de forma indireta ou abstrata. É lógico: as mãos que hoje controlam o "sistema" vão se aposentar daqui uns anos, e as nossas vão substituí-las. Nessa seqüência, é possível imaginar que, em breve, estaremos perpetuando o waterfall. Pois nesse dia nós é que seremos o status quo, e o status quo, para ser digno do nome, não quer saber de mudar nada.

Software já é estratégico há algum tempo e ocupará cada vez mais espaço na vida das pessoas, das empresas e dos governos. Que qualidade de software será oferecida quando nossa geração estiver no comando? Imagine o alto custo financeiro e social de se manter na periferia de TI. Sub-desenvolvimento passa a ter um novo significado, não é? Temos que assumir a responsabilidade, até porque ela pode significar a existência dos nossos empregos. Ou você vai preferir usar um software made in India?

Nada contra a Índia, claro. Mas o alerta já tinha sido dado por <a href="http://www.agilemanagement.net/" target="_blank">David Anderson</a> no comecinho do livro <a href="http://books.google.com.br/books?id=hawMF31KCRsC&amp;dq=david+anderson+agile+management&amp;pg=PP1&amp;ots=Zj4cGr8IU-&amp;sig=HQVvzFyMrtJ3jPR5TUyqYOYBuFo&amp;hl=pt-BR&amp;prev=http://www.google.com.br/search%3Fq%3Ddavid%2Banderson%2Bagile%2Bmanagement%26ie%3Dutf-8%26oe%3Dutf-8%26rls%3Dorg.mozilla:en-US:official%26client%3Dfirefox-a&amp;sa=X&amp;oi=print&amp;ct=title&amp;cad=one-book-with-thumbnail" target="_blank">Agile Management for Software Engineering</a>. Abaixo traduzo livremente um trecho cujo original você encontra na página xxvi do livro:
<blockquote>Se a atividade intelectual de software tiver que permanecer nos países desenvolvidos e se os engenheiros de software americanos, europeus e japoneses quiserem manter o alto padrão de vida ao qual se acostumaram, eles devem aumentar sua competitividade. Há um mercado global de desenvolvimento de software, o que encolheu a distância entre um cliente na América do Norte e um fornecedor na China ou na Índia.</blockquote>
Esse medo do sr Anderson tem que ser nosso também (exceto que nós não temos como rebaixar nosso "alto padrão de vida"). Sabemos que precisamos melhorar, e muito, a nossa competitividade, e não só individualmente. Agora, a grande questão é: como vamos fazer isso, se não temos suporte para viabilizar novas formas de trabalho sem dispararmos o sinal de pânico no chefe, no cliente?

Pretendo desenvolver a minha sugestão em alguns posts, seguindo alguns princípios:
<ol>
	<li>"Mudança" é definida como o amplo abandono da mentalidade waterfall no mercado de TI.</li>
	<li>Você acredita na mudança e é o maior interessado nela, pois ela representa o futuro que <strong>você</strong> quer.</li>
	<li>O risco da mudança é percebido com mais intensidade quanto maior é o poder de quem a observa.</li>
	<li>O benefício da mudança é percebido com menor intensidade quanto maior é o poder de quem a observa.</li>
	<li>A mudança pode ocorrer de baixo para cima na cadeia de poder.</li>
</ol>
No próximo post, pretenderei detalhar melhor os efeitos desses cinco pontos. Dali em diante, dificilmente irei sugerir uma ação coordenada e planejada -- nada menos ágil que isso! Prefiro apostar no desenrolar natural das coisas, desde que os princípios sejam válidos. No mínimo, vamos avançar o debate. Tomara que eu não escreva muita besteira, e espero ser corrigido a qualquer momento.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date>2008-06-13 00:58:51</wp:post_date>
		<wp:post_date_gmt>2008-06-13 03:58:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>guerrilha-agile-parte-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cascata"><![CDATA[cascata]]></category>
		<category domain="post_tag" nicename="devaneios"><![CDATA[devaneios]]></category>
		<category domain="category" nicename="processos"><![CDATA[processos]]></category>
		<category domain="category" nicename="waterfall"><![CDATA[waterfall]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A importância de estudar constantemente</title>
		<link>http://1up4dev.org/2008/06/a-importancia-de-estudar-constantemente/</link>
		<pubDate>Wed, 18 Jun 2008 22:04:22 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/?p=43</guid>
		<description></description>
		<content:encoded><![CDATA[Já faz tempo que venho ensaiando este post. Minha idéia é mostrar como é importante na nossa profissão de "desenvolvedor" estar constantemente aprendendo novas técnicas, linguagens, frameworks, metodologia, etc. Com um mercado tão competitivo como o de Desenvolvimento de Software, não podemos nos dar o luxo de conhecer apenas uma linguagem. Evidente que é bom que você escolha uma para se especializar, mas de forma alguma deve ser a última linguagem que você aprenderá.

Há algum tempo atrás, orientação a objetos era uma coisa de outro mundo para mim. É sério, não conseguia pensar na possibilidade de existir outro paradigma de programação. Bem, depois que estudei muito sobre OO e passei a utilizar profissionalmente, hoje não consigo me imaginar trabalhando sem OO. Tudo fica claro, organizado, abstraído... O que eu ganhei com isso? Com certeza consegui ser mais produtivo, mais organizado e mais eficiente e, como consequência, melhor remunerado. Se ainda desenvolvesse proceduralmente, certamente ainda desconheceria conceitos e técnicas, sendo apenas mais um na multidão. E não é assim que um verdadeiro desenvolvedor ágil quer ser visto, certo?

Outra coisa que estudei muito e hoje fico feliz em utilizar profissionalmente são Testes Unitários. Uma das premissas do desenvolvimento ágil está relacionada à qualidade do código. Com testes unitários é possível desenvolver incrementalmente e responder rápido às mudanças pois seu código está "protegido". Além de servir como apoio à refactoring. O que eu ganho com isso? Consigo me preocupar apenas com o desenvolvimento de uma pequena funcionalidade por vez, meu código fica mais "limpo" e manutenível. Em consequencia disto me torno mais ágil e sou melhor remunerado. Além de poder dormir mais tranquilo...

É importante reconhecer que há muito para aprender ainda. Nosso cenário de trabalho muda constantemente e os "usuários" são cada vez mais exigentes. Além disso, é importante lembrar que <a href="http://www.async.com.br/~kiko/papers/bullet/">não existe bala de prata</a>, não existe uma tecnologia que resolve todos os problemas. As linguagens e tecnologias são limitadas e precisam evoluir. Você precisa evoluir junto! Não se esqueça também que lá fora tem um mercado de trabalho começando a enxergar essas qualidades ágeis.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date>2008-06-18 19:04:22</wp:post_date>
		<wp:post_date_gmt>2008-06-18 22:04:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-importancia-de-estudar-constantemente</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dicas"><![CDATA[dicas]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="testes-unitarios"><![CDATA[testes unitários]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078299]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>46</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email>roger.barreto+comments@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>189.100.101.45</wp:comment_author_IP>
			<wp:comment_date>2008-06-19 09:57:00</wp:comment_date>
			<wp:comment_date_gmt>2008-06-19 12:57:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[É truta, gostei do post, rápido, objetivo, simples e pragmático !
Por sinal, recomendo muito o Pragmatic Programmer que dá varias dicas sensacionais e uma delas que é que não existe bala de prata !

sucesso!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>47</wp:comment_id>
			<wp:comment_author><![CDATA[miguelhorlle]]></wp:comment_author>
			<wp:comment_author_email>miguel.horlle@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>189.100.101.45</wp:comment_author_IP>
			<wp:comment_date>2008-06-19 10:02:00</wp:comment_date>
			<wp:comment_date_gmt>2008-06-19 13:02:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Grande post!
Podemos dizer que é um post de alerta, pra lembrar-nos de nosso dever como desenvolvedor.
Hoje em dia não basta fazer código com qualidade, devemos fazer um código atualizado com as tendências de mercado, alinhado com as últimas tecnologias e patterns...

Show de bola! Abraço]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>420</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; Ruby: quando a linguagem de programação faz diferença!]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2009/08/ruby-quando-a-linguagem-de-programacao-faz-diferenca/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2009-10-22 21:08:01</wp:comment_date>
			<wp:comment_date_gmt>2009-10-23 00:08:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] novos assuntos, aprender novos conceitos e técnicas de programação, pois você não se sentirá confortável fazendo as mesmas tarefas repetitivas ou que não sejam [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Aderindo a Campanha BR-Linux</title>
		<link>http://1up4dev.org/2008/06/aderindo-a-campanha-br-linux/</link>
		<pubDate>Wed, 25 Jun 2008 18:36:17 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/?p=46</guid>
		<description></description>
		<content:encoded><![CDATA[Não é só de Waterfall que este blog vive. Ele também nasceu pra ajudar o software livre ! Eu sei, não temos nenhum post sobre isso, mas isso é questão de tempo eu prometo.

Como grande fã que sou do <a href="http://br-linux.org/">BR-Linux</a>, estou aderindo a campanha ! E com certeza todos os autores deste blog concordam comigo, que noticia do mundo livre é no BR-Linux.

<strong>Ajude a sustentar a Wikipédia e outros projetos, sem colocar a mão no bolso, e concorra a um Eee PC!</strong>
…e também a pen drives, card drives, camisetas geeks, livros e mais! O <a href="http://br-linux.org/" target="_blank">BR-Linux</a> e o <a href="http://efetividade.net/">Efetividade</a> lançaram uma <a href="http://br-linux.org/2008/campanha-wikipedia/">campanha</a> para ajudar a Wikimedia Foundation e outros mantenedores de projetos que usamos no dia-a-dia on-line. Se você puder doar diretamente, ou contribuir de outra forma, são sempre melhores opções. Mas se não puder, veja as regras da promoção e <a href="http://br-linux.org/2008/campanha-wikipedia/">participe</a> - quanto mais divulgação, maior será a doação do BR-Linux e do Efetividade, e você ainda concorre a diversos brindes!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date>2008-06-25 15:36:17</wp:post_date>
		<wp:post_date_gmt>2008-06-25 18:36:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>aderindo-a-campanha-br-linux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="campanhas"><![CDATA[campanhas]]></category>
		<category domain="category" nicename="marketing"><![CDATA[marketing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078008]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>48</wp:comment_id>
			<wp:comment_author><![CDATA[Daniele]]></wp:comment_author>
			<wp:comment_author_email>dandanjuly@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.54.146.84</wp:comment_author_IP>
			<wp:comment_date>2008-07-01 16:11:37</wp:comment_date>
			<wp:comment_date_gmt>2008-07-01 19:11:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Oi pessoal, achei muito legal o fato do Roger ter comentado sobre a campanha do BR-Linux.
Precisamos acabar com os monopólios de softwares... Software livre é melhor para todos.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Resenha do livro Pragmatic Unit Testing</title>
		<link>http://1up4dev.org/2008/06/resenha-do-livro-pragmatic-unit-testing/</link>
		<pubDate>Thu, 26 Jun 2008 19:54:19 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/?p=44</guid>
		<description></description>
		<content:encoded><![CDATA[Olá a todos !

Sei que estão estranhando ... perceberam que não tem Waterfall no título ? Pois bem, hoje não vou chorar e digo mais, vou até fingir que não vivo num <em>Waterfall</em> e vou falar sobre TESTES ! Tá bom, sei que enfatizei demais, só vou fazer uma resenha sobre este último livro que li mesmo.

<a href="http://www.amazon.com/Pragmatic-Unit-Testing-Java-JUnit/dp/0974514012"><img class="alignleft size-medium wp-image-47" src="http://1up4dev.org/wp-content/uploads/2008/06/pragmatic_unit_testting.jpg?w=240" alt="Pragmatic Unit Testing" width="240" height="240" /></a>

Numa leitura leve e até divertida (sou nerd mesmo), os autores abordam conceitos práticos de testes que não estão ligados diretamente ao <a href="http://www.junit.org">JUnit</a>, e sim a "Filosofia de Testes". O legal que os principais conceitos são apresentados com acrônimos como "Right BICEP", "CORRECT Boundary Conditions", "A TRIP", MockObjects e etc. Depois da passagem por todos esses acrônimos, os próximos capítulos atacam temas como, onde colocar os testes, design dos testes e etc.

Isso pode parecer estranho, mas de todos os capítulos o que eu mais gostei foi do primeiro, a Introdução, talvez porque no momento estou com a água do waterfall até o pescoço, e nele os autores colocam as dicas de como contra-argumentar as desculpas para não fazer testes. Exemplos dos tópicos, "Por que devo me importar com testes ?" e "Desculpas para não testar", parece que os autores realmente conhecem o lado negro da força. Por sinal, achei este último tão interessante, que estou pensando em pedir permissão para traduzi-lo e postar aqui, se alguém souber o caminho das pedras e quiser ajudar eu peço a gentileza de entrar em contato.

Gostei muito do livro, o considero uma ótima referência sobre o tema, veja bem, <strong>referência</strong>, pois se queres uma biblia do JUnit, descarte-o. Sei que muitos da nossa área não conhecem nada sobre o assunto, e um ótimo começo seria por ele.

Agora, voltando um pouco pra minha (e de muitos) realidade cruel, antes de ler o livro eu imaginava (ou sonhava ?) que o sistema atual em que trabalho, poderia ser implantado testes, agora, com uma visão mais pragmática, tenho certeza que estava certo, só que mirando na camada errada. Aqui, a maioria da lógica (uns 90%) está em PL/SQL no banco, e a melhor maneira de implantar testes seria começando com um PL/SQLUnit ... mas aí já é assunto pra outro post. Ahh, ainda não pesquisei, mas deve existir com certeza.

Chegando ao fim do livro ...

Uma parte chata do livro foi quando terminei de lê-lo, confesso que fiquei com uma vontade de "quero mais" e acabei ficando com a impressão de que só li a ponta do iceberg sobre o tema. Sugestões de mais livros sobre o tema, são bem vindas !]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>43</wp:post_id>
		<wp:post_date>2008-06-26 16:54:19</wp:post_date>
		<wp:post_date_gmt>2008-06-26 19:54:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>resenha-do-livro-pragmatic-unit-testing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="pragmatic-waterfall"><![CDATA[pragmatic waterfall]]></category>
		<category domain="category" nicename="resenhas"><![CDATA[resenhas]]></category>
		<category domain="post_tag" nicename="testes-unitarios"><![CDATA[testes unitários]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077274]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>419</wp:comment_id>
			<wp:comment_author><![CDATA[André Santos]]></wp:comment_author>
			<wp:comment_author_email>psantos@uol.com.br</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.120.130.201</wp:comment_author_IP>
			<wp:comment_date>2009-10-10 18:03:39</wp:comment_date>
			<wp:comment_date_gmt>2009-10-10 21:03:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Roger

Há um "xUnit" para PL/SQL sim: utPLSQL.
Infelizmente ainda não tive a oportunidade de usar, mas vai aí a dica.  ;)

   http://www.ooug.org/2003slides/utPLSQL.pdf

   http://utplsql.oracledeveloper.nl

E, pela Wikipedia, aparecem outros...

   http://en.wikipedia.org/wiki/List_of_unit_testing_frameworks#PL.2FSQL

PLUTO: PL/SQL Unit Testing for Oracle
   http://en.oreilly.com/oscon2008/public/schedule/detail/3026

   http://it.toolbox.com/blogs/parthas/unit-testing-your-plsql-code-13711

Boa sorte e parabéns pelo blog!!!
Abraço!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>432</wp:comment_id>
			<wp:comment_author><![CDATA[O melhor da semana 01/11 a 07/11 &laquo; QualidadeBR]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://qualidadebr.wordpress.com/2009/11/08/o-melhor-da-semana-0111-a-0711/</wp:comment_author_url>
			<wp:comment_author_IP>66.135.48.207</wp:comment_author_IP>
			<wp:comment_date>2009-11-08 21:43:27</wp:comment_date>
			<wp:comment_date_gmt>2009-11-09 00:43:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Resenha do livro Pragmatic Unit Testing &#8211; Roger Leite (1up4Developers); [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Pensando na gente (desenvolvedores!)</title>
		<link>http://1up4dev.org/2008/07/pensando-na-gente-desenvolvedores/</link>
		<pubDate>Sun, 06 Jul 2008 20:01:06 +0000</pubDate>
		<dc:creator>miguelhorlle</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/?p=48</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://1up4dev.org/?p=45" target="_self"><img class="alignleft size-medium wp-image-50" src="http://1up4dev.org/wp-content/uploads/2008/07/logo.gif?w=300" alt="" width="300" height="61" /></a>

Bom pessoal, hoje estou aqui pra pedir ajuda. Sim, pedir ajuda pra todos àqueles que utilizam a web(<a title="World Wide Web" href="http://en.wikipedia.org/wiki/World_Wide_Web" target="_blank">www</a>) para alguma coisa, seja para estudar, trabalhar, jogar ou ficar rico! E falo por todos desenvolvedores que tem o navegador como <em>container</em> de suas aplicações, que tem que lidar com as diversidades de dois mundos, MS Internet Explorer 6 contra a rapa!

O dia-a-dia no desenvolvimento de software web é um tanto sofrido para quem tem que, além de fazer uma aplicação com boa usabilidade, performance e ainda bonitinha, tem de manter compatibilidade com a ferramenta &lt;voz_do_faustão&gt;da gloriosa Microsoft&lt;/voz_do_faustão&gt; que vem com o Windows XP: IE6. Sempre que você faz algum milagre em JavaScript, ou usa alguma técnica Web 2.0 pensando em agradar o usuário final (ou até mesmo o seu gerente!), tem que ficar com os dois pés atrás, pois você só pode comemorar depois de testar no IE6. O IE6 com certeza pode ser apontando como o pior navegador de todos os tempos, lento, péssima usabilidade, segurança terrível e ainda vai na contra-mão de todos os padrões WWW. O fato é que muita gente que programa não sabe que na verdade nem <a title="JavaScript" href="http://en.wikipedia.org/wiki/JavaScript" target="_blank">JavaScript</a> este browser suporta, na verdade ele suporta um clone da Microsoft chamado <a title="JScript" href="http://en.wikipedia.org/wiki/JScript" target="_blank">JScript</a>, este sim é o que deixa os programadores do mundo todo de cabelo em pé.

É claro que eu não podia deixar de fazer um comentário maldoso. Atualmente ainda temos muitas aplicações que não usam muitos recursos maravilhosos que a nova gereção de navegadores oferecem por culpa de empresas que não tem coragem de chutar o balde e forçar seus clientes à migrarem seus navegadores em prol de uma melhoria para todos, desenvolvedores e usuários! É claro que este tipo de empresa casualmente adotam metodologias duvidosas (waterfall puro!!), que refletem diretamente na qualidade de seus aplicativos, mas por outro lado temos empresas que lideram um movimento que deveria ser seguido por todos àqueles que querem se manter no mercado, uma delas é a <a title="37signals" href="http://www.37signals.com/" target="_blank">37Signals</a>, que já manifestou algumas vezes o seu abandono ao IE6 dizendo que apartir do dia 15 de agosto todas suas aplicações passariam a não ter o compromisso de suportar o IE6.

Bom, acho que já ficou claro até aqui, que o passoal do 1Up4Developers apoia esta causa, e é por isso que escrevo este post, para mostrar a nossa aderência à campanha <a title="SaveTheDevelopers" href="http://www.savethedevelopers.org" target="_blank">SaveTheDelelopers.</a>

Assim como nós, muitas pessoas começam a apoiar essa campanha através de seus blogs, pessoas que são referência no desenvolvimento de software web. Eu descobri esta campanha através do blog <a title="Nome do Jogo" href="http://www.nomedojogo.com/2008/07/06/salve-os-desenvolvedores-diga-nao-ao-internet-explorer-6/" target="_blank">Nome do Jogo</a>, do Carlos Brando, e de imediato pensei em fazer este post.

Pessoal, disseminem esta idéa em todos os lugares, quando algum parente chamar você para consertar seu computador diga: só se você atualizar o seu navegador!

Abraço]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>45</wp:post_id>
		<wp:post_date>2008-07-06 17:01:06</wp:post_date>
		<wp:post_date_gmt>2008-07-06 20:01:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pensando-na-gente-desenvolvedores</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="interfaces"><![CDATA[interfaces]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="marketing"><![CDATA[marketing]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077722]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>49</wp:comment_id>
			<wp:comment_author><![CDATA[rodrigopanachi]]></wp:comment_author>
			<wp:comment_author_email>rodrigopanachi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.120.24.13</wp:comment_author_IP>
			<wp:comment_date>2008-07-08 00:52:38</wp:comment_date>
			<wp:comment_date_gmt>2008-07-08 03:52:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Miguel, fantástico esse post! Desde que comecei a me interessar por desenvolvimento web (há uns 3 anos atrás) esse problema da compatibilidade de browsers sempre me perseguiu. Assim que aprendia uma técnica nova, tinha que descobrir como fazer para que ela funcionasse no IE, etc...

Não acredito que em pleno ano 2008 as pessoas ainda estejam "presas" à Microsoft e seu "glorioso navegador". O Firefox está aí e de graça, para ser baixado por quem quiser a qualquer hora. E não é só ele, tem o Opera que também está muito bom e muitos outros por aí (não lembro todos).

Infelizmente, para nós (desenvolvedores), muitas empresas ainda têm o rabo preso com "marcas" e desenvolvem as aplicações nos moldes desses navegadores limitados. Os recursos que não são sacrificados ficam sofriveis de implementar.

Já aderi a esta campanha desde Janeiro, quando comecei a desenvolver meu blog, que por sinal rodava muito bem no Firefox mas alguns recursos de CSS não funcionavam no IE. Pra quem se sentisse prejudicado, tinha um link enorme para baixar o Firefox.

Depende de nós, desenvolvedores, apoiar este movimento e fazê-lo decolar!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>50</wp:comment_id>
			<wp:comment_author><![CDATA[miguelhorlle]]></wp:comment_author>
			<wp:comment_author_email>miguel.horlle@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>201.21.27.199</wp:comment_author_IP>
			<wp:comment_date>2008-07-08 03:03:21</wp:comment_date>
			<wp:comment_date_gmt>2008-07-08 06:03:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Realmente Rodrigo, e acho que cabe à nós desenvolvedores espalharmos esta informação para o maior número de pessoas possível. Testes como ACID3(http://acid3.acidtests.org/) devem se tornar de conhecimento de todos, para que no fim, todos tenham discernimento para escolher a melhor ferramenta para comportar aquilo que no final acaba sendo a maior parte das aplicações de um usuário regular, web!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>115</wp:comment_id>
			<wp:comment_author><![CDATA[miguelbaldi]]></wp:comment_author>
			<wp:comment_author_email>miguel.baldi@1up4dev.org</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>189.120.146.223</wp:comment_author_IP>
			<wp:comment_date>2009-03-29 13:40:37</wp:comment_date>
			<wp:comment_date_gmt>2009-03-29 16:40:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wesley, respondi no seu email. Qualquer dúvida, descreva melhor o seu problema, que a gente tenta ajudar.
Abraço]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>5</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>114</wp:comment_id>
			<wp:comment_author><![CDATA[Wesley Oliveira]]></wp:comment_author>
			<wp:comment_author_email>wesleyjoliveira@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.srweb.com.br</wp:comment_author_url>
			<wp:comment_author_IP>200.208.43.184</wp:comment_author_IP>
			<wp:comment_date>2009-03-25 08:31:50</wp:comment_date>
			<wp:comment_date_gmt>2009-03-25 11:31:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ae Miguel,

acho que estou postando no lugar errado, mas gostaria de saber se você conseguiu colocar o Redmine na Locaweb (vi um post seu que tinha conseguido resolver alguns problemas de lá), se possivel gostaria que você me desse uma ajuda nisso.

Abraço]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>GEdit para RoR de modo fácil</title>
		<link>http://1up4dev.org/2008/08/gedit-para-ror-de-modo-facil/</link>
		<pubDate>Sun, 03 Aug 2008 17:04:26 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=55</guid>
		<description></description>
		<content:encoded><![CDATA[Olá Pessoal, terceira reinauguração do blog, e agora finalmente resolvemos o sonho do dominio próprio ! :D

Uma das grandes dificuldades para quem está iniciando com Ruby on Rails no linux, é descobrir qual editor usar, já que o sempre-citado <a title="Textmate" href="http://macromates.com/">Textmate</a> é somente para Mac.

O que eu estou usando atualmente é o <a title="gedit" href="http://www.gnome.org/projects/gedit/">gedit</a>, editor de texto padrão, que vem com o Ubuntu e provavelmente com o Gnome.

Quando comecei minha busca pelo editor perfeito, encontrei vários tutoriais que ensinavam a encher o gedit de plugins, só que era muito manual, tinha que baixar um por um ... quando tive que fazer a segunda vez, desisti, e resolvi buscar por soluções melhores.

Sempre ouvi o <a title="Rails Podcasts" href="http://podcast.rubyonrails.pro.br/">Rails Podcast</a>, e em algum destes, o Carlos Brando citou o <a title="github" href="http://www.github.com/">github</a>. Entrei lá, e fui verificar o que tinha de bom, e até hoje não sei como encontrei os projetos, só sei que comecei a  usá-los.

Vamos ao que interessa !

No projeto <a title="gedit-rails" href="http://github.com/mig/gedit-rails/tree/master">gedit-rails</a> faça o download <a title="dowload em tar do gedit-rails" href="http://github.com/mig/gedit-rails/tarball/master">aqui</a> ou clique em download na página do projeto (estamos no linux, use o formato tar). Descompacte o arquivo, entre na pasta e execute o install.sh veja a imagem abaixo:

[caption id="attachment_65" align="aligncenter" width="300" caption="install do gedit-rails"]<a href="http://1up4dev.org/wp-content/uploads/2008/08/install-gedit-rails.png"><img class="size-medium wp-image-65" title="install-gedit-rails" src="http://1up4dev.org/wp-content/uploads/2008/08/install-gedit-rails-300x131.png" alt="install-gedit-rails" width="300" height="131" /></a>[/caption]

No projeto <a title="gedit-themes" href="http://github.com/mig/gedit-themes/tree/master">gedit-themes</a> você encontrará temas para o visual do gedit, o meu preferido é o darkmate, acho muito confortável para os olhos, mas existem várias opções. O processo de instalação é mais simples que os plugins.

Baixe os temas em tar <a title="download gedit-themes" href="http://github.com/mig/gedit-themes/tarball/master">aqui</a> ou no botão download na página do projeto. Descompacte o tar numa pasta separada, e na tela de preferências, fontes e cores do gedit, você consegue adicionar o novo tema que deseja.

<a href="http://1up4dev.org/wp-content/uploads/2008/08/add-gedit-theme2.png"><img class="aligncenter size-medium wp-image-68" title="add-gedit-theme" src="http://1up4dev.org/wp-content/uploads/2008/08/add-gedit-theme2-300x181.png" alt="" width="300" height="181" /></a>

Veja o resultado aqui:

<a href="http://1up4dev.org/wp-content/uploads/2008/08/result-gedit2.png"><img class="aligncenter size-medium wp-image-70" title="result-gedit" src="http://1up4dev.org/wp-content/uploads/2008/08/result-gedit2-300x158.png" alt="" width="300" height="158" /></a>

Infelizmente estou sem tempo para entrar nos detalhes de cada plugin, de qualquer maneira, vou deixar aos interessados os links, que contém informações valiosas:
<ul>
	<li><a title="HTML Tidy" href="http://www.eng.tau.ac.il/~atavory/gedit-plugins/html-tidy/">HTML Tidy</a></li>
	<li><a title="Rails Hot Commands" href="http://code.google.com/p/rhc/">Rails Hot Commands</a></li>
	<li><a title="Rails Hotkeys" href="http://simplesideias.com.br/rails-hotkeys/">Rails Hotkeys</a></li>
	<li><a title="Snapopen" href="http://www.upperbound.net/snapopen/">Snapopen</a></li>
</ul>
Existem muitos plugins para o gedit, caso estejam procurando por mais, tentem na <a title="Lista de Plugins para o gedit" href="http://simplesideias.com.br/lista-de-plugins-para-o-gedit/">Lista de Plugins para o gedit</a> do Fernando Vieira, e tem também a <a title="Lista oficial de plugins do gedit" href="http://live.gnome.org/Gedit/Plugins">lista oficial de plugins</a> do gedit.

Dicas de novos plugins, comentários e/ou críticas são bem vindas !

Abraço e sucesso!

UPDATE: Sugestões do <cite>Philipe Farias</cite>, via comentários ! Valeu pelas dicas !

Plugins:

- Snippets ou Trechos - padrão do Gedit (tem que ativar). Quando o gedit-rails é instalado ele adiciona os snippets para erb, ruby e shoulda;

<a href="http://1up4dev.org/wp-content/uploads/2008/08/gedit-snippets.png"><img class="aligncenter size-medium wp-image-83" title="gedit-snippets" src="http://1up4dev.org/wp-content/uploads/2008/08/gedit-snippets-249x300.png" alt="" width="249" height="300" /></a>

- <a href="http://github.com/urubatan/gedit_formatter/tree/master">gedit_formatter</a>

<a href="http://github.com/urubatan/gedit_formatter/tree/master"></a>- <a href="http://www.garyharan.com/index.php/2006/11/16/gemini-gedit-plugin-for-all-those-textmate-fans/">gemini</a>

- <a href="http://alexandredasilva.wordpress.com/gedit-todo-list-plugin/">gedit TODO list</a>

Esta parte é interessante para seguir ao padrão Ruby, "Recomenda-se também configurar a “largura das tabulações” para 2 e ativar “inserir espaços em vez de tabulações” nas preferências do Gedit".

Aqui já entra configurações mais pessoais que você encontra na tela de preferências do gedit. Também de ativar “mostrar números de linhas”, “destacar linha atual” e “destacar parêntesis correspondentes”.

Quanto ao esquema de cor acho o Oblivion mais “completo” para Rails. Screenshot do gedit com Oblivion:

<a href="http://1up4dev.org/wp-content/uploads/2008/08/gedit-oblivion.png"><img class="aligncenter size-medium wp-image-84" title="gedit-oblivion" src="http://1up4dev.org/wp-content/uploads/2008/08/gedit-oblivion-300x216.png" alt="" width="300" height="216" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>55</wp:post_id>
		<wp:post_date>2008-08-03 14:04:26</wp:post_date>
		<wp:post_date_gmt>2008-08-03 17:04:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gedit-para-ror-de-modo-facil</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gedit"><![CDATA[gedit]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078084]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>51</wp:comment_id>
			<wp:comment_author><![CDATA[Andre]]></wp:comment_author>
			<wp:comment_author_email>andf5@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.100.101.45</wp:comment_author_IP>
			<wp:comment_date>2008-08-04 14:25:18</wp:comment_date>
			<wp:comment_date_gmt>2008-08-04 17:25:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ficou bem loco...
acho que seria legal também você colocar como você conseguiu habilitar aquela busca ("ctrl+shif+r") dentro de um projeto.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email>roger.leite@1up4dev.org</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>189.100.101.45</wp:comment_author_IP>
			<wp:comment_date>2008-08-05 08:03:48</wp:comment_date>
			<wp:comment_date_gmt>2008-08-05 11:03:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pois é André ... fiz no final de semana e acabei não entrando em detalhes dos plugins.

Sobre o ctrl+shift+r que estamos tão acostumados no Eclipse, o mesmo ocorre com o plugin SnapOpen, por padrão, o atalho é ctrl+alt+o]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>53</wp:comment_id>
			<wp:comment_author><![CDATA[Philipe Farias]]></wp:comment_author>
			<wp:comment_author_email>pmf2k2@yahoo.com.br</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.105.114.107</wp:comment_author_IP>
			<wp:comment_date>2008-08-05 19:48:12</wp:comment_date>
			<wp:comment_date_gmt>2008-08-05 22:48:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Esse pequeno "bundle" pro Gedit é um bom começo mas ainda acho que é necessário mais algumas facilidades...uso bastante e recomendo também esses plugins:
- Snippets ou Trechos - padrão do Gedit (tem que ativar). Quando o gedit-rails é instalado ele adiciona os snippets para erb, ruby e shoulda;
- gedit_formatter (http://github.com/urubatan/gedit_formatter/tree/master);
- gemini (http://www.garyharan.com/index.php/2006/11/16/gemini-gedit-plugin-for-all-those-textmate-fans/);
- Gedit TODO list (http://alexandredasilva.wordpress.com/gedit-todo-list-plugin/).

Recomenda-se também configurar a "largura das tabulações" para 2 e ativar "inserir espaços em vez de tabulações" nas preferências do Gedit. Gosto também de ativar "mostrar números de linhas", "destacar linha atual" e "destacar parêntesis correspondentes". Quanto ao esquema de cor acho o Oblivion mais "completo" para Rails.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>54</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email>roger.barreto+comments@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.100.101.45</wp:comment_author_IP>
			<wp:comment_date>2008-08-07 14:31:42</wp:comment_date>
			<wp:comment_date_gmt>2008-08-07 17:31:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Philipe

Obrigado ! Belas dicas, vou atualizar o post com estes "detalhes" !
Valeu !]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>409</wp:comment_id>
			<wp:comment_author><![CDATA[José Carlos Maciel]]></wp:comment_author>
			<wp:comment_author_email>josecarlos@jcmaciel.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.jcmaciel.com</wp:comment_author_url>
			<wp:comment_author_IP>201.33.188.221</wp:comment_author_IP>
			<wp:comment_date>2009-08-08 14:25:07</wp:comment_date>
			<wp:comment_date_gmt>2009-08-08 17:25:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Quase um TextMate, muito bom!
Parabens!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>390</wp:comment_id>
			<wp:comment_author><![CDATA[Beto]]></wp:comment_author>
			<wp:comment_author_email>madeinnordeste@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://beto.euqueroserummacaco.com</wp:comment_author_url>
			<wp:comment_author_IP>200.199.140.206</wp:comment_author_IP>
			<wp:comment_date>2009-07-12 19:15:37</wp:comment_date>
			<wp:comment_date_gmt>2009-07-12 22:15:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muito Show! Cada dia que passa me apaixono mais pelo Gedit.

Agora uma dúvida, estou escrevendo uns snippets p/ o Kohanaphp pois ultilizo esse framework em uns projetos, porem em alguns desses snippets a descircao fica loga, pois sempre coloco Kohana na frente p/ saber do q se trata.

Vc sabe onde eu consigo configurar o plugin Snippets / Trechos do Gedit p aumentar essa caixa de sugestoes ( aquele q aparece os snipets qdo estamos codificando )  ??

Abzs e parabens pelo blog.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>391</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email>roger.barreto+comments@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org</wp:comment_author_url>
			<wp:comment_author_IP>200.170.212.34</wp:comment_author_IP>
			<wp:comment_date>2009-07-13 08:36:24</wp:comment_date>
			<wp:comment_date_gmt>2009-07-13 11:36:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ow Beto, valeu pelo comentário!
Conheço pouco de python, mas acho que já serve ...

Primeira sugestão, abrevie Kohana para duas letras, tipo Ko! :D

Segunda sugestão (caso a primeira não se aplique):
 - Para encontrar os fontes do plugin, execute no terminal: "locate snippets". Entre os resultados, no meu caso eu achei o fonte em: "/usr/lib/gedit-2/plugins/snippets"
 - No arquivo SnippetComplete.py, você consegue alterar a largura e altura, para isso, edite-o com o comando: "sudo gedit /usr/lib/gedit-2/plugins/snippets/SnippetComplete.py"

Na linha 202, abaixo do "class SnippetComplete(gtk.Window):" e "def __init__(self, nodes, prefix = None, description_only = False):", você encontrará "self.set_size_request(200, 300)", onde 200 é a largura e 300 a altura. Depois que alterar, não esqueça de fechar todos os gedits abertos para testar!

Lembrando que isto é um "hack" no fonte do plugin, logo, se atualizá-lo, irá perder esta alteração.

Veja também a dica para gerar cheat sheet do seus snippets: http://1up4dev.org/2009/05/gerando-cheat-sheet-para-os-snippets-do-gedit/

Espero que funcione!
Sucesso!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Software é sobre investimento</title>
		<link>http://1up4dev.org/2008/10/software-e-sobre-investimento/</link>
		<pubDate>Thu, 30 Oct 2008 03:00:33 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.wordpress.com/?p=40</guid>
		<description></description>
		<content:encoded><![CDATA[Atualmente, desenvolver software não é uma atividade barata. O custo com os profissionais envolvidos, equipamentos, licenças de software (não é o caso se a equipe utiliza software livre), entre outros recursos, para um software que demore em média três meses para ser desenvolvido com uma equipe de 5 pessoas sairá pelo mesmo valor de um carro <span style="text-decoration: line-through;">popular</span> de luxo, por exemplo. Já que o investimento é alto, é importante que o software seja confiável, durável, adaptável e principalmente que sua utilização/adoção, além de atender a um problema/necessidade, obtenha o <a href="http://pt.wikipedia.org/wiki/Retorno_sobre_investimento" target="_blank">retorno sobre o investimento</a>.

Para uma empresa que desenvolve software por encomenda, o retorno sobre o investimento (equipe, equipamentos, etc) é o lucro obtido com a venda do software através de uma conta muito simples: investimento - custo = lucro. Desta forma, qualquer CEO sabe que quanto menor for o "custo", maior será o "lucro". É aqui que mora o perigo!

Uma das falsas ilusões das metodologias baseadas no waterfall é o controle sobre o processo. Ou seja, com um processo bem <span style="text-decoration: line-through;">engessado</span> definido, o "motor" da empresa giraria de modo uniforme, sendo controlável e mensurável. Uma vez que esse mecanismo esteja funcionando, pode-se conter gastos contratando-se mão-de-obra mais barata para fazer a parte repetitiva e "não-criativa" do processo, que já foi previamente "projetada" pelos analistas e arquitetos. Desta forma, concentra-se a maioria do esforço no projeto ou desenho do software, que é mais caro, para recuperar o "gasto" na fase de construção, que é mais barata.

[caption id="attachment_31" align="aligncenter" width="300" caption="Modelo Waterfal: etapas bem definidas "]<a href="http://1up4dev.org/wp-content/uploads/2008/06/waterfall_model.png"><img class="size-medium wp-image-31" title="Waterfall Model" src="http://1up4dev.org/wp-content/uploads/2008/06/waterfall_model-300x230.png" alt="Waterfall Model" width="300" height="230" /></a>[/caption]

Este método funciona muito bem... na <a href="http://pt.wikipedia.org/wiki/Engenharia_civil" target="_self">engenharia civil</a>, onde os problemas são bem definidos (a necessidade de atravessar um rio, por exemplo), a solução <strong>deve</strong> ser projetada (uma ponte) e executada por especialistas em construção (pedreiros). O esforço pode ser mensurado e cobrado do cliente. Dificilmente ocorrerão mudanças no projeto (ao invés de ponte, decidem mudar para um teleférico, por exemplo) e o tempo de construção pode ser diminuído aumentando-se a mão-de-obra porém permanecendo o mesmo custo no final do processo.

Infelizmente com software <a href="http://wordaligned.org/articles/why-software-development-isnt-like-construction" target="_blank">não é bem assim</a>. O desenvolvimento de software é (ou deve ser) um processo criativo e <a href="http://pt.wikipedia.org/wiki/Desenvolvimento_iterativo_e_incremental" target="_blank">iterativo</a>, mais parecido com <a href="http://gc.blog.br/2008/07/20/cuidando-para-que-o-software-nao-apodreca/" target="_blank">jardinagem</a>. O problema/necessidade dificilmente é bem definido (dificuldade de controlar as vendas pela internet, por exemplo) e os requisitos geralmente mudam o tempo todo. Os clientes normalmente não sabem exatamente quais são suas necessidades e precisam "aprender" enquanto o software vai sendo desenvolvido, atendendo às necessidades aos poucos.

[caption id="attachment_208" align="aligncenter" width="300" caption="Clientes não sabem exatamente o que querem no início do projeto"]<a href="http://1up4dev.org/wp-content/uploads/2008/10/iterating.jpg"><img class="size-medium wp-image-208" title="Iterativo" src="http://1up4dev.org/wp-content/uploads/2008/10/iterating-300x80.jpg" alt="Cliente não sabe exatamente o que quer" width="300" height="80" /></a>[/caption]

Voltando ao assunto do post, para o cliente o que mais importa é que o software atenda suas necessidades (mesmo que ele ainda não saiba exatamente quais são). O retorno sobre o investimento começa a ficar evidente quando o cliente utiliza o software e obtém proveito dele, por exemplo, tendo um maior controle e organização de suas vendas pela internet. Neste caso o software é um meio pelo qual o cliente consegue resolver seus problemas ou atender suas necessidades. Isto o software não faz por sí só.

Para uma empresa que desenvolve software, o retorno sobre o investimento é obtido durante o desenvolvimento do software, guiado por <a href="http://pt.wikipedia.org/wiki/Programa%C3%A7%C3%A3o_extrema" target="_blank">práticas</a> e ferramentas que fornecem velocidade e confiabilidade ao software, deixando-o adequado às necessidades do cliente, estável e fácil de ser mantido. Para obter estas características, a equipe deve estar muito alinhada e ter a experiência e habilidade técnica necessária para evitar trabalho desnecessário e focar na resolução do problema, colaborando com o cliente para fornecer constantemente software funcionando e que agrega valor ao negócio. Ou seja, devem seguir o <a href="http://agilemanifesto.org/" target="_blank">manifesto ágil</a>!

Atualmente, as empresas de desenvolvimento de software mais bem sucedidas utilizam metodologias ágeis, ou seja, pessoas ao invés de processos. O investimento em um bom profissional é recompensado pela sua experiência que pode economizar muito tempo e dinheiro ao longo de um projeto. Bons profissionais, motivados, utlizando metodologias ágeis são mais produtivos, ou seja, valem o investimento.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date>2008-10-30 00:00:33</wp:post_date>
		<wp:post_date_gmt>2008-10-30 03:00:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>software-e-sobre-investimento</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agilidade"><![CDATA[agilidade]]></category>
		<category domain="category" nicename="processos"><![CDATA[processos]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077656]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>79</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email>roger.leite@1up4dev.org</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>189.38.253.7</wp:comment_author_IP>
			<wp:comment_date>2008-10-30 07:43:09</wp:comment_date>
			<wp:comment_date_gmt>2008-10-30 10:43:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Legal o post, só um detalhe:
"três meses para ser desenvolvido com uma equipe de 5 pessoas sairá pelo mesmo valor de um carro popular"

Este carro popular é uma Pajero blindada ? hehehe

sucesso!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80</wp:comment_id>
			<wp:comment_author><![CDATA[Diego Carrion]]></wp:comment_author>
			<wp:comment_author_email>dc.rec1@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mouseoverstudio.com/blog/</wp:comment_author_url>
			<wp:comment_author_IP>189.20.40.106</wp:comment_author_IP>
			<wp:comment_date>2008-10-30 09:42:37</wp:comment_date>
			<wp:comment_date_gmt>2008-10-30 12:42:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muito legal o artigo, parabéns!

Somente umas coisinhas, Watterfall não sempre funciona muito bem na engenharia civil. A engenharia civil também pode ser agil em alguns casos! Sugero a leitura desse post que explica muito bem o que estou querendo dizer: http://agiletips.blogspot.com/2008/07/agile-bridge-analogy.html

Sobre os problemas/necessidades, eles devem ser bem definidos sim. Sem uma boa definição da necessidade ficaria bem difícil trabalhar com BDD, não e? Acho que o problema não é que as necessidades não são bem definidas, acho que o problema é que elas podem variar o tempo todo, hoje posso precisar de uma coisa e amanha de outra, como você falou seguidamente.

Para terminar, metodologias ágeis NÃO fala de pessoas AO INVÉS de processos, metodologias ágeis fala de pessoas SOBRE processos, que é bem diferente. Você pode seguir um processo sim, mas as pessoas tem que ser mais importantes que esse processo.

[]s]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>82</wp:comment_id>
			<wp:comment_author><![CDATA[Roberto Furutani]]></wp:comment_author>
			<wp:comment_author_email>roberto@furutani.com.br</wp:comment_author_email>
			<wp:comment_author_url>http://www.furutani.eti.br/wordpress</wp:comment_author_url>
			<wp:comment_author_IP>189.19.215.49</wp:comment_author_IP>
			<wp:comment_date>2008-10-31 14:48:47</wp:comment_date>
			<wp:comment_date_gmt>2008-10-31 17:48:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fala Panachi!

Muito bom esse post! Gostei muito dessa frase:

"O investimento em um bom profissional é recompensado pela sua experiência que pode economizar muito tempo e dinheiro ao longo de um projeto."

Parabéns

Até mais
Roberto]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>84</wp:comment_id>
			<wp:comment_author><![CDATA[Witaro]]></wp:comment_author>
			<wp:comment_author_email>witaro@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://witaro.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>201.9.171.118</wp:comment_author_IP>
			<wp:comment_date>2008-11-02 19:10:30</wp:comment_date>
			<wp:comment_date_gmt>2008-11-02 22:10:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Em um post que fiz ("Desenvolvendo software como uma Rock band") tento uma metáfora melhor que a da construção civil, jardinagem e cozinha. Lá pelo meio comento que como numa banda de rock o desenvolvimento pode ser visto não apenas como o desenvolvimento de bons produtos (músicas), mas também de pessoas. Afinal, a banda só continua fazendo músicas melhores e relevantes se seus integrantes se desenvolverem tanto técnica quanto artisticamente. Do contrário, vira fogo de palha. Abraço!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>85</wp:comment_id>
			<wp:comment_author><![CDATA[Rodrigo Panachi]]></wp:comment_author>
			<wp:comment_author_email>rodrigopanachi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://nobrokenwindow.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>201.52.226.155</wp:comment_author_IP>
			<wp:comment_date>2008-11-02 22:19:59</wp:comment_date>
			<wp:comment_date_gmt>2008-11-03 01:19:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Diego,

Já tinha visto esse artigo da "ponte", por isso citei esse exemplo da construção civil pra ilustrar, mas concordo com você: engenharia civil deve ser ágil também!
Achei muito boa sua definição de agilidade "pessoas sobre processos". Infelizmente muitas as empresas fazem o contrário, deixando os processos sobre as pessoas, e isso nós sabemos que não funciona.

@Witaro,

Fantástica sua definição de "software como uma rock band". Isso eu posso confirmar pois já tive uma banda... a as práticas ágeis se aplicam neste caso também, pois para fazer música de qualidade os integrantes precisam estar entrosados e serem bons tecnicamente.

Obrigado pelos comentários...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>95</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; Foco no problema]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2008/11/foco-no-problema/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2008-11-10 18:34:08</wp:comment_date>
			<wp:comment_date_gmt>2008-11-10 21:34:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] software deve ser um investimento lucrativo, proporcionando algum ganho às partes envolvidas. Quando uma necessidade surgir, o primeiro passo [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>412</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; Ruby on Rails: quando a linguagem de programação faz diferença!]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2009/08/ruby-on-rails-quando-a-linguagem-de-programacao-faz-diferenca/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2009-08-18 08:26:05</wp:comment_date>
			<wp:comment_date_gmt>2009-08-18 11:26:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] gente se forma na faculdade e de repente estamos trabalhando como programador em alguma empresa de software. A primeira coisa que você vai concluir é que nada a maioria das coisas que foram ensinadas na [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Maior Evento de Rails da América Latina</title>
		<link>http://1up4dev.org/2008/08/maior-evento-de-rails-da-america-latina/</link>
		<pubDate>Tue, 05 Aug 2008 11:45:18 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=76</guid>
		<description></description>
		<content:encoded><![CDATA[Divulgação:

Pessoal, o Akita deu a <a href="http://www.akitaonrails.com/2008/8/1/largada-para-o-maior-evento-de-rails-da-am-rica-latina">Largada para o Maior Evento de Rails da América Latina!</a>

Eu não vou perder ! O mais difícil foi convencer a patroa do gasto no cartão de crédito ! :D

<a href="http://www.locaweb.com.br/railssummit">
<img title="Rails Summit Latin America" src="http://www.akitaonrails.com/assets/2008/8/1/468x60.gif" border="0" alt="Rails Summit Latin America" width="468" height="60" /></a>

Pra quem quiser ir aquecendo os motores, e codificando Ruby, vou deixar alguns links ! (Coloquei o blogroll do meu Reader, não sei se vai aparecer via feed ! Pros curiosos, acessem o post.)

<script src="http://www.google.com/reader/ui/publisher-en.js" type="text/javascript"></script> <script src="http://www.google.com/reader/public/javascript-sub/user/07750879847976425298/label/development-ruby?callback=GRC_p(%7Bc%3A%22blue%22%2Ct%3A%22My%20%5C%22development-ruby%5C%22%20Blogroll%22%2Cb%3A%22true%22%7D)%3Bnew%20GRC" type="text/javascript"></script>

Comecei a participar da lista <a href="http://groups.google.com/group/rails-br?hl=pt-BR">rails-br</a>, dentre as várias discussões interessantes, tem esta, <a href="http://groups.google.com/group/rails-br/browse_thread/thread/ce77274e3e1b5f8b?hl=pt-BR">Brazilian Rails Blogs</a>, com mais blogs sobre Rails.

Sucesso! E nos encontramos lá !]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>76</wp:post_id>
		<wp:post_date>2008-08-05 08:45:18</wp:post_date>
		<wp:post_date_gmt>2008-08-05 11:45:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>maior-evento-de-rails-da-america-latina</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="eventos"><![CDATA[eventos]]></category>
		<category domain="category" nicename="marketing"><![CDATA[marketing]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TPW - Colocando dicas em prática</title>
		<link>http://1up4dev.org/2008/08/tpw-colocando-dicas-em-pratica/</link>
		<pubDate>Mon, 18 Aug 2008 17:02:43 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=91</guid>
		<description></description>
		<content:encoded><![CDATA[Depois de ler <a href="http://1up4dev.org/2008/05/the-pragmatic-programmer-no-ambiente-waterfall-e-claro/">The Pragmatic Programmer</a> é natural ficar empolgado, bom, uma prova disso foi meu próprio post sobre o assunto. Depois de ter "digerido" o livro, lancei as <a href="http://1up4dev.org/2008/06/tpw-dicas-para-o-desenvolvedor/">dicas para o desenvolvedor</a>, acabei inventando um termo legal <em>The Pragmatic Waterfall</em>, que resolvi transformá-lo numa série.

A primeira dica do "dicas para o desenvolvedor", foi:
- Gerador de código descartável.

Pois bem, hoje, vou mostrar um exemplo de "código descartável" que utilizei e deu certo ! :D

Problema: No projeto que estou existem algumas queries em arquivos XML do hibernate, preciso convertê-las para Spring. Pra cada query do hibernate, precisei gerar dois arquivos de XML do Spring e mais uma classe Java que herda de SqlUpdate ... blá blá blá. Bom, os detalhes não importam muito, <strong>o que importa é que vamos ler o XML do hibernate e gerar o que for necessário</strong>, tudo isso com <strong>Ruby</strong>!

Antes de qualquer coisa, já aviso que ainda não domino totalmente Ruby, e o script que fiz é do tipo código "descartável", então não tive o menor cuidado em deixá-lo bonito, apenas funcional. Acho que a melhor maneira de aprender uma nova linguagem é escrevendo código com ela, não somente lendo sobre.

Exemplo super simplificado do XML do Hibernate:
<script src="http://gist.github.com/6017.js"></script> script generator-bean em Ruby: <script src="http://gist.github.com/6026.js"></script>

É isto ! O script é simples e direto, deixei a saida pro console mesmo e para jogar em arquivo é muito simples:

$ ruby generator-bean.rb &gt; spring-exemplo.xml

O script que coloquei é uma versão bem reduzida, já que a idéia do post é mostrar que é possível transformar tarefas chatas e trabalhosas em scripts semi-automáticos ! Ah, lembrando que com ele consegui terminar a minha tarefa em 2 dias, sendo que a previsão era quase uma semana de trabalho !

Precisa de mais informações de como ler XML com Ruby !?

Segue as referências.
Tirei deste <a href="http://www.meupost.com/2008/07/10/lendo-xml-com-o-rexml-ruby/">post</a>, muito legal por sinal.
* API do REXML: <a href="http://www.ruby-doc.org/stdlib/libdoc/rexml/rdoc/index.html">http://www.ruby-doc.org/stdlib/libdoc/rexml/rdoc/index.html</a>
* Sobre o Electric XML: <a href="http://www.xml.com/pub/r/1098">http://www.xml.com/pub/r/1098</a>
* Tutorial um pouco mais complexo sobre XML com Ruby: <a href="http://www.xml.com/pub/a/2005/11/09/rexml-processing-xml-in-ruby.html">http://www.xml.com/pub/a/2005/11/09/rexml-processing-xml-in-ruby.html</a>

<strong>OBS:</strong> Estou usando o <a href="http://gist.github.com/">gist.github.com</a> para colocar o xml e script de exemplo, provavelmente não vai aparecer no leitor de feed.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>91</wp:post_id>
		<wp:post_date>2008-08-18 14:02:43</wp:post_date>
		<wp:post_date_gmt>2008-08-18 17:02:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tpw-colocando-dicas-em-pratica</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="pragmatic-waterfall"><![CDATA[pragmatic waterfall]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078395]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>56</wp:comment_id>
			<wp:comment_author><![CDATA[Everton J. Carpes]]></wp:comment_author>
			<wp:comment_author_email>everton.carpes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.95.117.193</wp:comment_author_IP>
			<wp:comment_date>2008-08-18 22:51:01</wp:comment_date>
			<wp:comment_date_gmt>2008-08-19 01:51:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Eh por este tipo de coisa que eu me sinto tao bem de trabalhar com Ruby... Eu vivo fazendo este tipo de coisa e cada vez mais sinto tesao em explorar cada minuscula possibilidade de usar a programacao a meu favor... Chega a ser engracado as vezes, quando me pego fazendo coisas como gerar propostas para clientes atraves de scripts que crio em minutos!

Ruby torna tarefas simples tao simples que tu consegue ter a vontade de programar, cada vez mais!! Ruby me mostrou pq eu comecei a programar, pq reflete MUITO a maneira que penso. Simplesmente as coisas saem, nao ha grandes dificuldades, mesmo quando a modelagem eh de coisas menos triviais do que dar parsing em um XML.

Ruby faz programadores se sentirem como tal pq ela serve para resolveres teus problemas, nao para ficares resolvendo os problemas da linguagem (que existem, claro, - basta lembrar do  UTF - mas sao tao triviais se comparado ao todo, que mal sao sentidos).

E uma coisa incrivel sobre Ruby eh que apesar de extremamente simples ela nao eh de forma alguma simploria! Exatamente pelo contrario, eh altemente expressiva, elegante e flexivel.

E apesar de toda esta pregacao sobre o Ruby, uma das coisas que mais aprendi com o uso de Ruby foi a respeitar outras linguagens e aprender a escolher o que ha de melhor... Ruby nao eh nada mais do que isso, um grande apanhado do que ha de melhor por aih! Conceito velho esse inclusive: nao reinvente a roda... e como meus pais me ensinaram:

"aprenda o que ha de bom e descarte o que ha de ruim!"

Hj me considero um programador mais feliz e tbm me considero mais programador e nao posso negar que a linguagem ajudou isso... antes eu muitas vezes pensava, poxa, isso poderia ser feito assim, mas me limitava, pq as linguagens que eu conhecia nao tornariam a tarefa tao simples quanto o que eu acabara de pensar... nao poso ser ingrato, claro q shell script e python me ajudaram muito e que muitas vezes eu abusei dos mesmos ( e ainda o faco), mas soh consegui realmente obter o que esperava quando me deparei com Ruby.

Essa coisa de ser descartavel, eh +||- como digitar comandos no shell... vc usa a linguagem a seu favor e resolve problemas... se a coisa se repetir demais, daih eh bom  pensar em solucoes mais reaproveitaveis, senao eh soh deletar, afinal vai ser TAO simples de recria-los quanto de lembrar onde foi que tu guardou eles (pra mim, lembrar de coisas eh uma tarefa terrivel... eu pensei em solucionar isso criando um trackerzinho, mas o pessoal da programacao neural dise que nao dava pra usar Ruby em mim mesmo :( ).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>57</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email>roger.barreto+comments@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org</wp:comment_author_url>
			<wp:comment_author_IP>189.100.87.218</wp:comment_author_IP>
			<wp:comment_date>2008-08-19 09:02:52</wp:comment_date>
			<wp:comment_date_gmt>2008-08-19 12:02:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Everton valeu pelo comentário, isso motivo muito, valeu mesmo !

Sobre o Ruby, realmente é contagiante ! Estava conversando com o Miguel sobre isso estes dias, eu falava o quanto era nerd chamar uma linguagem de "sexy!" ... hehehe ... bom, realmente é, mas só quem programa nela que tem esta sensação mesmo.

Concordo com tudo que disse!
Qualquer sugestão, critica e até idéias malucas ou não, me avisa, que a gente bloga !

Valeu de novo!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>58</wp:comment_id>
			<wp:comment_author><![CDATA[Everton J. Carpes]]></wp:comment_author>
			<wp:comment_author_email>everton.carpes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.95.117.193</wp:comment_author_IP>
			<wp:comment_date>2008-08-19 11:43:32</wp:comment_date>
			<wp:comment_date_gmt>2008-08-19 14:43:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hehe, pode ser bem nerd sim, mas eh real mesmo!!!

Vai ser um prazer mandar ideias sim, desde que eu lembre de fazer isso, hehe]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>59</wp:comment_id>
			<wp:comment_author><![CDATA[Xerife do Caos]]></wp:comment_author>
			<wp:comment_author_email>robertobrum@yahoo.com.br</wp:comment_author_email>
			<wp:comment_author_url>http://oscarasdeti.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>189.10.153.207</wp:comment_author_IP>
			<wp:comment_date>2008-08-23 10:42:05</wp:comment_date>
			<wp:comment_date_gmt>2008-08-23 13:42:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Roger, este tipo de mentalidade é o que acredito que todos deveriam ter, ou seja, criar atalhos para os caminhos que fazemos todos os dias. Por que andar km se podemos chegar ao mesmo ponto andando metros, ou mesmo cm?

Se você puder colocar o meu blog nos seus links, ficaria muito grato:
http://oscarasdeti.blogspot.com/
O teu blog já está linkado no meu...

Lá vou apresentar idéias como esta, mas também algo que considero muito melhor que isso, que são componentes que reconhecem o que deve ser feito, sem necessidade de programação, como por exemplo Tela de Cadastramento que identifica os campos de uma tabela e monta a tela em tempo de execução.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>60</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email>roger.leite@1up4dev.org</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>200.170.212.34</wp:comment_author_IP>
			<wp:comment_date>2008-08-29 08:33:31</wp:comment_date>
			<wp:comment_date_gmt>2008-08-29 11:33:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Olá Xerife, valeu pelo comentário e pelo link ! Fiz questão de adicionar seu blog as links daqui, pois o considero muito "real life" ! :D

Por algum motivo maluco, seu comentário caiu como spam no Wordpress, por isso que só vi hoje.

Sobre a idéia "Tela de Cadastramento que identifica os campos de uma tabela e monta a tela em tempo de execução", cara, o que eu posso dizer ? Eu tenho medo quando vejo coisas muito "automágicas" assim, sei lá, me lembra muito Visual Studio, talvez por isso que não tenho um pressentimento bom.

Quanto a este tipo de solução, acho que seria legal, ao invés de identificar campos em <b>tabela</b> e monta tela em <b>execução</b>, por que não pensar em algo como o scaffold do Rails ? (http://www.htmlstaff.org/ver.php?id=4802)

Este tipo de solução que você citou, fica muito amarrada a banco de dados ... acredito que chegou o momento de "mirar" para classes de dominio da aplicação, e lembrar do banco só quando tiver salvar/recuperar algo.

Valeu pelo comentário, espero não ter acabado com seus sonhos ... hehehe

[]s]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Contos do programador pragmático</title>
		<link>http://1up4dev.org/2008/09/contos-do-programador-pragmatico/</link>
		<pubDate>Wed, 03 Sep 2008 03:30:24 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=179</guid>
		<description></description>
		<content:encoded><![CDATA[Durante minha carreira profissional <span style="text-decoration: line-through;">fui obrigado</span> tive a oportunidade de atuar brevemente no campo gerencial do desenvolvimento de software. Foi uma experiência que agregou muito conhecimento e me fez enxergar minha atividade principal, programação, com outros olhos. Também pude entender melhor as estratégias comerciais da empresa, gerenciamento de recursos, retorno sobre investimento, etc. Além de aprender mais sobre desenvolvimento de software, também pude conhecer os vilões dessa história, na maioria dos casos: a diretoria.

Na maioria dos problemas que presenciei, a diretoria (quem toma decisões e libera a grana do projeto) contribuiu para que as coisas ficassem cada vez piores, seja tomando decisões visando curto prazo ou aplicando conceitos ilusórios como adoção de uma tecnologia ou metodologia da moda. Seguem algumas pérolas da "diretoria":
<ul>
	<li>"Programadores são descartáveis". Não consigo acreditar que pessoas numa hierarquia superior ainda tenham esta visão dos programadores, comparando desenvolvimento de software com construção civíl e programadores com pedreiros (em alguns [poucos] casos é verdade). Certa vez presenciei um dos mais famosos defensores de práticas ágeis, autor de vários livros e que subiu na carreira devido a seu destaque como programador (Delphi), dizer: "programadores têm em todo lugar, basta sacudir uma árvere e cai um monte deles no chão". Depois dessa, passei a ignorar tudo que ele escreve ou fala. Talvez se ele tivesse lido pelo menos o resumo do <a href="http://agilemanifesto.org/">Manifesto ágil</a> saberia que blasfemou feio!</li>
	<li>"Meu maior gasto é gerado pelos programadores". Fiquei sem reação quando ouvi esta pérola do dono da empresa. Ele ainda achava que os atrazos e erros do sistema vinham dos seus quatro programadores juniores que utilizavam uma tecnologia quem ninguém conhecia direito (mas está na moda), não utilizavam nenhum processo ou metodologia e ainda tinham que manter contato direto com os clientes.</li>
	<li>"Precisamos de documentação". Esta todos nós já ouvimos e conhecemos o final. Um certo dia alguem chega na empresa e decide que tudo deverá ser documentado. Então gastam-se alguns meses levantando os requisitos do sistema, definindo os casos de uso e diagramas UML, reuniões, definição do banco de dados, etc. Lá pelo 10º mês descobrem que nenhuma linha de código foi escrita e o sistema só existe no papel. Nem preciso contar o final da história né?</li>
	<li>"Como assim não dá pra desenvolver este ERP em três meses?". Nunca assisti um Tech-Ed nem outra palestra do tipo, por isso não sei exatamente o que <span style="text-decoration: line-through;">vendem</span> falam sobre pazos, mas com certeza é uma mentira das grandes! Não existe mágica nesse ramo, não existe ferramenta nem tecnologia milagrosa e nenhum processo vai acelerar o desenvolvimento do sistema. Ponto. Somente uma pessoa que não entende nada sobre desenvolvimento de software acreditaria nesse conto de vigário. Um general sabe comandar seus soldados pois certamente foi um soldado e esteve num campo de batalha. Será que todo chefe/diretor foi programador (de verdade) no início da carreira? Ter programado em Cobol há 20 anos atrás não conta!</li>
	<li>"Não podemos perder tempo com refactoring e testes unitários". Bom, se deixar o código do sistema mais "manutenível" e garantir que o que já foi feito funcione corretamente do jeito que deve ser for uma "perda de tempo", então estou no ramo errado. Fazer com que o sistema "rode" é muito importante pois sistema rodando é dinheiro entrando no caixa. Mas abrir mão da qualidade é uma péssima estratégia a curto prazo, pois todos nós sabemos que sistemas mudam constantemente e ter mecanismos para responder rapidamente a essas mudanças é mais importante do que "parir" um sistema remendado de uma hora pra outra e depois perceber que a menor das mudanças custa 10 vezes mais do que o normal.</li>
</ul>
Por enquanto só consigo me lembrar dessas, mas outras pérolas virão e renderão novos posts.

Fiquem a vontade para comentar. Até o próximo post!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>179</wp:post_id>
		<wp:post_date>2008-09-03 00:30:24</wp:post_date>
		<wp:post_date_gmt>2008-09-03 03:30:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>contos-do-programador-pragmatico</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cascata"><![CDATA[cascata]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077281]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>74</wp:comment_id>
			<wp:comment_author><![CDATA[Pedro Pimentel]]></wp:comment_author>
			<wp:comment_author_email>zukunft@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.pedropimentel.com</wp:comment_author_url>
			<wp:comment_author_IP>200.96.159.87</wp:comment_author_IP>
			<wp:comment_date>2008-10-07 23:31:11</wp:comment_date>
			<wp:comment_date_gmt>2008-10-08 02:31:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Olá!

Muito verdadeiro este seu relato. Em uma empresa que trabalhei, lembro que a documentação era extremamente onerosa e os testes praticamente inexistentes, mas ao menos os programadores eram bem vistos pelos gestores heheeh.

E ah, obrigado pela visita,

Abraços]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70</wp:comment_id>
			<wp:comment_author><![CDATA[Rafael Ponte]]></wp:comment_author>
			<wp:comment_author_email>rponte@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rponte.com.br</wp:comment_author_url>
			<wp:comment_author_IP>201.9.83.207</wp:comment_author_IP>
			<wp:comment_date>2008-09-28 21:05:50</wp:comment_date>
			<wp:comment_date_gmt>2008-09-29 00:05:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muito interessante seu post, e devo admitir que isso a cada dia me parece mais comum na maioria das empresas do Brasil, no mercado local na qual me encontro é extremamente comum.

O que é mais incrível é que pessoas (gestores?) que realmente dedicaram vários anos da sua vida estudando sejam os mais atrasados quando se falam em desenvolvimento de software. Claro que existem exceções, mas a maioria está realmente alguns anos para trás.

Enfim, excelente post.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>87</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; Os guardiões da cascata]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2008/11/os-guardioes-da-cascata/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2008-11-04 00:49:22</wp:comment_date>
			<wp:comment_date_gmt>2008-11-04 03:49:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] sem noção, colegas com síndrome do funcionário público, prazos sem sentido, entre outras pérolas da [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>558</wp:comment_id>
			<wp:comment_author><![CDATA[Rodolpho Gagno]]></wp:comment_author>
			<wp:comment_author_email>rodolpho@gagno.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.gagno.com</wp:comment_author_url>
			<wp:comment_author_IP>187.59.106.94</wp:comment_author_IP>
			<wp:comment_date>2011-02-08 15:17:25</wp:comment_date>
			<wp:comment_date_gmt>2011-02-08 18:17:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excelente seu post. Parabéns! rs]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Rails Summit ! Eu fui !</title>
		<link>http://1up4dev.org/2008/10/rails-summit-eu-fui/</link>
		<pubDate>Sat, 18 Oct 2008 04:43:14 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=184</guid>
		<description></description>
		<content:encoded><![CDATA[Não sei nem como começar a descrever o evento, foi muito bom !!! Logo no primeiro dia, na fila para pegar o pequeno cracha de identificação, já trombei logo com quem !?! Dr. Nic ! E ao seu lado, estava um cara muito simpático também, que de primeira não reconheci, o Chad Fowler e sem barba ! E pra quem não acredita, bom, tirei foto com o figura como prova ! (está <a href="http://www.flickr.com/photos/rogerleite/">aqui</a> no album do flickr)

[caption id="" align="aligncenter" width="240" caption="Palestrantes RailsSummit"]<img title="Palestrantes RailsSummit" src="http://farm4.static.flickr.com/3003/2949949673_d323a895d6_m.jpg" alt="Palestrantes RailsSummit" width="240" height="180" />[/caption]

Todas as palestras foram muito interessantes, no segundo dia, o tema testes foi muito abordado e acabou ficando repetitivo, porém o pessoal aproveitou para <a href="http://blog.shadowmaru.org/2008/10/17/rails-summit-latin-america-dia-2">atualizar seus e blogs e tals</a>. Na minha humilde opinião, as apresentações de abertura e final do evento foram as melhores ! Na abertura, destaque para o <a href="http://www.nomedojogo.com/2008/10/15/video-do-railsenvy-no-rails-summit/">video que o pessoal do Rails Envy mandou</a> !

Sem se preocupar em parecer repetitivo, mas a principal mensagem das palestras foram, "faça!". Tudo se resume a ação!, ajude projetos open, crie novos projetos, participe com diferentes papéis, leia, escreva blogs, livros, screencasts, wikis ... etc. Teve muita mensagem motivacional, e eu confesso que gostei ! :D

É complicado tentar repassar a enxurrada de informação que veio do evento, e por serem parecidas, eu acabo misturando as informações. Resumão: Metodologias Agéis, teve bastante coisa sobre e com perspectivas diferentes, cool!

Parte do Chad Fowler, foi muito legal, com sacadas interessantes do "meio corporativo", e apresentou questões filosoficas sobre a evolução de frameworks. Logo em seguida, teve uma conferência com o DHH (David Heinemeir Hansson), falou sobre o futuro de Rails, falou sobre thread-safe do Rails 2.2.

Palestra do <a href="http://www.nomedojogo.com/2008/10/09/rails-summit-meu-emprego-foi-para-os-eua/">Brando</a> foi muito legal, e deu uns toques importantes de como conseguir aquele seu emprego rails tão desejado, sem contar o chefe dele, Carl, grande figura.

Depois teve o Chris Wanstrath (criador do github.com), é impressionante o tanto que ele batalhou pra chegar aonde o github é hoje, foi meio chato porque ele ficou lendo, mesmo assim, teve informações legais.

No final, o BOF (Birds of a Feather) foi um show a parte! Várias figuras, falando desde projetos em desenvolvimento até a técnicas de impor novas idéias ... várias figuras, várias risadas.

O <strong>segundo dia</strong> de evento, começou muito interessante, com a apresentação muito boa - dei muita risada em várias partes - Ninh Bui e Hongli Lai os <span style="text-decoration: line-through;">emos</span> caras do Phusion ! Foi muita piada nerd, várias animações flash, citações de mega man à dragon ball, com direito a Star Wars no final ...

[caption id="" align="aligncenter" width="240" caption="Phusion Darth Vader !"]<img title="Phusion Darth Vader !" src="http://farm4.static.flickr.com/3188/2950767782_121584d6b3_m.jpg" alt="Phusion Darth Vader !" width="240" height="180" />[/caption]

Depois assisti a palestra do Jay Fields. Foi muito legal, ele apresentou o lado bom e ruim de vários frameworks de testes como selenium, rspec e talz. Destaque para o momento flame, quando o <span style="color: #000000;">David Chelimsky</span> mantenedor do rspec, começa a questionar alguns pontos levantados por Jay. Não se preocupem, que tudo acabou em breja ...

Assisti a palestra do Vinicius Teles, cara, sensacional ! A palestra foi sobre empreendedorismo, com participação especial do Carl (da SurgeWorks), ficou muito legal a "<em>union</em>" das apresentações, e esta com certeza merece um post separado-extra.

Chegando ao final do dia, começou a bater o cansaço ... assisti a palestra do Fabio Kung sobre JRuby. Ele entrou em detalhes na plataforma Java e como é executado o código ruby nela. Foi muito legal, porque eu finalmente entendi a diferença entre "servers" e talz. Eu não lembro muito ao certo, se eu tiver acesso a apresentação, coloco o link aqui.

Pra finalizar teve o fechamento com o Obie Fernandez, ele mostrou de maneira apaixonada e apaixonante, como está funcionando sua nova empresa, a HashRocket. Mostrou o manifesto agil, primeiro em papel e depois na vida real com os fatos da sua empresa. Mostrou que testes funcionam, programação em par também funciona! e etc. Foi muito show, acho muito legal a forma que ele conduz a apresentação.

[caption id="" align="aligncenter" width="240" caption="1up4dev and ... Obie !"]<img title="1up4dev and ... Obie !" src="http://farm4.static.flickr.com/3156/2950743840_f525af68d7_m.jpg" alt="1up4dev and ... Obie !" width="240" height="180" />[/caption]

O evento fechou com chave de ouro, rolando várias brejas, e isso eu te garanto, é muito louco brindar com o Dr. Nic e Obie na mesma roda ! :D

Além de tudo isso, é muito interessante como o espirito de "integração" é muito alto, por exemplo, o <a href="http://www.mouseoverstudio.com/blog/">Diego Carrion do MouseOver Studio</a> ficou com nosso grupo, os dois dias, trocamos experiências, foi show também. Até agora, a única apresentação que peguei foi a do Dr. Nic, que ele disponibilizou o <a href="http://www.slideshare.net/drnic/everyone-can-participate-dr-nic-williams-railssummit-brazil-2008-presentation/">link</a> via <a href="http://twitter.com/drnic">twitter</a>.

Me desculpem pelo tamanho do post ... e como ele está muito grande, nem vou ler em busca de erros, vou arrumando conforme necessário, ou seja, fica pro próximo sprint !]]></content:encoded>
		<excerpt:encoded><![CDATA[Resumão do evento RailsSummit !]]></excerpt:encoded>
		<wp:post_id>184</wp:post_id>
		<wp:post_date>2008-10-18 01:43:14</wp:post_date>
		<wp:post_date_gmt>2008-10-18 04:43:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-summit-eu-fui</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="evento"><![CDATA[evento]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="railssummit"><![CDATA[railssummit]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077849]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>81</wp:comment_id>
			<wp:comment_author><![CDATA[Lucas Souza]]></wp:comment_author>
			<wp:comment_author_email>lucasas@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://devnetteam.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>200.233.218.202</wp:comment_author_IP>
			<wp:comment_date>2008-10-31 12:35:26</wp:comment_date>
			<wp:comment_date_gmt>2008-10-31 15:35:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[O evento deve ter sido muito legal. Pena que não pude ir. Legais as fotos com o Chad Fowler e as fotos do Darth Vader.
Parabens Roger , muito legal o blog. Os posts tão muito interessante.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>83</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email>roger.barreto+comments@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org</wp:comment_author_url>
			<wp:comment_author_IP>189.38.253.7</wp:comment_author_IP>
			<wp:comment_date>2008-10-31 16:59:33</wp:comment_date>
			<wp:comment_date_gmt>2008-10-31 19:59:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@ Lucas

Realmente foi muito legal ! Valeu pelo elogio !
O esquema agora é se programar para o Rails Summit 2009 ! Lá a gente se tromba !

[]s]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>934</wp:comment_id>
			<wp:comment_author><![CDATA[A experiência de lançar o RoloGames | 1up4developers]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2012/06/a-experiencia-de-lancar-o-rologames/</wp:comment_author_url>
			<wp:comment_author_IP>187.45.193.139</wp:comment_author_IP>
			<wp:comment_date>2012-06-20 08:37:59</wp:comment_date>
			<wp:comment_date_gmt>2012-06-20 11:37:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] É um trabalho cansativo, mas o segredo é não desistir jamais! Isto até me lembra do Rails Summit (em 2008!), quando o Chris Wanstrath contou que antes de criar o Github, ele já tinha lançado [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>A perpetuação da espécie</title>
		<link>http://1up4dev.org/2008/10/a-perpetuacao-da-especie/</link>
		<pubDate>Mon, 20 Oct 2008 02:48:18 +0000</pubDate>
		<dc:creator>hbulhoes</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=200</guid>
		<description></description>
		<content:encoded><![CDATA[Na semana passada uma desconfortável discussão me pôs a pensar sobre os obstáculos culturais na aceitação de princípios ágeis no desenvolvimento de sistemas. A discussão ocorreu quando um amigo meu comentou comigo a respeito de uma metodologia que ele pretende aplicar em um projeto no qual está envolvido. Fiz questão que ouvi-lo com atenção, pois ele, além de ser uma pessoa da minha consideração, possui um background de sistemas muito diferente do meu. O que permite tentar entender outros lados de problemas em comum.

Logo nos primeiros instantes da conversa, percebi que a metodologia que ele estava a me explicar era nada menos que algo derivado de waterfall, onde, basicamente, um "sistema" é definido, por sábios analistas, em um conjunto de diagramas diversos, para depois passar por "estágios" de aprovações e assinaturas mil, e então finalmente cair nas mãos sujas de pizza dos programadores. Documentos. Documentos e mais documentos. Tudo para garantir que não houvesse mal-entendidos, nenhum "re-trabalho", nenhuma oportunidade de "o cliente" pedir mais do que podia ou mudar de idéia depois de todos os acordos -- simplesmente, a metodologia era sinônimo de controle total e absoluto sobre todas as "fases" de um projeto.

Eu não podia ouvir tudo aquilo e ficar calado. A primeira pergunta que eu fiz foi: quais problemas essa idéia vai combater? Ou, pra ser mais sincero com o eventual leitor, perguntei que problemas, <strong>observados na prática</strong>, seriam resolvidos com a metodologia. Sim, na prática, pois durante a conversa ele havia dado exemplos bastante hipotéticos e superficiais de problemas. Recebi como resposta um olhar de espanto, como se eu tivesse perguntado se a Lua era feita de queijo Minas. Deveria ser óbvio para mim quais eram os problemas! Na raiz de todos os males está a informalidade total no andamento dos projetos! Cliente conversando direto com programador! Sistema que foge às especificações! Cronogramas que não são cumpridos! Programador dando uma de arquiteto! E outras na mesma linha.

Diante de tantas certezas, vi que a conversa já não ia dar em nada, mas continuei o debate. Respondi que, no projeto em que eu estou trabalhando, uma situação de caos total foi revertida sem que a equipe tivesse que conversar em UML, sem que colocássemos travas no diálogo com o cliente... mas com muito, muito "re-trabalho". Disse ainda que, do meu ponto de vista, os problemas eram de fundo humano: equipe mal qualificada e expectativas amadoras dos assim chamados responsáveis. E ainda afirmei que não acreditava em especificação perfeita, primeiro porque especificações e diagramas são feitos por seres humanos (ainda que na qualidade de iluminados analistas), e segundo porque software se trata de algo mutável pela própria natureza. (Ou então seria chamado "hardware".) Não falei em termos tão professorais assim, ou ao menos, procurei ser humilde nas colocações.

Continuei dizendo que, por causa desse fundamento humano, a solução dos problemas, se é que existe, passaria por: apoiar o talento das pessoas, não ser reativo nas negociações, recrutar direito, apostar em um gerenciamento mais adaptativo (em nenhum momento usei a palavra "ágil") de projetos. Certamente, soluções bem menos simples do que dar ordens de se produzir e seguir diagramas ao pé da letra. (Como se houvesse leitura "ao pé da letra"...)

Pensei que possuía alguma credibilidade, mas acho que a essa altura da conversa o meu amigo já não me via como desenvolvedor experiente, e sim como um encarregado que tinha ido trocar a água do bebedouro perto do qual estávamos e resolveu dar palpite sobre esse troço de sistemas. Tive que ouvir que eu estava "totalmente errado", que esse papo de dar valor às pessoas era "a causa de nada funcionar", que as empresas precisavam reter conhecimento através de documentação (no que ele está certo), e que "muitas empresas grandes" estavam trabalhando com essa metodologia. (Não citou as empresas e eu não questionei pra não ficar chato.)

O papo acabou logo depois, mas se alguém ainda está lendo e achou que brigamos, não foi o que aconteceu. Continuamos amigos igual antes. Mas dificilmente volto a ter uma conversa com ele sobre esses assuntos. Existe uma diferença cultural muito grande entre nós dois no que diz respeito a software, e é esse o assunto do post!

Em toda a minha carreira eu apostei na minha capacidade de resolver coisas, no meu domínio sobre as questões relevantes aos trampos com os quais me envolvi, na confiança que eu podia estabelecer com as pessoas em volta e, reciprocamente, na confiança que essas pessoas podiam ter em mim. Eu não sei trabalhar de outro jeito e nem quero mudar, pois várias vezes tive o prazer de ver as coisas funcionando/mudando justamente pelas minhas atitudes. Uma metodologia na base do diagrama, na base do analista/deus e programador/vassalo não é só inútil pra mim como simplesmente não me oferece condições de trabalho.

Por outro lado, não me lembro de ter visto esse meu amigo falar com orgulho a respeito de algum projeto do qual tenha participado. Percebo que sua carreira foi marcada por muito trabalho, muito esforço com equipes ruins, muita pedrada de cliente folgado. Chefes ignorantes. Tarefas monótonas. Isso tudo, sem a contrapartida de gostar do que faz, nem de conseguir se motivar observando os próprios sucessos, pode facilmente, na minha opinião, produzir um semeador de waterfall, como meu amigo parece ter se tornado. Para um perpetuador de waterfall, um sistema é uma coisa plana, composta de tarefas registradas em alguma linguagem esquemática pobre, que será transcrita para o computador por pessoas-robôs cujo maior erro é, eventualmente, pensar.

Uma coisa plana sem espaço para a confiança, nem para a imaginação -- origens de todos os males, pelo bate-papo ao pé do bebedouro.

(Parte da motivação para este post veio de "<a id="z5o_" title="What are the right conditions for agile adoption?" href="http://www.agilemanagement.net/Articles/Weblog/Whataretherightconditions.html">What are the right conditions for agile adoption?</a>", de David Anderson.)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>200</wp:post_id>
		<wp:post_date>2008-10-19 23:48:18</wp:post_date>
		<wp:post_date_gmt>2008-10-20 02:48:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-perpetuacao-da-especie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="questionamento"><![CDATA[questionamento]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="category" nicename="waterfall"><![CDATA[waterfall]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077888]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>78</wp:comment_id>
			<wp:comment_author><![CDATA[Marinho]]></wp:comment_author>
			<wp:comment_author_email>marinho.marcelo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.100.87.218</wp:comment_author_IP>
			<wp:comment_date>2008-10-29 14:32:38</wp:comment_date>
			<wp:comment_date_gmt>2008-10-29 17:32:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Otimo post gostei, agora tem pessoas que são extremamentes dificeis de aceitar que todo o problema esta no modelo de trabalho falido e tudo que ja sabemos.

Ai eu escuto, se o sistema é falido como pode essa empresa ser tao poderosa e rica ...

Juro eu fiquei quieto para nao ..................

Falo]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>76</wp:comment_id>
			<wp:comment_author><![CDATA[Eduardo]]></wp:comment_author>
			<wp:comment_author_email>eduardo@coding4food.com</wp:comment_author_email>
			<wp:comment_author_url>http://coding4food.com</wp:comment_author_url>
			<wp:comment_author_IP>201.24.232.93</wp:comment_author_IP>
			<wp:comment_date>2008-10-28 22:08:58</wp:comment_date>
			<wp:comment_date_gmt>2008-10-29 01:08:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ótimo post...concordo com vc Humberto...

"...do meu ponto de vista, os problemas eram de fundo humano: equipe mal qualificada e expectativas amadoras dos assim chamados responsáveis"

E na minha opnião, a maioria dos problemas em desenvolvimento de software, são de caráter humano: http://www.artima.com/weblogs/viewpost.jsp?thread=221622]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>77</wp:comment_id>
			<wp:comment_author><![CDATA[Humberto]]></wp:comment_author>
			<wp:comment_author_email>humberto.bulhoes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://myidlethread.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>200.99.6.203</wp:comment_author_IP>
			<wp:comment_date>2008-10-29 12:56:28</wp:comment_date>
			<wp:comment_date_gmt>2008-10-29 15:56:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Obrigado, Eduardo. Muito interessante a leitura que você indicou. Causa um desconforto quando nos lembramos que poucos contratantes realmente se interessam pela dinâmica de trabalho nas equipes, preferindo acreditar em uma inexistente linearidade nos projetos de software. Abraço!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>4</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>88</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; Os guardiões da cascata]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2008/11/os-guardioes-da-cascata/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2008-11-04 00:50:37</wp:comment_date>
			<wp:comment_date_gmt>2008-11-04 03:50:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Se você frequenta este blog já deve ter percebido que nós não gostamos da maldita cascata. Fases bem definidas, detalhamento de requisitos, documentos inúteis, diagramas UML, papéis&#8230; tudo muito lindo na teoria. Eu fico até emocionado quando leio a documentação do RUP. Mas infelizmente a maioria dos profissionais de TI &lt;strike&gt;precisam&lt;/strike&gt; são obrigados a trabalhar nestes ambientes cascateiros, enfrentando chefes sem noção, colegas com síndrome do funcionário público, prazos sem sentido, entre outras pérolas da área. [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>97</wp:comment_id>
			<wp:comment_author><![CDATA[Thiago Adamo]]></wp:comment_author>
			<wp:comment_author_email>thiagotd@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.120.211.215</wp:comment_author_IP>
			<wp:comment_date>2008-12-07 02:04:24</wp:comment_date>
			<wp:comment_date_gmt>2008-12-07 05:04:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Concordo com o que foi dito, me sinto envergonhado em trabalhar para este monstro chamado cascata rsrsrs.

Ah e mais uma coisa pra relembrar o passado: "To Town"!!!

Parabéns pelo Blog, já esta no meu Bookmark.

Abraço!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>98</wp:comment_id>
			<wp:comment_author><![CDATA[Humberto]]></wp:comment_author>
			<wp:comment_author_email>humberto.bulhoes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://myidlethread.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>189.95.97.78</wp:comment_author_IP>
			<wp:comment_date>2008-12-08 08:01:42</wp:comment_date>
			<wp:comment_date_gmt>2008-12-08 11:01:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thiago, quase todo mundo tá no mesmo barco!

E sobre o "to town", esta semana editarei tua morte...

Abraço!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>4</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>414</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; Ruby on Rails: quando a linguagem de programação faz diferença!]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2009/08/ruby-on-rails-quando-a-linguagem-de-programacao-faz-diferenca/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2009-08-18 08:26:51</wp:comment_date>
			<wp:comment_date_gmt>2009-08-18 11:26:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] decorrer da sua experiência você tentará desempenhar suas atividades de várias maneiras. Quando você faz de tudo um pouco acha que o melhor seria fazer apenas uma tarefa específica mas [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>422</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; Ruby: quando a linguagem de programação faz diferença!]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2009/08/ruby-quando-a-linguagem-de-programacao-faz-diferenca/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2009-10-22 21:08:59</wp:comment_date>
			<wp:comment_date_gmt>2009-10-23 00:08:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] decorrer da sua experiência você tentará desempenhar suas atividades de várias maneiras. Quando você faz de tudo um pouco acha que o melhor seria fazer apenas uma tarefa específica mas [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Arquiteto Cascateiro</title>
		<link>http://1up4dev.org/2008/11/arquiteto-cascateiro/</link>
		<pubDate>Fri, 07 Nov 2008 09:44:44 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=210</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>Este post é uma homenagem aos Arquitetos defensores do <em>waterfall</em>/cascata.</blockquote>
Recentemente tive o <span style="text-decoration: line-through;">des</span>prazer de conhecer um arquiteto, é isso mesmo, aquele com certificado e tudo, com direito a broche da Sun em seu terninho. Aliás, certificado é um tema polêmico que eu não tenho uma opinião muito certa e/ou formada... bom, vou deixar esta parte para um próximo post, quem sabe.

Voltando ao assunto, hoje no fretado, comecei a pensar nas semelhanças que um arquiteto de sistemas (certificado que decorou patterns inutéis da Sun) tem com um arquiteto de obras. Só para deixar claro, na tabela abaixo estou usando dois estados: <em><span style="color: #ff0000;">FAIL</span></em> e <span style="color: #008000;">Ok</span>. Fail quer dizer que <span style="text-decoration: line-through;">vai dá merda</span> não vai dar certo e não tem jeito, caso queira uma definição mais formal, o <a href="http://en.wikipedia.org/wiki/Failure">wikipédia</a> ajuda, agora se você prefere imagens, o <a href="http://www.failblog.net/">Fail Blog</a> também serve.

[caption id="attachment_235" align="aligncenter" width="300" caption="Exemplo de FAIL"]<a href="http://1up4dev.org/wp-content/uploads/2008/11/soccer_fail.jpg"><img class="size-medium wp-image-235" title="Exemplo de FAIL" src="http://1up4dev.org/wp-content/uploads/2008/11/soccer_fail-300x201.jpg" alt="Exemplo de FAIL" width="300" height="201" /></a>[/caption]
<table style="border: thin solid;" border="0">
<tbody>
<tr>
<th style="width: 60%;">Objetivos</th>
<th style="width: 20%;">Cascateiro</th>
<th style="width: 20%;">De Obras</th>
</tr>
<tr>
<td>Colocam as futuras "obras" no papel antes de começar.</td>
<td><span style="color: #ff0000;">FAIL</span></td>
<td><span style="color: #008000;">OK</span></td>
</tr>
<tr>
<td>Ainda no papel, colocam <strong>todas</strong> as necessidades do cliente, do início ao fim.</td>
<td><span style="color: #ff0000;">FAIL</span></td>
<td><span style="color: #008000;">OK</span></td>
</tr>
<tr>
<td>O cliente do Arq. de Obras sabe que depois que começar não pode mudar.</td>
<td><span style="color: #ff0000;">FAIL</span></td>
<td><span style="color: #008000;">OK</span></td>
</tr>
<tr>
<td>O arquiteto de Obras <strong>não</strong> define quais tipos de blocos, cimento e ferro a obra vai usar, o Cascateiro <strong>sim</strong>.</td>
<td><span style="color: #ff0000;">FAIL</span></td>
<td><span style="color: #008000;">OK</span></td>
</tr>
</tbody></table>
Parei a tabela por aqui pois já dá pra saber que o <span style="color: #ff0000;">FAIL</span> tende a infinito né.
Pergunta: o que ambos arquitetos estão fazendo!?!
Resposta educada: Estão <strong>fechando o escopo</strong> do projeto.

[caption id="attachment_220" align="alignleft" width="227" caption="Arquiteto Cascateiro trabalhando ..."]<a href="http://1up4dev.org/wp-content/uploads/2008/11/construcao-crea.jpg"><img class="size-medium wp-image-220" title="construcao de arquiteto cascateiro" src="http://1up4dev.org/wp-content/uploads/2008/11/construcao-crea-300x225.jpg" alt="Arquiteto Cascateiro trabalhando ..." width="227" height="171" /></a>[/caption]

A resposta acima é uma <span style="text-decoration: underline;">frase chave</span> pra você ter certeza que vive num projeto waterfall cascateiro. Fechar o escopo do projeto inteiro deve ser muito bom para o arquiteto de obras, já para um sistema, o efeito é contrário. Acredito muito na teoria que <a href="http://gc.blog.br/2008/07/20/cuidando-para-que-o-software-nao-apodreca/">desenvolver software não é construir prédios</a>. Livros de renome como <a href="http://1up4dev.org/2008/05/the-pragmatic-programmer-no-ambiente-waterfall-e-claro/">Pragmatic Programmer</a> citam isso.

Sei que este tema de construção civil já está batido. Comecei a escrever este post ao mesmo tempo que o Sr. Panachi publicou o <a href="http://1up4dev.org/2008/10/software-e-sobre-investimento/">anterior</a>, e com a idéia de ficar menos repetitivo, já vou <em>linkar</em> as sugestões dos nossos incríveis leitores:
<ul>
	<li>O <a href="http://www.mouseoverstudio.com/blog/">Diego Carrion</a> (grande peruano! :D) cita este <a href="http://agiletips.blogspot.com/2008/07/agile-bridge-analogy.html"><em>link</em></a>, que fala que a engenharia civil também consegue ser ágil em alguns casos.</li>
	<li>O <a href="http://witaro.wordpress.com/">Witaro</a>, fez um ótimo post "<a href="http://witaro.wordpress.com/2008/08/11/desenvolvendo-software-como-uma-rock-band/">Desenvolvendo software como uma Rock Band</a>" que quebra a barreira da analogia com a engenharia civil. Cara, continue escrevendo, porque a sua visão é muito legal!</li>
</ul>
Bom, agora que acabou o desabafo, vamos as possíveis soluções. O que fazer com o Arquiteto Cascateiro?

Acho que a primeira coisa seria conscientizá-lo de que ele não é o <a href="http://pt.wikipedia.org/wiki/Oscar_Niemeyer">Oscar Niemeyer</a> e que a primeira versão de seu software nunca será completa de uma vez. Você deve conversar sobre iterações com ele e mostrar que o software deve evoluir conforme o cliente também evolui nas descobertas das suas reais necessidades. Sei que o post já está cheio de <em>links</em>, mas este post do Phillip Calçado, <a href="http://blog.fragmental.com.br/2008/08/09/analista-pedreiro/">Analista Pedreiro</a>, resume bem o que quero dizer.

<strong>Arquiteto</strong>, este nome ou termo ou cargo ou seja-lá-o-que-for, é coisa de modelo <em>waterfall</em>/cascata. Numa equipe, não deve haver distinção desta maneira. Todos programam, modelam, configuram, trabalham no Banco de Dados quando necessário, ou seja, ninguém deve exercer um papel único. Papéis únicos, representam <a href="http://1up4dev.org/2008/11/os-guardioes-da-cascata/">Guardiões</a> que defendem somente seus interesses e não trabalham em pró da equipe/cliente/projeto.

O Arquiteto deve programar, colocar a mão na massa, assim como toda a equipe, pois UML, Caso de Uso, Diagrama de Sequência, etc. <strong>sempre compilam</strong>! Muito diferente na vida real, onde muitas vezes você é obrigado a implementar uma coisa diferente e torta para acompanhar estes documentos cascateiros. Caso você seja obrigado a gerar a documentação fútil acima, pense em algo que seja automatizado após você ter programado e testado, com certeza você será umas cinco vezes mais produtivo.

E por último e não menos importante, a equipe (inclusive o Arquiteto) tem que conhecer o negócio que implementa. Quando se inicia um novo projeto ou até mesmo decidem reestruturar um existente, o arquiteto cascateiro <span style="text-decoration: line-through;">sempre</span> prioriza novas tecnologias e frameworks, o que na maioria das vezes, não é necessário. Novos projetos ou <em>refactoring</em> em existentes, devem ter um único prioritário objetivo: <a href="http://pt.wikipedia.org/wiki/Keep_it_Simple_Stupid">KISS</a>. Com esta prioridade em mente, novas tecnologias e frameworks serão escolhidos naturalmente, e não somente usar porque é a última moda no estilo SunTechDays.

E vocês leitores?! Sofrem ou já sofreram muito com Arquitetos Cascateiros!?!]]></content:encoded>
		<excerpt:encoded><![CDATA[Definição do que é um Arquiteto Cascateiro. E leves dicas de como tentar transformá-lo num integrante da equipe de desenvolvimento.]]></excerpt:encoded>
		<wp:post_id>210</wp:post_id>
		<wp:post_date>2008-11-07 06:44:44</wp:post_date>
		<wp:post_date_gmt>2008-11-07 09:44:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>arquiteto-cascateiro</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cascata"><![CDATA[cascata]]></category>
		<category domain="post_tag" nicename="dicas"><![CDATA[dicas]]></category>
		<category domain="post_tag" nicename="pragmatic-waterfall"><![CDATA[pragmatic waterfall]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="category" nicename="waterfall"><![CDATA[waterfall]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078025]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>92</wp:comment_id>
			<wp:comment_author><![CDATA[Diego Carrion]]></wp:comment_author>
			<wp:comment_author_email>dc.rec1@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mouseoverstudio.com/blog/</wp:comment_author_url>
			<wp:comment_author_IP>189.20.40.106</wp:comment_author_IP>
			<wp:comment_date>2008-11-07 15:43:55</wp:comment_date>
			<wp:comment_date_gmt>2008-11-07 18:43:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Todos os dias hahahaha ):]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>93</wp:comment_id>
			<wp:comment_author><![CDATA[Lucas Ap. Souza]]></wp:comment_author>
			<wp:comment_author_email>lucasas@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.68.156.44</wp:comment_author_IP>
			<wp:comment_date>2008-11-08 12:38:05</wp:comment_date>
			<wp:comment_date_gmt>2008-11-08 15:38:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Belo post Roger, e se isso conforta vocês eu vivo projetos cascateiros diariamente onde eu trabalho (infelizmente), mas pior que isso é quando o meu "Gerente de Projetos" (Que nojo disso!) diz que o projeto não é cascata porque "nós" fazemos iterações de 3 em 3 meses. Quem foi que disse pra ele que isso não é cascata, na verdade ele tem razão, isso realmente não é uma cascata, é uma cascata iterada... :p]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>94</wp:comment_id>
			<wp:comment_author><![CDATA[Rodrigo Panachi]]></wp:comment_author>
			<wp:comment_author_email>rodrigopanachi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://nobrokenwindow.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>189.120.17.132</wp:comment_author_IP>
			<wp:comment_date>2008-11-09 12:15:32</wp:comment_date>
			<wp:comment_date_gmt>2008-11-09 15:15:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ótimo post, Roger!

A característica dominante de um legítimo arquiteto cascateiro é sua falta de experiência, ou seja, só fala e nunca faz nada! É o guardião dos seus interesses (usar aquela tecnologia da moda, modelar todos os diagramas da UML, etc) e não se preocupa com o os interesses da equipe e principalmente do cliente.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>421</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; Ruby: quando a linguagem de programação faz diferença!]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2009/08/ruby-quando-a-linguagem-de-programacao-faz-diferenca/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2009-10-22 21:08:16</wp:comment_date>
			<wp:comment_date_gmt>2009-10-23 00:08:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] &#8220;Aí, saindo uma fornada de casos de uso&#8230;&#8221;, etc. Logo alguém tem a brilhante idéia de &#8220;documentar&#8221; tudo desde uma simples alteração no CSS do sistema até complexos e [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Os guardiões da cascata</title>
		<link>http://1up4dev.org/2008/11/os-guardioes-da-cascata/</link>
		<pubDate>Tue, 04 Nov 2008 03:49:11 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=228</guid>
		<description></description>
		<content:encoded><![CDATA[Se você freqüenta este blog já deve ter percebido que nós não gostamos da <span style="text-decoration: line-through;">maldita</span> <a href="http://pt.wikipedia.org/wiki/Modelo_em_cascata" target="_blank">cascata</a>. Fases bem definidas, detalhamento de requisitos, documentos inúteis, diagramas UML, papéis... tudo muito lindo na teoria. Eu fico até emocionado quando leio a <a href="http://www.wthreex.com/rup/" target="_blank">documentação</a> do <a href="http://pt.wikipedia.org/wiki/Rational_Unified_Process" target="_blank">RUP</a>. Mas infelizmente a maioria dos profissionais de TI <span style="text-decoration: line-through;">precisam</span> são obrigados a trabalhar nestes ambientes cascateiros, enfrentando chefes sem noção, colegas com <a href="http://www.novacorja.org/" target="_blank">síndrome do funcionário público</a>, <a href="http://desciclopedia.org/wiki/POG#Prazos_de_um_projeto_POG" target="_blank">prazos sem sentido</a>, entre outras <a href="http://1up4dev.org/2008/09/contos-do-programador-pragmatico/" target="_blank">pérolas</a> da <a href="http://1up4dev.org/2008/10/a-perpetuacao-da-especie/" target="_blank">área</a>.

O principal apelo de um processo cascateiro são suas fases e papéis bem definidos, onde cada membro da "equipe" é responsável por uma determinada tarefa que é executada em uma seqüência previamente definida. Dentre os <a href="http://www.wthreex.com/rup/process/workers/ovu_works.htm" target="_blank">papéis</a>, pode-se facilmente identificar os especialistas daquela tarefa, que defendem sua <span style="text-decoration: line-through;">necessidade</span> execução com unhas e dentes. Para ilustrar, resolvi chamá-los de <a href="http://pt.wikipedia.org/wiki/Guardi%C3%B5es_do_Universo" target="_blank">guardiões</a>, seja da tecnologia ou da atividade em questão. Um guardião protege sua fase, tarefa e interesses, defendendo-os para que o "processo" não seja quebrado. Desta forma, &lt;sarcasmo&gt; a "equipe" atinge seu objetivo: o software! &lt;/sarcasmo&gt; Seguem alguns exemplos desses guardiões cascateiros:

<strong>O guardião do banco de dados: "<em>Não rodarás nenhum script na base alheia</em>"</strong>
Começo por este por ser o mais comum dos guardiões. Ele trata o banco de dados como um filho, mesmo que seja um adolescente que não obedeça inteiramente à 3ª regra normal. São vistos como semi-deuses, capazes de transcrever o modelo de negócio da empresa em uma linguagem de alto nível, impossível de ser compreendida por simples programadores. Protejem as tabelas com a própria vida e qualquer alteração na base de dados é motivo para um duelo até a morte! Utilizam um padrão para nomenclatura de campos que somente é conhecido pelo clã dos DBAs. Geralmente são seguidores do Oráculo, o senhor de todos os bancos de dados.

<strong>O guardião do projeto: <em>"Guia-te pelo teu Gantt e serás recompensado"</em></strong>
Este guardião está presente em todos os projetos, garantindo que a palavra do <a href="http://pt.wikipedia.org/wiki/Diagrama_de_Gantt" target="_blank">Gantt</a> seja cumprida, protegendo o escopo do projeto com a própria vida (ou a vida de algum programador). Adicionalmente atua como roteador de atividades: recebe os requisitos pelo email, encaminha para um recurso disponível (programador) que estima o esforço e define uma data de entrega, devolvendo para o guardião que atualiza seu <a href="http://blog.aspercom.com.br/2007/11/15/ganttchartnaofunciona/" target="_blank">Project</a>.

<strong>O guardião do framework: <em>"Venerarás o Struts e nada te faltarás"</em></strong>
O framework é o objeto de adoração deste guardião, nenhum outro framework é tão bom quanto o que ele venera. Ele provê solução para todos seus problemas simplesmente escrevendo um bloco de XML aqui, outro ali, mudando aquela linha acolá e estendendo uma classe X implementando aquela interface Z. Qualquer evolução do framework em questão não passa de uma tentativa frustrada de "reinventar a roda".

<strong>O guardião da arquitetura: <em>"Não usarás a instância do teu objeto em vão"</em></strong>
Uma variação interessante de guardião, que neutraliza seu oponente através de técnicas de tortura e perturbação mental, inundando as sessões de brainstorm com uma enxurrada de DTO's, VO's, Facades, EJB's entre outros patterns que fazem a cabeça dos programadores entrar em conflito, até que seus órgãos faleçam (ou simplesmente se demitam). Geralmente são cúmplices dos guardiões do projeto, conspirando para a dominação do Gannt.

<strong>O guardião do root: <em>"Teu processo não executarás no meu bash"</em></strong>
A jóia mais preciosa da empresa: a senha do root. Seu guardião é o mais honrado dos seres, sendo uma espécie de <a href="http://pt.wikipedia.org/wiki/O_Senhor_dos_An%C3%A9is" target="_blank">Frodo</a>, protegendo-a com a própria vida pois uma vez em mãos erradas pode ser usada para a destruição da humanidade (ou apenas para reiniciar aquela instância do Tomcat travado em produção). Aquele que desafia este guardião perde o direito de executar seus processos como administrador local e fica vagando pelo filesystem eternamente.

<strong>O guardião dos guardiões: <em>"Tua TI é um mal necessário"</em></strong>
Também conhecido como diretor, presidente, CEO, dono, investidor, sócio, etc. É o guardião das decisões, aquele que protege sua riqueza acima de tudo, economizando nos salários, contratando funcionários despreparados e investindo rios de dinheiro em consultorias e licenças de software para garantir seus investimentos.

Enfim, são guardiões dos próprios interesses. A "equipe" é apenas uma palavra que usam em discursos mas nunca aplicaram o conceito na prática!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>228</wp:post_id>
		<wp:post_date>2008-11-04 00:49:11</wp:post_date>
		<wp:post_date_gmt>2008-11-04 03:49:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>os-guardioes-da-cascata</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cascata"><![CDATA[cascata]]></category>
		<category domain="post_tag" nicename="devaneios"><![CDATA[devaneios]]></category>
		<category domain="category" nicename="marketing"><![CDATA[marketing]]></category>
		<category domain="category" nicename="processos"><![CDATA[processos]]></category>
		<category domain="post_tag" nicename="processos"><![CDATA[processos]]></category>
		<category domain="category" nicename="resenhas"><![CDATA[resenhas]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077283]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>89</wp:comment_id>
			<wp:comment_author><![CDATA[Karlisson]]></wp:comment_author>
			<wp:comment_author_email>contato@nerdson.com</wp:comment_author_email>
			<wp:comment_author_url>http://nerdson.com</wp:comment_author_url>
			<wp:comment_author_IP>200.137.1.18</wp:comment_author_IP>
			<wp:comment_date>2008-11-04 16:16:59</wp:comment_date>
			<wp:comment_date_gmt>2008-11-04 19:16:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Seu blog é muito bom, devo dizer "inspirador". Você sabe para o quê. 

Continua ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>91</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; Arquiteto Cascateiro]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2008/11/arquiteto-cascateiro/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2008-11-07 06:45:25</wp:comment_date>
			<wp:comment_date_gmt>2008-11-07 09:45:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] quando necessário, ou seja, ninguém deve exercer um papel único. Papéis únicos, representam Guardiões que defendem somente seus interesses e não trabalham em pró da [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>418</wp:comment_id>
			<wp:comment_author><![CDATA[Habutre]]></wp:comment_author>
			<wp:comment_author_email>habutre@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.97.6.193</wp:comment_author_IP>
			<wp:comment_date>2009-10-07 22:15:56</wp:comment_date>
			<wp:comment_date_gmt>2009-10-08 01:15:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[O pior de tudo, o que mais fica incompreensível é que os dirigentes não conseguem enxergar o mal que isso trás. A velha tendência  de manter "os cabeças" soberanos sobre seu feudo, mata o negócio. O mundo muda, os comportamentos mais ainda. Inegávelmente somos a sociedade da informação (por isso nem Infomation Society - http://pt.wikipedia.org/wiki/Information_Society - esperava), e todo dia nasce um substituto a altura para cada exemplar feudal conhecido.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>424</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; Rails Summit 2009]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2009/10/rails-summit-2009/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2009-10-23 10:22:21</wp:comment_date>
			<wp:comment_date_gmt>2009-10-23 13:22:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Apesar de ser um evento sobre Rails, um tema predominante foi agile. A largada foi dada pelo Chad Fowler que falou sobre a insurgência Ruby on Rails, incentivando o movimento ágil a &#8220;quebrar as regras&#8221;, parar de fazer as coisas que sabemos que estão erradas! Também ressaltou que é preciso ter coragem e atitude para rejeitar os moldes corporativos e lutar contra os trolls, os guardiões da cascata. [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>433</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; Agile Enterprise Edition]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2009/12/agile-enterprise-edition/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2009-12-21 06:16:25</wp:comment_date>
			<wp:comment_date_gmt>2009-12-21 09:16:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] como departamento) começa a perder o foco no GRANDE objetivo da empresa e passa a defender apenas seus interesses &#8211; a famosa MISSÃO da empresa passa a ser coadjuvante. O resultado? A empresa dobra ou [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Foco no problema</title>
		<link>http://1up4dev.org/2008/11/foco-no-problema/</link>
		<pubDate>Mon, 10 Nov 2008 21:33:43 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=243</guid>
		<description></description>
		<content:encoded><![CDATA[Desenvolver software é uma atividade muito gratificante pois sempre podemos (ou deveríamos) exercitar nossa criatividade para solucionar os problemas dos clientes. Isto, apesar de divertido pode ser perigoso e/ou catastrófico se estivermos com o foco errado. Num ambiente cascateiro, onde cada envolvido está comprometido apenas com o processo e não se preocupa verdadeiramente com os problemas dos clientes, não é difícil que isto ocorra. Quase sempre o foco acaba sendo direcionado para a solução ao invés do problema.

Mas qual a diferença entre foco no <strong>problema</strong> ou <strong>solução</strong>? Vamos a um exemplo:
<blockquote>Quando a Nasa enviou os primeiros astronautas ao espaço, descobriu que as canetas não funcionavam com gravidade zero. Para resolver esse problema, os engenheiros contrataram uma empresa especializada para projetar a caneta espacial.
Dez anos e US$ 12 milhões depois, estava pronta a caneta que podia ser usada no espaço, em qualquer posição. Nem a temperatura poderia atrapalhar: a supercaneta funcionava bem fizesse frio ou calor.
Os russos, que tiveram o mesmo problema, optaram por uma solução mais simples: passaram a usar um lápis.</blockquote>
<a href="http://1up4dev.org/wp-content/uploads/2008/11/spaceball.gif"><img class="alignnone size-medium wp-image-247" title="spaceball" src="http://1up4dev.org/wp-content/uploads/2008/11/spaceball.gif" alt="" width="1" height="1" /></a>A história acima é bem famosa e mesmo sendo <a href="http://www.e-farsas.com/artigo.php?id=58" target="_blank">falsa</a>, demonstra muito bem o que acontece quando o problema não está em foco. Neste caso, o problema é a impossibilidade de escrever em gravidade zero. Uma das soluções seria uma caneta que escreva nessas condições. Veja que aqui a <strong>solução</strong> já está em foco. Outra solução para o problema seria utilizar algo que escrevesse em gravidade zero: um pedaço de carvão ou um giz já serviriam. Assim, o problema seria resolvido.

Outro exemplo de falta de foco no problema é esta <a href="http://blog.aspercom.com.br/2008/07/21/hierarquias-sao-inteligentes-nas-pontas/" target="_blank">história</a> da fábrica de pasta de dente, onde ocasionalmente algumas caixas da pasta de dente eram entregues vazias. Para eliminar este problema, a empresa <span style="text-decoration: line-through;">gastou</span> investiu milhões para garantir que durante a fabricação, nenhuma caixa ficasse sem o tubo de pasta de dente dentro. Mas o problema foi realmente resolvido depois que um operário deixou um ventilador soprando as caixas vazias para fora da esteira de produção. Simples não?

Na área de desenvolvimento de software não é tão raro acontecer algo parecido, onde o foco está inteiramente na solução. Sabe aquele sistema meio capenga, que funciona e dá dinheiro para empresa mas não é "web 2.0" nem utiliza conceitos de "SOA"? De repente a diretoria decide que este sistema deve ser "migrado" para uma tecnologia <span style="text-decoration: line-through;">da moda</span> mais atual, que o permita "evoluir" mais facilmente.

Para atender esta necessidade, normalmente uma equipe nova é contratada, toneladas de <a href="http://blog.fragmental.com.br/2008/07/25/uh-eme-ele/" target="_blank">documentos e diagramas</a> são produzidos até que os programadores comecem a <a href="http://www.martinfowler.com/bliki/CheaperTalentHypothesis.html" target="_blank">codificar</a>. A esta altura, o prazo já está apertado e os "stakeholders" ainda não viram os resultados. Depois de muito tempo e dinheiro desperdiçados, um sistema feito às pressas, <em>bonitinho</em> mas meia-boca, é entregue com os mesmos defeitos do anterior. E o problema não foi resolvido...

Desenvolver software deve ser um investimento <a href="http://1up4dev.org/2008/10/software-e-sobre-investimento/" target="_blank">lucrativo</a>, proporcionando algum ganho às partes envolvidas. Quando uma <strong>necessidade</strong> surgir, o primeiro passo é identificar o <strong>problema</strong> para então encontrar a melhor <strong>solução</strong>, ou seja, foco no problema. Neste exemplo da "migração", o problema é que a manutenção do software atual é muito cara, porém "migrar" o sistema inteiro não vai resolver o problema, no máximo criará um novo.

Mas de quem é a culpa quando o foco está na solução? Eu respondo: a <strong>cascata</strong>! Apesar das metodologias ágeis estarem em alta e aos poucos serem adotadas pelas empresas, a maldição do waterfall ainda é está entre nós. Clientes continuam com a mania de pedir tudo no início do projeto. Ao exporem seus problemas, já estão pensando na solução. Fazem questão de engordar o escopo com coisas das quais não têm certeza da utilidade, mas querem que estejam lá pois podem precisar um dia. Os desenvolvedores também não estão isentos dessa culpa. Um legítimo analista cascateiro não se envolve com os problemas do cliente, apenas ouvem suas solicitações e transformam em casos de uso ou diagramas. É aí que uma simples necessidade se transforma numa bola de neve e a lenda da caneta da Nasa se repete...

<a href="http://1up4dev.org/wp-content/uploads/2008/11/software.jpg"><img class="aligncenter size-medium wp-image-249" title="software" src="http://1up4dev.org/wp-content/uploads/2008/11/software-300x225.jpg" alt="" width="300" height="225" /></a>

Um verdadeiro desenvolvedor ágil deve se comprometer com o cliente, ouvir, entender e se envolver com suas necessidades para então sugerir uma solução simples, focada e que resolva o problema. Esta interação é muito importante e deve ser constante, pois o cliente passa a identificar <strong>o que</strong> realmente ele <strong>precisa</strong>, ou seja, o qual seu<strong> problema</strong>! Assim, começa a se concentrar em funcionalidades que realmente serão úteis e agregarão valor ao software e, consequentemente, ao negócio. Feedback é muito importante. O pessoal do Google sabe muito bem disso...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>243</wp:post_id>
		<wp:post_date>2008-11-10 18:33:43</wp:post_date>
		<wp:post_date_gmt>2008-11-10 21:33:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>foco-no-problema</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agilidade"><![CDATA[agilidade]]></category>
		<category domain="category" nicename="cascata"><![CDATA[cascata]]></category>
		<category domain="post_tag" nicename="dicas"><![CDATA[dicas]]></category>
		<category domain="post_tag" nicename="metodologia"><![CDATA[metodologia]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="category" nicename="waterfall"><![CDATA[waterfall]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>100</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; Agilidade cascateira]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2008/12/agilidade-cascateira/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2008-12-16 10:50:57</wp:comment_date>
			<wp:comment_date_gmt>2008-12-16 13:50:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] valorizando os processos ao invés das pessoas, focando em soluções equivocadas ao invés de resolver os problemas dos clientes e assim, difamando e denegrindo a reputação e o propósito do [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>546</wp:comment_id>
			<wp:comment_author><![CDATA[Complexidade não escala! | 1up4developers]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2011/02/complexidade-nao-escala/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2011-02-01 06:03:08</wp:comment_date>
			<wp:comment_date_gmt>2011-02-01 09:03:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Clientes sem software costumam viajar nos requisitos. Converse, escute e entenda exatamente seus PROBLEMAS, então negocie e sugira uma SOLUÇÃO simples e rápida. E a entregue [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Rails Summit Happy hour!!</title>
		<link>http://1up4dev.org/2008/11/rails-summit-happy-hour/</link>
		<pubDate>Mon, 17 Nov 2008 15:07:28 +0000</pubDate>
		<dc:creator>miguelhorlle</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=253</guid>
		<description></description>
		<content:encoded><![CDATA[Bom pessoal, já faz um tempo que não escrevo, isso se deve um pouco pela falta de tempo, mas muito pela falta de vergonha na cara! Sempre tenho idéias, mas pouca atitude. Como muitos sabem, em outubro passado o 1up4dev esteve representado no Rails Summit Latin America por mim, pelo Roger Leite e pelo André Farina. Muita coisa aconteceu naquele evento, e isso com certeza ficou evidente em muitos posts por aí (post do <a href="http://blog.shadowmaru.org/2008/10/17/rails-summit-a-experiencia-pessoal" target="_blank">shadow</a>, <a href="http://akitaonrails.com/2008/11/12/rails-summit-blogosfera" target="_blank">akitaonrails</a> e muitos outros). As palestras simplesmente foram inspiradoras, enriquecedoras e com certeza mudaram a cabeça de muita gente, não tem como não se empolgar ao ver caras como Chad Fowler e Obie Fernandez falando! Os caras arrasaram em todos os sentidos. O fato de poder entrar em contato com figuras da comunidade que muitas vezes você só acompanha via GitHub, e melhor, poder trocar uma idéia com essa galera é muito legal.

Com certeza todos ficaram com um gostinho de quero mais, e com uma imensa vontade de agradecer ao Fábio Akita e todos aqueles que tornaram este evento possível. Mas uma coisa que não vi ser muito falada foi o happy hour que aconteceu ao final do último dia. Você consegue imaginar como seria poder tomar uma breja com o cara que escreveu um de seus livros preferidos?! Ou o cara que mantém aquele blog que te inspirou a aprender ruby/rails? Melhor ainda. Imagine poder passar um momento falando besteiras e dando muita risada com esses caras?! Bom, eu passei por isso!! E até agora a ficha parece não ter caído, não consigo acreditar que passei por isso.

Bom, para organizar os fatos a coisa aconteceu mais ou menos assim. Depois do fim da palestra do Obie Fernandez toda galera correu para tiras fotos, pegar autógrafos e coisas do tipo, foi agitação total como era esperado. Feito isso, o pessoal da organização começou a servir espumante e cerveja no saguão e é claro que corremos para lá. Foi muito legal, pois nesse momento conseguimos conhecer mais gente e ainda presenciar <a href="http://drnicwilliams.com/" target="_blank">Dr Nic</a> mandando ver numa Skol gelada! Nesse momento começou um movimento revolucionário lutando por uma causa que eu considerei mais que justa, procurar um lugar para comer e beber mais cerveja (e depois algumas caipirinhas, como pode ser confirmado pelo próprio Dr Nic no video abaixo!). Surgiu a idéia de comer um sushi, e é claro que só podia ser no bairro da Liberdade.
<p style="text-align: center;"><object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="400" height="300" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowfullscreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="src" value="http://vimeo.com/moogaloop.swf?clip_id=2262132&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1" /><embed type="application/x-shockwave-flash" width="400" height="300" src="http://vimeo.com/moogaloop.swf?clip_id=2262132&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1" allowscriptaccess="always" allowfullscreen="true"></embed></object>
<a href="http://vimeo.com/2262132">Rails Summit Happy Hourt, chegada</a> from <a href="http://vimeo.com/user942052">miguel aranha baldi horlle</a> on <a href="http://vimeo.com">Vimeo</a>.

Nesse momento todos se mobilizaram, e o pessoal da LocaWeb ainda deu uma força na logistica, e todos foram para um restaurante na Liberdade. Muitos pegaram carona (como eu!), outros foram na Van da LocaWeb, mas o importante é que depois de algumas voltas estávamos todos lá. Simplesmente lotamos o lugar, um monte de nerds loucos para comer e tomar umas cervejas, todos loucos depois de um evento como esse. A galera se organizou em várias mesas, e fiquei em uma mesa com o Ricardo Yasuda (shadow) e o <a href="http://www.marciotrindade.com/" target="_blank">Márcio Trindade</a>. Junto com a gente estava Dr Nic e um argentino maluco (qual que não é?! huahauhua). Em outras mesas estavam <a href="http://obiefernandez.com/" target="_blank">Obie Fernandez</a>, <a href="http://chadfowler.com/" target="_blank">Chad Fowler</a>, <a href="http://errtheblog.com/">Chris Wanstrath</a>, <a href="David Chelimsky" target="_blank">David Chelimsky</a>! A galera do Phusion Passenger também estava lá, assim como <a href="http://blog.improveit.com.br/" target="_blank">Vinicius Teles</a>, <a href="http://www.linkedin.com/in/juanbernabo" target="_blank">Juan Bernabó</a> e muitos outros (Incluindo Fábio Akita!). Bom, o resto foi um misto de muita bebida, risadas, e claro, muito papo nerd. E o mais legal de tudo é que sobrou um pouco de bateria na filmadora e eu consegui filmar alguma coisa (com a ajuda do nosso amigo argentino, que se alguem lembrar do nome por favor me avise).

O mais legal de tudo isso foi poder conhecer muita gente legal, ter contato com meus ídolos e ver que estes são pessoas muito acessiveis. Certamente esse dia não vai sair de minha lembrança, um abraço pra galera que esteve lá, devido ao nível alcoolico do momento não me lembro do nome de todos, huahuahuaha. E fica a chamada pra galera, quem esteve lá nessa noite por favor se manifeste e comente aí, gostaria de saber o nome da galera. ;-)
<p style="text-align: center;"><object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="400" height="300" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowfullscreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="src" value="http://vimeo.com/moogaloop.swf?clip_id=2262377&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1" /><embed type="application/x-shockwave-flash" width="400" height="300" src="http://vimeo.com/moogaloop.swf?clip_id=2262377&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1" allowscriptaccess="always" allowfullscreen="true"></embed></object>
<a href="http://vimeo.com/2262377">Rails Summit Happy Hour, hino nacional</a> from <a href="http://vimeo.com/user942052">miguel aranha baldi horlle</a> on <a href="http://vimeo.com">Vimeo</a>.

Observações: Conforme eu for subindo mais videos no <a href="http://vimeo.com/" target="_blank">Vimeo</a> eu vou atualizando este post, portanto fiquem ligados! Tentei deixar os videos em uma boa qualidade para quem for baixar. Ainda tenho que editar a maior parte da filmagem que foi feita pelo argentino maluco, que logo no inicio pegou a camera de mim e não soltou mais até acabar a bateria!

Espero que mais eventos como esse aconteçam, e que a galera compareça e participe como participou neste evento, abraço à todos!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>253</wp:post_id>
		<wp:post_date>2008-11-17 12:07:28</wp:post_date>
		<wp:post_date_gmt>2008-11-17 15:07:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-summit-happy-hour</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="eventos"><![CDATA[eventos]]></category>
		<category domain="post_tag" nicename="railssummit"><![CDATA[railssummit]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078522]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>96</wp:comment_id>
			<wp:comment_author><![CDATA[André Faria Gomes]]></wp:comment_author>
			<wp:comment_author_email>andre.java@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.andrefaria.com</wp:comment_author_url>
			<wp:comment_author_IP>189.62.230.130</wp:comment_author_IP>
			<wp:comment_date>2008-11-23 09:24:40</wp:comment_date>
			<wp:comment_date_gmt>2008-11-23 12:24:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[É a festa realmente foi muito boa!!!
Abraço]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Agilidade cascateira</title>
		<link>http://1up4dev.org/2008/12/agilidade-cascateira/</link>
		<pubDate>Tue, 16 Dec 2008 13:50:09 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=262</guid>
		<description></description>
		<content:encoded><![CDATA[Atualmente as metodologias ágeis vêm aparecendo com cada vez mais freqüência nas empresas que desenvolvem software, introduzidas pelos próprios desenvolvedores (o que é mais comum) ou em alguns <span style="text-decoration: line-through;">raros</span> casos pela "cúpula" da empresa, na esperança de melhorar a produtividade e/ou o alto tempo de resposta do fracassado processo cascateiro. Porém, esta "fama" prematura dos métodos ágeis tem gerado mais resultados ruins do que bons. Sua aplicação na vida real, <span style="text-decoration: line-through;">na maioria</span> em muitos casos, ocorre de maneira equivocada, distorcida e desprezando-se os reais valores e princípios que apoiaram o surgimento desta filosofia.

Um exemplo claro de como os valores ágeis estão sendo <span style="text-decoration: line-through;">desprezados</span> distorcidos é o aumento constante de "cursos" e treinamentos de metodologias ágeis. Não é raro eu receber semanalmente vários <span style="text-decoration: line-through;">spams</span> e-mails de escolas de treinamento que ministram cursos de Scrum, XP, preparação para certificação ScrumMaster, técnicas de TDD, DDD, BDD, etc. Infelizmente o que estes cursos não ensinam (como todos os outros) é o verdadeiro significado de "ser ágil". Fazer um curso de 20 horas de Scrum não o torna um ScrumMaster (você pode até ter um certificado, mas se você realmente é "ágil", sabe que um certificado é um mero pedaço de papel sem valor).

E assim chegamos à "agilidade cascateira", onde todos na empresa estufam o peito para falar que seguem práticas ágeis, <a href="http://pindureta.wordpress.com/2008/12/02/dialogo-imaginario-baseado-em-fatos-reais/">desenvolvimento orientados à testes</a>, utilizam <a href="http://fmeyer.org/archives/2008/11/20/o-scrume/">Scrume</a> para gerenciar os projetos, etc. Na verdade estão apenas praticando um <a href="http://1up4dev.org/2008/06/waterfalling/">waterfall incremental</a>, cometendo os mesmos <a href="http://1up4dev.org/2008/10/software-e-sobre-investimento/">erros clássicos da cascata</a>, valorizando os processos ao invés das pessoas, focando em soluções equivocadas ao invés de <a href="http://1up4dev.org/2008/11/foco-no-problema/">resolver os problemas dos clientes</a> e assim, <a href="http://1up4dev.org/2008/10/a-perpetuacao-da-especie/">difamando e denegrindo</a> a reputação e o propósito do <a href="http://agilemanifesto.org/">AgileManifesto</a>.

Esse é o cenário ideal para os <a href="http://1up4dev.org/2008/11/os-guardioes-da-cascata/">guardiões cascateiros</a>. É por estes e outros motivos que vemos "flames" oportunistas como <a href="http://jamesshore.com/Blog/The-Decline-and-Fall-of-Agile.html">The Decline and Fall of Agile</a> começarem a fazer sentido na comunidade. Como disse o <a href="http://gc.blog.br/2008/11/22/agile-indo-para-o-buraco/">Guilherme Chapiewski</a>, as pessoas estão querendo ir direto para a sobremesa e esquecendo de comer seus vegetais. Utilizar uma metodologia ágil não é desenvolver software de forma anarquista, existe muito conceito e experiência adquirida para sustentar esta filosofia.

Neste blog você já viu várias maneiras de como ser um verdadeiro cascateiro e de como não ser ágil. Já que estamos falando nisso, vamos tentar resumir alguns pontos e características que tornam um desenvolvedor realmente ÁGIL!
<h3>Estude, mantenha-se atualizado!</h3>
A principal característica de um agilista é sua sede por conhecimento, sua busca incansável por novas técnicas, linguagens, ferramentas, etc. O seguidor ágil lê artigos, revistas, livros e o faz como diversão. Se você não leu pelo menos um livro técnico nos últimos 6 meses, isto é um mal sinal. Faça laboratórios, testes de novos frameworks, bibliotecas, etc. Pet-projects também são uma maneira pragmática de aprender novas formas e técnicas de desenvolvimento. Finalmente, conheça e pratique os princípios e valores do <a href="http://agilemanifesto.org/principles.html">AgileManifesto</a>, tendo-os como seu mantra, seu guia filosófico e seu mentor profissional.
<h3>Entenda realmente o problema do seu cliente</h3>
Isto parece ser óbvio, mas na maioria das vezes não é. Existem vários perfis de clientes, e é claro que você deve lidar de maneiras diferentes com cada um deles.

Alguns são visionários sonhadores e sempre têm necessidades mirabolantes, sem sentido. Outros são simplistas demais e muitas vezes "ocultam" detalhes importantes. Também existem os pseudo-técnicos, que acham que sabem fazer seu trabalho e já vêm sugerindo como você deve implementar aquela nova funcionalidade.

[caption id="attachment_272" align="aligncenter" width="300" caption="Reação comum quando há um problema"]<a href="http://1up4dev.org/wp-content/uploads/2008/12/imagem_spam_problem.jpg"><img class="size-medium wp-image-272" title="Reação comum quando há um problema" src="http://1up4dev.org/wp-content/uploads/2008/12/imagem_spam_problem-300x181.jpg" alt="Reação comum quando há um problema" width="300" height="181" /></a>[/caption]

Como verdadeiro agilista, saber identificar o perfil de seu cliente é o início para um relacionamento de confiança e transparência. Só assim você será capaz de concentrar esforços para <a href="http://1up4dev.org/2008/11/foco-no-problema/">resolver seu problema</a> e <a href="http://1up4dev.org/2008/10/software-e-sobre-investimento/">agregar valor ao produto</a>.
<h3>Não tenha medo de mudanças</h3>
A única maneira de criar, corrigir ou melhorar algo é com coragem E com mudança. O essencial para mudar algo é saber identificar o que está errado. Por exemplo, você sofre diariamente para fazer o <em>deploy</em> da sua aplicação para homologação. Identificado o problema e uma possível solução, por exemplo, fazer o <em>deploy</em> em .war, você tem duas soluções: ou deixa como está e coloca a culpa na aplicação ou no processo de desenvolvimento (conformismo) ou com muita coragem investe algumas horas e resolve de vez o problema (agilismo).

Quando bater a insegurança, repita: <strong>coragem! coragem! coragem!</strong>

[caption id="attachment_266" align="aligncenter" width="150" caption="Coragem: o cão covarde!"]<a href="http://1up4dev.org/wp-content/uploads/2008/12/coragemcaocovarde.jpg"><img class="size-medium wp-image-266" title="Tenha Coragem!" src="http://1up4dev.org/wp-content/uploads/2008/12/coragemcaocovarde.jpg" alt="" width="150" height="150" /></a>[/caption]
<h3>Reflita e aprenda com os próprios erros</h3>
Existem várias maneiras de você evoluir seu conhecimento, e a maioria dos programadores utilizam somente uma: tomando na cabeça.

[caption id="attachment_268" align="aligncenter" width="170" caption="Prego só toma na cabeça!"]<a href="http://1up4dev.org/wp-content/uploads/2008/12/fotopregocomcabeca.jpg"><img class="size-medium wp-image-268" title="Prego só toma na cabeça!" src="http://1up4dev.org/wp-content/uploads/2008/12/fotopregocomcabeca.jpg" alt="Prego só toma na cabeça!" width="170" height="170" /></a>[/caption]

Como um bom seguidor de práticas ágeis, reflita e aprenda com seus erros. Compartilhar seus problemas é a melhor maneira de escolher um solução adequada e ainda espalhar sua experiência entre a equipe para que outras pessoas não cometam o mesmo erro.

Errar é humano. Persistir no erro é burrice. Se você está com problemas, procure por pessoas que já tiveram um problema parecido e aprenda com ele. Não cometa os mesmo erros, e mais importante, não cometa os mesmo erros dos outros!
<h3>Resumo</h3>
Se tudo que você leu até agora não é novidade, parabéns! Caso contrário comece o quanto antes estudar e principalmente praticar estes conceitos no seu trabalho e na sua vida.

Seja responsável e <a href="http://www.velhosabio.com.br/mensagem.exibir.php?codmsg=297">comprometido</a> com seu trabalho. Esforce-se para fazer o melhor. Faça valer o seu salário. E lembre-se: cuidado com os falsos agilistas!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>262</wp:post_id>
		<wp:post_date>2008-12-16 10:50:09</wp:post_date>
		<wp:post_date_gmt>2008-12-16 13:50:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>agilidade-cascateira</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agilidade"><![CDATA[agilidade]]></category>
		<category domain="category" nicename="cascata"><![CDATA[cascata]]></category>
		<category domain="category" nicename="processos"><![CDATA[processos]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078532]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>101</wp:comment_id>
			<wp:comment_author><![CDATA[Humberto]]></wp:comment_author>
			<wp:comment_author_email>humberto.bulhoes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://myidlethread.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>200.99.6.194</wp:comment_author_IP>
			<wp:comment_date>2008-12-16 11:45:59</wp:comment_date>
			<wp:comment_date_gmt>2008-12-16 14:45:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[É isso aí.. mesmo não gostando de ditados não tenho como evitar de dizer que, pra quem só sabe martelar, tudo é prego! Abraços]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>4</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>102</wp:comment_id>
			<wp:comment_author><![CDATA[Rogério]]></wp:comment_author>
			<wp:comment_author_email>habutre@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.38.252.230</wp:comment_author_IP>
			<wp:comment_date>2008-12-18 13:47:31</wp:comment_date>
			<wp:comment_date_gmt>2008-12-18 16:47:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bem, eu ainda não consegui descobrir como as empresas continuam gastando dinheiro com "processos" que possuem diversos cases de insucesso. Ainda na teoria dos pregos, ficam martelando parafuso, ao invés de investir na ferramenta correta para o trabalho.
Mas, o que ainda emperra o trabalho é a pirâmide hierárquica das companhias.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>641</wp:comment_id>
			<wp:comment_author><![CDATA[Pesquisa de pré-lançamento do Sitefique.me | 1up4developers]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2011/03/pesquisa-de-pre-lancamento-do-sitefique-me/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2011-03-21 06:18:13</wp:comment_date>
			<wp:comment_date_gmt>2011-03-21 09:18:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] que nossa busca por simplicidade é uma constante (e não é uma coisa fácil de se encontrar nos ambientes [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>TPW - Dicas para a qualidade do Software</title>
		<link>http://1up4dev.org/2009/01/tpw-dicas-para-a-qualidade-do-software/</link>
		<pubDate>Thu, 15 Jan 2009 10:32:52 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=280</guid>
		<description></description>
		<content:encoded><![CDATA[Desenvolvedores em geral sabem como é chato quando uma tela que fez ou alterou dá erro durante uma homologação ou até produção. No caso de um sistema Web, a raiva aumenta ainda mais se a causa for incompatibilidade de navegadores.

Antes de começar a apresentar o "the best of my rotina", é bom deixar bem claro o meu cenário:
<ul>
	<li>Trabalho sozinho no projeto, sou humano e faço pair programming com a cpu, que eu tenho certeza que é <a href="http://desciclo.pedia.ws/wiki/POG">pogger</a>!</li>
	<li>O meu cliente, o que requisita correções e/ou novas funcionalidades, é um cliente interno e eu tenho acesso direto a ele.</li>
	<li>O sistema não tem testes unitários, testes de integração e etc.</li>
	<li>Muito código foi copiado, não somente na camada de negócio, mas também nas views. As páginas por aqui, também são conhecidas como <em>business-view</em>.</li>
	<li>Tem mais complicações, mais acho que já tem o suficiente para entenderem o meu cenário.</li>
</ul>
O que já fizemos para começar a arrumar a casa:
<ul>
	<li>Implantamos um bug tracker, conhecido como <a href="http://www.redmine.org/">Redmine</a>. Sabe aquele velho problema de planilha pra lá e pra cá e ninguém nunca sabia quem, e o que estava fazendo? Pois bem, este problema está quase resolvido aqui (quase porque ainda tem projeto faltando para migrar).</li>
	<li>Implantamos um servidor de integração continua, com o <a href="https://hudson.dev.java.net/">Hudson</a>. Apesar de eu não ter testes, havia um sério problema aqui para implantar novas versões em homologação e produção, e agora com o Hudson centralizando o build, ele mesmo já disponibiliza o war.</li>
	<li>Por sinal, montar e começar a usar o war foi outro trampo também.</li>
</ul>
Sabendo que o meu contexto é diferente do seu, sinta-se livre para adaptar qualquer coisa. Tentei deixar as dicas o mais genérico possível.
<h3>1. Trabalhe com tarefas Curtas</h3>
Tarefas curtas são muito mais fáceis para desenvolver, testar e se livrar! Por exemplo, se tem que desenvolver aquele formulário com vinte telas, não tenha dúvida, quebre isto em pequenas funcionalidades. Para identificar as partes "quebráveis", leve em conta o que a torna funcional, ainda no exemplo anterior, se das vinte telas, você fizer a primeira e a última são suficientes para um cadastro básico, está ai a sua primeira tarefa. Muitas pessoas não dão importância para isso, mas saber "extrair" as tarefas certas de um novo desenvolvimento ou manutenção, traz um leque de vantagens:
<ul>
	<li> Testar uma funcionalidade curta é muito mais rápido e fácil do que testar uma gigantesca;</li>
	<li> Fica mais dificil perder o foco.</li>
	<li> Os prazos ficam mais "coerentes".</li>
	<li> Você pode retirar ou incluir novas funcionalidades, a "negociação" com o cliente fica mais simples.</li>
</ul>
<h3>2. Monte e use um roteiro de teste</h3>
Pra quem usa <a href="http://en.wikipedia.org/wiki/Test-driven_development">TDD</a>, este passo pode pular. Pra quem trabalha com legados e ainda não tem testes (meu caso), eu costumo fazer um roteiro de testes antes de implementar a funcionalidade curta. Este roteiro costuma ser enxuto e abrangente, isto permite que eu descanse meu cerebro enquanto testo, pois com ele, acaba se tornando um processo mecânico. Vou colocar um exemplo recente de roteiro que usei:

<strong>Teste de Primeiro Acesso</strong>
<ul>
	<li> Limpar a base, apagar os registros da tabela xpto e suas dependências.</li>
	<li> Limpar os cookies.</li>
	<li> Acessar o index.jsp da Aplicação (esta página simula um login via cookie).</li>
	<li> A tela inicial só permite cadastrar os dados do perfil, os links "xxx" e "zzz" não ficam disponíveis.</li>
	<li> Após o Teste de Restrições ao Editar o Perfil, verificar que os links "xxx" e "zzz" estão disponíveis.</li>
	<li> Clicar em salvar novamente para verificar se o problema de "unique id" não ocorre.</li>
</ul>
Estes roteiros se tornaram um costume, eu perco pouquissimo tempo pra fazer e apesar de parecer besta, ele me ajuda muito na hora de executar um teste de sanidade por exemplo. O ideal seria transformar este roteiro num teste unitário ou até mesmo num script via Selenium, mas devido a estrutura (ou a falta dela?!) eu ainda não consegui esta automação tão sonhada.
Apesar deste roteiro ser descartável e somente para ajudá-lo, uma idéia legal que venho fazendo é colocá-lo como comentário caso use um bug tracker.
<h3>3. Teste seu sistema num ambiente isolado</h3>
Estes últimos dois anos tenho usado <a href="http://www.ubuntu.com/">linux</a> no desktop para desenvolvimento. Infelizmente, todos nós sabemos que todo sistema web tem que ser testado nos IE*s e cia. É claro que durante o inicio do desenvolvimento, uso meu firefox local mesmo, mas assim que termino a funcionalidade, uso uma máquina virtual para averiguar a compatibilidade com os navegadores mais utilizados.
Usando o <a href="http://www.virtualbox.org/">Virtual Box</a> e <a href="http://tredosoft.com/Multiple_IE">Multiple IEs</a> mais o opcional roteiro de testes, consigo validar o sistema numa boa gama de navegadores. Para usar o Multiple IEs não tem segredo, é só atualizar para o IE7 e depois rodar o executável do mesmo.
<p style="text-align: center;"><a href="http://1up4dev.org/wp-content/uploads/2009/01/virtualbox_multiple_ies.png"><img class="aligncenter size-medium wp-image-288" title="virtualbox e multiple IEs" src="http://1up4dev.org/wp-content/uploads/2009/01/virtualbox_multiple_ies-300x187.png" alt="" width="424" height="264" /></a></p>

<h3>4. Automatize o que for possível</h3>
Já ocorreu de você precisar preencher <em>n</em> campos, navegar em <em>n</em> telas e descobrir que você errou o nome de uma variável javascript e ter que fazer tudo de novo? Pois bem, comigo já aconteceu muito, e uma das soluções que venho usando é o <a href="http://seleniumhq.org/projects/ide/">Selenium Ide</a>. Com o plugin do firefox, eu gravo scripts temporários (durante o desenvolvimento da tarefa) que preenche os <em>n</em> campos e navegam nas <em>n</em> telas, assim pelo menos este tempo de navegação eu só perco uma vez.
<h3>Finalizando ...</h3>
Todas estas "técnicas" nada mais são do que uma retrospectiva minha, de uma tentativa (frustada por sinal) de Scrum Solo. Aqui estou colocando o que vem dando resultado, e se você achou besteira ou legal, gostaria muito do seu comentário. Sabe aquela <a href="http://www.jlcarneiro.com/macas-ideias-e-conhecimento/">frase da maça e conhecimento</a>, então, minha única expectativa com este post é esta: Novas Idéias!

Valeu e feliz ano novo a todos!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>280</wp:post_id>
		<wp:post_date>2009-01-15 07:32:52</wp:post_date>
		<wp:post_date_gmt>2009-01-15 10:32:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tpw-dicas-para-a-qualidade-do-software</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dicas"><![CDATA[dicas]]></category>
		<category domain="post_tag" nicename="pragmatic-waterfall"><![CDATA[pragmatic waterfall]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078601]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>104</wp:comment_id>
			<wp:comment_author><![CDATA[Larissa]]></wp:comment_author>
			<wp:comment_author_email>larissa@vetorialtech.com.br</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>200.162.12.131</wp:comment_author_IP>
			<wp:comment_date>2009-01-15 09:23:34</wp:comment_date>
			<wp:comment_date_gmt>2009-01-15 12:23:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Meninos, parabéns pelo site.....Fica cada dia mais interessante....Às vezes fico meio "boiando", pois como disse ao Roger hoje, "infelizmente ainda estou presa ao MS-WORLD", um mal necessário....
Mas mesmo assim leio sempre que posso....
Um grande abraço a todos vocês e sucesso sempre!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>TPW - Testando sistemas legados: automatizando o build</title>
		<link>http://1up4dev.org/2009/02/tpw-testando-sistemas-legados-automatizando-build/</link>
		<pubDate>Thu, 12 Feb 2009 02:01:31 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=307</guid>
		<description></description>
		<content:encoded><![CDATA[Imagine o cenário: você caiu de para-quedas naquele projeto que todo mundo na empresa <span style="text-decoration: line-through;">fez gambiarra</span> deu manutenção e agora precisa implementar uma nova funcionalidade. Mesmo que tenha alguma documentação, vai ser inútil neste caso. Então você começa a vasculhar o código e encontra dezenas de classes com nomes parecidos, vários arquivos XML's dos inúmeros frameworks utilizados anteriormente, <a href="http://www.fragmental.com.br/wiki/index.php/Evitando_VOs_e_BOs" target="_blank">TO's, VO's</a>, Actions, Utils... ou seja, um lugar cheio de <a href="http://blog.improveit.com.br/articles/2007/01/05/nada-de-janelas-quebradas" target="_blank">janelas quebradas</a>.

O mais fácil neste caso seria fazer seu trabalho, quebrando mais algumas janelas caso necessário, e cair fora o quanto antes. Mas você, <a href="http://agilemanifesto.org/" target="_blank">desenvolvedor ágil</a>, sabe que além de ser falta de profissionalismo, você corre o risco de cair novamente no mesmo projeto. Então aproveite a oportunidade para fazer uma pequena faxina e preparar o projeto para escrever os testes das novas funcionalidades que irá desenvolver, garantido assim a qualidade, pelo menos, do seu trabalho.

Durante minha carreira <span style="text-decoration: line-through;">fui obrigado</span> tive a oportunidade de dar manutenção em diversos projetos "<a href="http://blog.fragmental.com.br/2006/04/02/2006-o-inicio-da-arquitetura-heterogenea-java-ee-ou-qual-o-melhor-framework-web/" target="_blank">frankenstein</a>" de onde adquiri certa experiência para poder "organizar a casa" e trabalhar decentemente no código. É claro que não estou falando em escrever testes para o projeto inteiro, mas pelo menos garantir a qualidade do código que desenvolvi ou irei desenvolver.

Há um certo padrão que todo software de qualidade deve seguir. Além dos padrões e boas práticas como organização do código em pacotes vs. responsabilidade, uma coisa essencial para o projeto é sua construção, ou seja, a forma que o software é "entregue". Acredito que este seja o primeiro passo para começar a organizar a bagunça de um projeto.

A construção do projeto deve ser automática e desempenhada por uma ferramenta de build como o <a href="http://ant.apache.org/index.html" target="_blank">Ant</a> ou <a href="http://maven.apache.org/" target="_blank">Maven</a>, com tarefas (tasks) e objetivos bem definidos. Normalmente, um build do projeto deve:
<ol>
	<li>Preparar o código e dependências</li>
	<li>Compilar os arquivos fontes</li>
	<li>Executar os testes</li>
	<li>Empacotar a distribuição</li>
</ol>
No exemplo abaixo usarei o Ant, que é a ferramenta de build (para Java) mais popular do mercado e muito simples de utilizar. O importante neste processo é ser pragmático: não perca o foco! Você poderia (e futuramente deveria) utilizar o Maven, mas adequá-lo a um sistema legado não é tão simples quanto parece.

Tendo os objetivos do build definidos, basta escrever o script do Ant. Isso deve ser feito no arquivo build.xml, no root do projeto. As tarefas são definidas pelas tags &lt;target&gt; e podem ser dependentes para garantir a sequencia de execução. Em cada target são definidas as ações executadas, como rodar o compilador (javac), copiar um arquivo, rodar os testes, etc. Uma vez que as tarefas estão configuradas, basta executar o build pelo próprio IDE ou linha de comando.
<pre style="border: 1px dashed #999999; padding: 5px; overflow: auto; font-family: Andale Mono,Lucida Console,Monaco,fixed,monospace; color: #000000; background-color: #eeeeee; font-size: 12px; line-height: 14px; width: 100%;"><code>&lt;project name="frank" default="package"&gt;
    &lt;path id="classpath"&gt;
        &lt;pathelement location="build/bin"/&gt;
        &lt;fileset dir="src"&gt;
            &lt;include name="*.java"/&gt;
        &lt;/fileset&gt;
        &lt;fileset dir="lib"&gt;
            &lt;include name="*.jar"/&gt;
        &lt;/fileset&gt;
    &lt;/path&gt;
    &lt;target name="clean"&gt;
         &lt;delete dir="build"/&gt;
          &lt;mkdir dir="build"/&gt;
    &lt;/target&gt;
    &lt;target name="compile" depends="clean"&gt;
        &lt;javac srcdir="src" destdir="build"&gt;
            &lt;classpath refid="classpath"/&gt;
        &lt;/javac&gt;
    &lt;/target&gt;
    &lt;target name="test" depends="compile"&gt;
        &lt;junit&gt;
            &lt;classpath refid="classpath"/&gt;
            &lt;batchtest&gt;
                &lt;fileset dir="build" includes="*Test"/&gt;
            &lt;/batchtest&gt;
        &lt;/junit&gt;
    &lt;/target&gt;
    &lt;target name="package" depends="compile, test"&gt;
        &lt;war destfile="frank.war" webxml="web/WEB-INF/web.xml"&gt;
        &lt;classes dir="build"/&gt;
    &lt;/target&gt;
&lt;/project&gt;
</code></pre>
Neste script estão definidas as tarefas necessárias para executar um build, conforme citei anteriormente. Por enquanto isto será o mínimo necessário para dar suporte as próximas etapas da sua missão. Mesmo que o projeto já tenha um build em Ant aproveite para <a href="http://www.onjava.com/pub/a/onjava/2003/12/17/ant_bestpractices.html" target="_blank">revisá-lo</a>. Tarefas bem simples e bem definidas são mais fáceis de entender e manter.

Com o build implementado, você não terá mais que se preocupar com o empacotamento do projeto. Agora comece a direcionar seus esforços para escrever os testes. Deixe que o Ant se encarregará de executá-los para você.

No próximo post vou apresentar alguns padrões e práticas de refactoring utilizados para possibilitar escrever testes que dependem de classes legadas do projeto.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>307</wp:post_id>
		<wp:post_date>2009-02-11 23:01:31</wp:post_date>
		<wp:post_date_gmt>2009-02-12 02:01:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tpw-testando-sistemas-legados-automatizando-build</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="pragmatic-waterfall"><![CDATA[pragmatic waterfall]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="testes-unitarios"><![CDATA[testes unitários]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078464]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>105</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; TPW - Testando sistemas legados: manipulando dependências]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2009/02/tpw-testando-sistemas-legados-manipulando-dependencias/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2009-02-19 12:48:57</wp:comment_date>
			<wp:comment_date_gmt>2009-02-19 15:48:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] para os testes, no post anterior começamos a organizar o projeto automatizando o build e centralizando a execução dos testes para [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>110</wp:comment_id>
			<wp:comment_author><![CDATA[Itamar de Medeiros Coelho]]></wp:comment_author>
			<wp:comment_author_email>itamar.medeiros@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.42.207.9</wp:comment_author_IP>
			<wp:comment_date>2009-03-04 21:22:52</wp:comment_date>
			<wp:comment_date_gmt>2009-03-05 00:22:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fala aí Rodrigo!
Leio sempre o 1up, tá massa.
valeu]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>TPW - Testando sistemas legados: manipulando dependências</title>
		<link>http://1up4dev.org/2009/02/tpw-testando-sistemas-legados-manipulando-dependencias/</link>
		<pubDate>Thu, 19 Feb 2009 15:48:35 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=328</guid>
		<description></description>
		<content:encoded><![CDATA[Pela definição de <a href="http://www.amazon.com/Working-Effectively-Legacy-Robert-Martin/dp/0131177052">Michael Feather</a>, <strong>código legado é código sem testes</strong>! Não importa se o código foi escrito semana passada ou alguns anos atrás. Qualquer manutenção será de difícil entendimento por outra pessoa e não haverá garantias de seu funcionamento. Uma vez que não há "controle", é mais difícil rastrear as alterações; pior do que uma nova funcionalidade que não funciona, é uma funcionalidade antiga que começa a falhar. Este é um risco que um desenvolvedor não pode correr!
<h3>Não altere código legado até que seja possível testá-lo</h3>
Um dos problemas mais comuns em sistemas legados é a interdependência de classes, ou seja, o <a href="http://en.wikipedia.org/wiki/Coupling_(computer_science)">alto acoplamento</a>, que sempre está ligado com a <a href="http://en.wikipedia.org/wiki/Cohesion_(computer_science)">baixa coesão</a>. Se estes termos são difíceis de entender, pense em acoplamento como sendo o grau com que as classes referenciam umas as outras e coesão o quanto uma classe está focada em realizar suas responsabilidades.

Para que seja possível testar o comportamento de uma classe "acoplada", o comportamento de suas dependências precisa ser <a href="http://en.wikipedia.org/wiki/Method_stub">simulado</a>. Isto normalmente é feito através de objetos falsos, ou <a href="http://en.wikipedia.org/wiki/Mock_object">mocks</a>, que são injetados na instância da classe em questão. Este padrão é conhecido como <a href="http://pt.wikipedia.org/wiki/Invers%C3%A3o_de_controle">Inversão de Controle </a>e <a href="http://pt.wikipedia.org/wiki/Inje%C3%A7%C3%A3o_de_depend%C3%AAncia">Injeção de dependência</a>, onde o controle sobre as dependências da classe são delegados à outro objeto, ou normalmente um <a href="http://pt.wikipedia.org/wiki/Spring_Framework">container de objetos</a>, responsável por <a href="http://misko.hevery.com/2009/01/14/when-to-use-dependency-injection/">injetar</a> as dependências nas instâncias das classes. Simples, não?! Mas isso será detalhado em outro post...

Voltando para os testes, no <a href="http://1up4dev.org/2009/02/tpw-testando-sistemas-legados-automatizando-build/">post anterior</a> começamos a organizar o projeto automatizando o build e centralizando a execução dos testes para evitar que fiquem "soltos" pelo código. Agora vamos nos concentrar em escrever os casos de teste, <a href="http://pt.wikipedia.org/wiki/Refatora%C3%A7%C3%A3o">refatorando</a> o necessário para lidar com as dependências das classes.

Partindo da premissa que o projeto não possuí nenhum framework de inversão de controle, utilizaremos um certo "padrão" que permite manipular as dependências de uma classe por meio de herança, sem alterar seu comportamento original. <strong>A idéia é resolver as dependências da classe através de getters protegidos, que podem ser sobrescritos em uma classe filha no momento do teste</strong>. Isso permite que, na classe estendida, o método sobrescrito retorne um objeto mock, por exemplo, com o comportamento esperado para o teste.

Vamos tomar como exemplo, uma classe simples com algumas dependências e responsável por encapsular algumas regras de negócio referentes à <em>Estoque</em>.
<pre style="border: 1px dashed #999999; padding: 5px; overflow: auto; font-family: Andale Mono,Lucida Console,Monaco,fixed,monospace; color: #000000; background-color: #eeeeee; font-size: 12px; line-height: 14px; width: 100%;"><code>public class EstoqueLogic {
    public boolean verificaDisponibilidade(Produto produto, Integer quantidade) {
        EstoqueDAO dao = new EstoqueDAO();
        Estoque estoque = dao.localizaProduto(produto.getCodigo());
        return estoque.getQuantidade() &gt;= quantidade;
    }
}
</code></pre>
Da forma como esta classe foi escrita, é impossível testar a regra de <em>disponibilidade</em> independentemente, pois depende do objeto <em>EstoqueDAO</em> para localizar as informações necessárias para o método. Mas com um pequeno refactoring, a responsabilidade de resolver a dependência <em>EstoqueDAO</em> passa a ser responsabilidade da própria classe <em>Estoque</em>:
<pre style="border: 1px dashed #999999; padding: 5px; overflow: auto; font-family: Andale Mono,Lucida Console,Monaco,fixed,monospace; color: #000000; background-color: #eeeeee; font-size: 12px; line-height: 14px; width: 100%;"><code>public class EstoqueLogic {
    public boolean verificaDisponibilidade(Produto produto, Integer quantidade) {
        EstoqueDAO dao = getEstoqueDAO();
        Estoque estoque = dao.localizaProduto(produto.getCodigo());
        return estoque.getQuantidade() &gt;= quantidade;
    }
    protected EstoqueDAO getEstoqueDAO() {
        return new EstoqueDAO();
    }
}
</code></pre>
Desta forma, é possível "injetar" um objeto que simule a dependência do <em>EstoqueDAO</em> estendendo a classe e sobrescrevendo o método <em>getEstoqueDAO()</em> para retornar a instância desejada. O teste ficaria mais ou menos assim:
<pre style="border: 1px dashed #999999; padding: 5px; overflow: auto; font-family: Andale Mono,Lucida Console,Monaco,fixed,monospace; color: #000000; background-color: #eeeeee; font-size: 12px; line-height: 14px; width: 100%;"><code>public class EstoqueLogicTest {

    public void testVerificandoDisponibilidadeDeUmProduto() {

        //Criando o objeto EstoqueDAO mock, simulando o comportamento desejado
        final EstoqueDAO estoqueDAOMock = new EstoqueDAO() {
            @Override
            public Estoque localizaProduto(String codigo) {
                Produto produto = new Produto();
                produto.setCodigo(codigo);
                Estoque estoque = new Estoque();
                estoque.setProduto(produto);
                estoque.setQuantidade(5);
                return estoque;
            }
        };

        //Sobrescrevendo o método getEstoqueDAO para retornar o Mock
        EstoqueLogic logic = new EstoqueLogic() {
            @Override
            protected EstoqueDAO getEstoqueDAO() {
                return estoqueDAOMock;
            }
        };

        //Definindo o teste e executando
        Produto produto = new Produto();
        produto.setCodigo("123456");        

        boolean estaDisponivel = logic.verificaDisponibilidade(produto, 10);
        assertTrue(estaDisponivel);

        boolean naoEstaDisponivel = logic.verificaDisponibilidade(produto, 2);
        assertTrue(naoEstaDisponivel);
    }
}
</code></pre>
O método<em> getEstoqueDAO() </em>da classe <em>EstoqueLogic</em> foi sobrescrito para retornar o objeto <em>estoqueDAOMock</em> com as informações necessárias para o teste, ou seja, o comportamento das dependências foi simulado, possibilitando que o teste ficasse concentrado apenas da classe <em>Estoque</em>.
<h3>Elimine as dependências e teste onde os bugs estão!</h3>
Este padrão fornece apenas uma maneira de lidar com as dependências das classes para escrever testes. A dica aqui é manter o <a href="http://1up4dev.org/2008/11/foco-no-problema/">foco</a>: defina apenas testes para as funcionalidades que estiver alterando e que exercitem pontos críticos e/ou regras de negócio. Então, refatore apenas as classes necessárias para simular e validar o fluxo destes testes, nem que seja apenas seus "<a href="http://www.fragmental.com.br/wiki/index.php/Contratos_Nulos">contratos</a>". Não há necessidade de escrever testes muito granulares nem alterar todas as classes de um sistema legado.

No caso de classes com muitas dependências, o melhor é refatorá-la, separar as responsabilidades e testá-las individualmente. Para classes com dependências de Utils e/ou muitas chamadas à métodos estáticos, uma estratégia parecida pode ser utilizada. Mas estes são assuntos para os próximos posts. Acompanhem!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>328</wp:post_id>
		<wp:post_date>2009-02-19 12:48:35</wp:post_date>
		<wp:post_date_gmt>2009-02-19 15:48:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tpw-testando-sistemas-legados-manipulando-dependencias</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agilidade"><![CDATA[agilidade]]></category>
		<category domain="post_tag" nicename="mocks"><![CDATA[mocks]]></category>
		<category domain="post_tag" nicename="pragmatismo"><![CDATA[pragmatismo]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="testes-unitarios"><![CDATA[testes unitários]]></category>
		<category domain="category" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077358]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>106</wp:comment_id>
			<wp:comment_author><![CDATA[Bruno Laturner]]></wp:comment_author>
			<wp:comment_author_email>renrutal@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.31.180.196</wp:comment_author_IP>
			<wp:comment_date>2009-02-19 17:29:16</wp:comment_date>
			<wp:comment_date_gmt>2009-02-19 20:29:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Acho meio complicado essa definição de que código legado == código sem testes.

Códigos legados (no sentido de código feito há um bom tempo), tende a continuar a legado (sem testes) pela dificuldade de se implementar testes em sistemas prontos. Dependendo do tamanho é inviável.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>107</wp:comment_id>
			<wp:comment_author><![CDATA[Rodrigo Panachi]]></wp:comment_author>
			<wp:comment_author_email>rodrigopanachi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://nobrokenwindow.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>189.102.12.250</wp:comment_author_IP>
			<wp:comment_date>2009-02-19 22:09:12</wp:comment_date>
			<wp:comment_date_gmt>2009-02-20 01:09:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Bruno, o que o autor dessa afirmação quer dizer, e eu concordo, é que qualquer alteração feita em um código sem testes é arriscada. Por isso generalizou desta maneira.

A idéia não é implementar testes no sistema inteiro, mas sim testar primeiro para alterar depois. Não estou dizendo para desacoplar todas as classes e testá-las: basta apenas garantir que seu conjunto de classes funcione antes e depois das alterações.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>109</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; TPW - Testando sistemas legados: classes Utils]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2009/03/tpw-testando-sistemas-legados-classes-utils/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2009-03-03 11:11:09</wp:comment_date>
			<wp:comment_date_gmt>2009-03-03 14:11:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] o gancho do post anterior sobre manipulação de dependências, decidi dedicar um post apenas sobre este tema, pois acredito [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>TPW - Testando sistemas legados: classes Utils</title>
		<link>http://1up4dev.org/2009/03/tpw-testando-sistemas-legados-classes-utils/</link>
		<pubDate>Tue, 03 Mar 2009 14:11:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=330</guid>
		<description></description>
		<content:encoded><![CDATA[Aproveitando o gancho do <a href="http://1up4dev.org/2009/02/tpw-testando-sistemas-legados-manipulando-dependencias/">post anterior</a> sobre manipulação de dependências, decidi dedicar um post apenas sobre este tema, pois acredito ser de grande ajuda para todos desenvolvedores que precisam manter código legado.

Em projetos legados é comum encontrarmos classes Util (aka Helpers) espalhadas por todo o código, fazendo desde coisas simples como formatar datas ou números, até coisas mágicas como cache de objetos, operações com <a href="http://en.wikibooks.org/wiki/Java_Programming/Reflection/Overview" target="_blank">reflection</a>, escrita de logs, etc. Mesmo que tenham sua "utilidade", são um <a href="http://en.wikipedia.org/wiki/Separation_of_concerns">terror</a> quando falamos de testes! Além de ser um <a href="http://en.wikipedia.org/wiki/God_object">forte indício</a> de um <a href="http://en.wikipedia.org/wiki/Single_responsibility_principle">design fraco</a>, as chamadas a seus métodos, geralmente estáticos, geram dependências nas classes que a utilizam.

Este é a estrutura comum (bem simplificada) de uma classe Util com métodos estáticos:
<pre style="border: 1px dashed #999999; padding: 5px; overflow: auto; font-family: Andale Mono,Lucida Console,Monaco,fixed,monospace; color: #000000; background-color: #eeeeee; font-size: 12px; line-height: 14px; width: 100%;"><code>public class MagicUtil {
    public static String getConstanteSecreta() {
        return "VALOR_SECRETO_AMBIENTE";
    }
}
</code></pre>
Neste caso, uma boa estratégia para os testes seria encapsular a chamada da classe Util em um método <em>protected</em>, para que seja sobrescrito na classe de teste, assumindo o comportamento desejado. Porém, se a classe Util for largamente referenciada no projeto (o que é comum) seria preciso <em>refatorar</em> todas a classes que a utilizam para escrever um teste completo.

A estratégia proposta é <a href="http://pt.wikipedia.org/wiki/Refatora%C3%A7%C3%A3o">refatorar</a> a classe Util, aplicando o padrão <a href="http://pt.wikipedia.org/wiki/Singleton">Singleton</a> e transformando os métodos estáticos em métodos de instância, porém mantendo as assinaturas estáticas, que devem referenciar os métodos da instância. Uma vez que a Util pode ser instanciada (mesmo que internamente), é possível manipular seu comportamento através da injeção de um objeto <em>Mock</em>, por exemplo<em>:</em>
<pre style="border: 1px dashed #999999; padding: 5px; overflow: auto; font-family: Andale Mono,Lucida Console,Monaco,fixed,monospace; color: #000000; background-color: #eeeeee; font-size: 12px; line-height: 14px; width: 100%;"><code>public class MagicUtil {
    private static MagicUtil instance = new MagicUtil();
    protected static MagicUtil getInstance() {
        return instance;
    }
    protected static void setInstance(MagicUtil obj) {
        instance = obj;
    }
    public String getConstanteSecretaInstancia() {
        return "VALOR_SECRETO_AMBIENTE";
    }
    public static String getConstanteSecreta() {
        return getInstance().getConstanteSecretaInstancia();
    }
}
</code></pre>
Assim, a Util continua com o mesmo comportamento e seu <strong>contrato</strong> foi mantido. Agora, no seu teste, basta escrever o mock (estendendo a classe e sobrescrevendo os métodos) e injetá-lo na instância interna da Util:
<pre style="border: 1px dashed #999999; padding: 5px; overflow: auto; font-family: Andale Mono,Lucida Console,Monaco,fixed,monospace; color: #000000; background-color: #eeeeee; font-size: 12px; line-height: 14px; width: 100%;"><code>public class ClasseTest {
    @Test
    public void testaMetodoDependenteDeMagicUtil() {
        new MagicUtil() {
            {
                setInstance(this);
            }
            public String getConstanteSecretaInstancia() {
                return "MEU_VALOR_MOCK";
            }
        };
        Assert.assertEquals("MEU_VALOR_MOCK", MagicUtil.getConstanteSecreta());
    }
}
</code></pre>
Neste caso a classe anônima (que estende a Util) passa sua própria instância (this) para o método protegido <em>setInstance()</em>. Note que a chamada do método (estático) da Util continua igual ao da classe original, sem o refactoring.

Nos projetos que preciso manter, esta estratégia tem sido muito útil para resolver os problemas das "teias" de Utils. Porém é um recurso paliativo e <a href="http://gcirne.wordpress.com/2008/01/14/classes-util/">não deve ser utilizado</a> como o "padrão". O ideal é sempre evitar classes Utils, lembrando que uma classe deve sempre ter comportamentos bem definidos e o <a href="http://domaindrivendesign.org/">nome já deve indicar</a> sua responsabilidade.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>330</wp:post_id>
		<wp:post_date>2009-03-03 11:11:00</wp:post_date>
		<wp:post_date_gmt>2009-03-03 14:11:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tpw-testando-sistemas-legados-classes-utils</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ddd"><![CDATA[ddd]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="mocks"><![CDATA[mocks]]></category>
		<category domain="post_tag" nicename="pragmatic-waterfall"><![CDATA[pragmatic waterfall]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="testes-unitarios"><![CDATA[testes unitários]]></category>
		<category domain="category" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077787]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>111</wp:comment_id>
			<wp:comment_author><![CDATA[André Cardoso]]></wp:comment_author>
			<wp:comment_author_email>andrecardoso@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://andrecardoso.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>200.188.225.59</wp:comment_author_IP>
			<wp:comment_date>2009-03-17 00:27:52</wp:comment_date>
			<wp:comment_date_gmt>2009-03-17 03:27:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Olá, 

Poderias me esclarecer uma dúvida?

O singleton que foi implementado não apresenta o construtor privado. Isso não foje a essência desse padrão de projeto? 
Se fores manter o construtor privado, ou seja, fazer um "singleton clássico", a alternativa dos mocks/stubs não pode ser aplicada como foi mostrada.


Passei por esse problema e acabei refatorando tudo utilizando uma interface para o objeto em questão. Consegues ver uma solução melhor?

Parabéns pelo blog!
Obrigado!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>113</wp:comment_id>
			<wp:comment_author><![CDATA[Rodrigo Panachi]]></wp:comment_author>
			<wp:comment_author_email>rodrigopanachi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://nobrokenwindow.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>200.170.212.34</wp:comment_author_IP>
			<wp:comment_date>2009-03-19 09:25:19</wp:comment_date>
			<wp:comment_date_gmt>2009-03-19 12:25:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@André, realmente o padrão Singleton especifica que o construtor seja privado. Neste exemplo, deixei o construtor protected para que fosse possível alterar a instância do singleton apenas por herança.

Como disse, essa é uma "alternativa" para tornar o código testável sem muitas alterações drásticas. Mas, como você disse, se a oportunidade permitir refatorar tudo e usar interfaces, não pense duas vezes: com certeza é a melhor solução.

[]'s]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Business Bingo Generator</title>
		<link>http://1up4dev.org/2009/04/business-bingo-generator/</link>
		<pubDate>Mon, 13 Apr 2009 12:03:13 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=398</guid>
		<description></description>
		<content:encoded><![CDATA[Para quem tem algum tempo de internet, é fácil notar como as piadas se repetem, ou melhor, assim como olimpíadas ou copa do mundo, re-aparecem a cada quatro anos por exemplo. Não foi diferente com a piada que recebi (novamente) a pouco tempo, o Business Bingo. O que torna a piada muito divertida é o seu alto teor sarcástico e real, foi quando pensei, porque não imprimir esta cartela e realmente testar! Foi assim que surgiu a idéia de fazer um gerador de cartelas para o Business Bingo! :D

<a href="http://1up4dev.org/wp-content/uploads/2009/04/ideia.jpg"><img class="size-medium wp-image-401 alignleft" src="http://1up4dev.org/wp-content/uploads/2009/04/ideia-299x300.jpg" alt="idéia" width="66" height="67" /></a>
<h2 style="text-align: left;"><a href="http://business-bingo.heroku.com/">Business Bingo! Generator</a></h2>
A idéia deste post, além de ajudar a divulgar o site, é ter um local central para <strong>comentários, sugestões, reclamações e elogios</strong> para o <a href="http://business-bingo.heroku.com/">Business Bingo Generator</a>.
<h3>Curiosidade</h3>
<ul>
	<li>O Business Bingo, também conhecido como <a href="http://en.wikipedia.org/wiki/Buzzword_bingo">Buzzword Bingo</a>, ganhou notoridade em 1994, com uma tirinha publicada do <a href="http://dilbert.com/fast/1994-02-22/">Dilbert</a>.</li>
	<li>Um dos "grandes" eventos "documentados", foi em 1996, que alunos do MIT o usaram no discurso do vice-presidente dos EUA, Al-Gore.</li>
</ul>
<h3>Uma nota rápida a desenvolvedores</h3>
A primeira versão foi desenvolvida em dois dias, isso mesmo, dois dias e já estava em produção. Eu e o Rodrigo Panachi resolvemos implementar a idéia do <em>"generator"</em> para aprender na prática como funciona o Ruby on Rails. Num post futuro irei colocar mais detalhes técnicos, que apesar de ser uma aplicação muito pequena, podemos tirar proveito de grandes aulas. Para quem quiser contribuir, o <a href="http://github.com/rpanachi/business-bingo-generator/tree/master">Business Bingo Generator está no GitHub</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>398</wp:post_id>
		<wp:post_date>2009-04-13 09:03:13</wp:post_date>
		<wp:post_date_gmt>2009-04-13 12:03:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>business-bingo-generator</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="business-bingo"><![CDATA[business bingo]]></category>
		<category domain="post_tag" nicename="buzzword-bingo"><![CDATA[buzzword bingo]]></category>
		<category domain="category" nicename="marketing"><![CDATA[marketing]]></category>
		<category domain="category" nicename="projetos"><![CDATA[projetos]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077338]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>122</wp:comment_id>
			<wp:comment_author><![CDATA[miguel baldi]]></wp:comment_author>
			<wp:comment_author_email>miguel.horlle@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org</wp:comment_author_url>
			<wp:comment_author_IP>189.100.84.51</wp:comment_author_IP>
			<wp:comment_date>2009-04-13 10:46:47</wp:comment_date>
			<wp:comment_date_gmt>2009-04-13 13:46:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hahaha, ótima idéia! E com certeza é muito útil em reuniões waterfall compliant, hehe. Abraço]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>123</wp:comment_id>
			<wp:comment_author><![CDATA[Rogério R. Alcântara]]></wp:comment_author>
			<wp:comment_author_email>rogerio.alcantara@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://rogerioalcantara.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>201.6.61.252</wp:comment_author_IP>
			<wp:comment_date>2009-04-15 21:58:33</wp:comment_date>
			<wp:comment_date_gmt>2009-04-16 00:58:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fantástico!

Mandei para o pessoal da ultima "Fábrica de Software" que eu trabalhei e virou febre!

;D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>124</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; Remarkable, jqGrid no Rails, Heroku e Github issues]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2009/04/remarkable-jqgrid-no-rails-heroku-e-github-issues/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2009-04-20 01:22:23</wp:comment_date>
			<wp:comment_date_gmt>2009-04-20 04:22:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] da simplicidade do Business Bingo Generator, houve muitas &#8220;manhas&#8221; aprendidas no seu desenvolvimento. O Heroku foi uma delas, onde [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>423</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; Ruby: quando a linguagem de programação faz diferença!]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2009/08/ruby-quando-a-linguagem-de-programacao-faz-diferenca/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2009-10-22 21:09:15</wp:comment_date>
			<wp:comment_date_gmt>2009-10-23 00:09:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Eis que você conhece Ruby e Rails. A linguagem parece estranha a primeira vista mas após algum tempo dedicado e muito estudo você descobre que é uma ferramenta muito poderosa e produtiva, onde você pode &#8220;fluir&#8221; com seu desenvolvimento. Você pensa no que quer fazer e faz! Escreve sua &#8220;feature&#8221;, implementa e roda! Simples e divertido! [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Remarkable, jqGrid no Rails, Heroku e Github issues</title>
		<link>http://1up4dev.org/2009/04/remarkable-jqgrid-no-rails-heroku-e-github-issues/</link>
		<pubDate>Mon, 20 Apr 2009 04:00:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=412</guid>
		<description></description>
		<content:encoded><![CDATA[Este é o primeiro post que publicaremos semanalmente reunindo novidades sobre desenvolvimento, artigos, notícias e temas variados sobre Rails.
<h2><a href="http://www.nomedojogo.com/2009/04/14/remarkable-30-is-out-and-its-well-remarkable/" target="_blank">Remarkable 3.0</a></h2>
Foi lançada a nova versão do Remarkable, um framework para testes com RSpec. Dentre as novidades, estão:
<ul>
	<li>I18n, possibilitando gerar o output das specs no seu idioma <span style="text-decoration: line-through;">favorito</span> fluente</li>
	<li>Pending Macros, facilitando o agrupamento das specs pendentes</li>
	<li>Macro stubs e mais opções de Matchers, simplificando testes com mocks</li>
</ul>
Para instalar basta um <code>sudo gem install remarkable_rails</code>

Saiba mais no site do <a href="http://www.nomedojogo.com/2009/04/14/remarkable-30-is-out-and-its-well-remarkable/" target="_blank">Carlos Brando</a>, lendo a <a href="http://remarkable.rubyforge.org/rails/" target="_blank">documentação</a> ou espiando o código no <a href="http://github.com/carlosbrando/remarkable/tree/master" target="_blank">Github</a>.
<h2><a href="http://www.2dconcept.com/jquery-grid-rails-plugin" target="_blank">jqGrid no Rails</a></h2>
<a href="http://jquery.com/" target="_blank">jQuery</a> é um dos frameworks Javascript mais populares do mercado. O que <a href="http://www.2dconcept.com/articles/8-jquery-grid-rails-plugin" target="_blank">esse cara</a> fez foi juntar o <a href="http://www.trirand.com/jqgrid35/jqgrid.html" target="_blank">jqGrid</a>, que é um plugin muito bom para trabalhar com grids, num plugin para Rails, facilitando sua utilização.

Veja <a href="http://www.2dconcept.com/jquery-grid-rails-plugin" target="_blank">aqui</a> um guia de utilização do plugin, a <a href="http://github.com/ahe/jqgrid_demo_app/tree/master" target="_blank">aplicação de exemplo</a> ou confira o código no <a href="http://github.com/ahe/2dc_jqgrid/tree/master" target="_blank">Github</a>.
<h2><a title="Heroku" href="http://heroku.com/" target="_blank">Heroku</a></h2>
Apesar da simplicidade do <a title="Business Bingo Generator" href="http://1up4dev.org/2009/04/business-bingo-generator/" target="_blank">Business Bingo Generator</a>, houve muitas "manhas" aprendidas no seu desenvolvimento. O Heroku foi uma delas, onde pudemos publicar rapidamente a aplicação. Se você quer hospedar um projeto simples feito em Rails, nós o recomendamos. O seu uso é muito simples e a incrível idéia de usar o git como interface para deploy é realmente sensacional. Basta instalar o client do Heroku, dar um "git push" e pronto: a aplicação está no ar!
<h2><a title="Github Issue Tracker" href="http://github.com/blog/411-github-issue-tracker" target="_blank">Github Issue Tracker</a></h2>
Nova funcionalidade no GitHub para facilitar nossas vidas, permitindo informar os "bugs" nos projetos. No link acima, contém o vídeo "I<em>ntroduction to GitHub Issues</em>" para mais detalhes.

Caso já use um Issue Tracker para o seu projeto no github, você pode desabilitá-lo na seção  do <em>Features </em>na aba<em> Admin</em>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>412</wp:post_id>
		<wp:post_date>2009-04-20 01:00:42</wp:post_date>
		<wp:post_date_gmt>2009-04-20 04:00:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>remarkable-jqgrid-no-rails-heroku-e-github-issues</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="jquey"><![CDATA[jquey]]></category>
		<category domain="category" nicename="novidades-da-semana"><![CDATA[novidades da semana]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="ruby-on-rails"><![CDATA[ruby on rails]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Guia de Ruby do Why e Autospec-notification</title>
		<link>http://1up4dev.org/2009/04/guia-de-ruby-do-why-autospec-autotest-notification/</link>
		<pubDate>Mon, 27 Apr 2009 04:00:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=422</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>O comovente guia de Ruby do Why</h2>
Este <a href="http://poignantguide.net/ruby/" target="_blank">livro</a> é sensacional e demonstra exatamente o espírito do Ruby: papo de programador.

<a href="http://1up4dev.org/wp-content/uploads/2009/04/thefoxes-3.png"><img class="aligncenter size-full wp-image-463" title="thefoxes-3" src="http://1up4dev.org/wp-content/uploads/2009/04/thefoxes-3.png" alt="" width="500" height="145" /></a>

O livro é bem divertido. As tirinhas das raposas são ótimas. Várias <a href="http://www.nomedojogo.com/2008/10/28/why%E2%80%99s-poignant-guide-to-ruby-em-portugues/" target="_blank">pessoas</a> <a href="http://akitaonrails.com/2008/5/14/vamos-traduzir-o-why-s-poignant-guide-to-ruby" target="_blank">contribuíram</a> com a tradução para pt-br que está disponível no <a href="http://github.com/carlosbrando/poignant-br/tree/master" target="_blank">Github</a>.

<a href="http://why.nomedojogo.com/" target="_blank">Leitura obrigatória</a>. Chunky bacon!
<h2>Autospec-notification</h2>
O <a href="http://www.nateclark.com/articles/2008/09/17/_autotest_-is-now-_autospec_-how-to-set-up-autospec-for-rspec-and-rails-with-zentest" target="_blank">Autospec</a> é um script gerado pelo <a href="http://rspec.info/" target="_blank">RSpec</a> que utiliza o Autotest para rodar os testes automaticamente a cada alteração no código.

Unindo o útil ao agradável, foi criado o <a href="http://www.mouseoverstudio.com/blog/2008/10/10/autospec-autotest-notification-autospec-notification-e-novidades/" target="_blank">Autospec-notification</a>, que exibe as notificações do autospec no desktop.

<a href="http://1up4dev.org/wp-content/uploads/2009/04/sucesso.png"><img class="aligncenter size-full wp-image-465" title="sucesso" src="http://1up4dev.org/wp-content/uploads/2009/04/sucesso.png" alt="" width="500" height="173" /></a>

Para instalar, comece pela gem ZenTest:
<pre style="padding-left: 30px;">sudo gem install ZenTest</pre>
No linux, instale o Libnotify:
<pre style="padding-left: 30px;">sudo apt-get install libnotify-bin</pre>
Agora instale a gem do autotest-notification:
<pre style="padding-left: 30px;">sudo gem install carlosbrando-autotest-notification --source=http://gems.github.com</pre>
Ative o autotest-notification e rode o autospec no seu projeto:
<pre style="padding-left: 30px;">an-install</pre>
<pre style="padding-left: 30px;">script/autospec</pre>
O código está no <a href="http://github.com/carlosbrando/autotest-notification/tree/master" target="_blank">Github</a>. Escreva seus testes e divirta-se!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>422</wp:post_id>
		<wp:post_date>2009-04-27 01:00:03</wp:post_date>
		<wp:post_date_gmt>2009-04-27 04:00:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>guia-de-ruby-do-why-autospec-autotest-notification</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="novidades-da-semana"><![CDATA[novidades da semana]]></category>
		<category domain="post_tag" nicename="novidades-da-semana"><![CDATA[novidades da semana]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="rspec"><![CDATA[rspec]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="ruby-on-rails"><![CDATA[ruby on rails]]></category>
		<category domain="post_tag" nicename="testes-unitarios"><![CDATA[testes unitários]]></category>
		<category domain="category" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[guia-de-ruby-do-why-bdd-com-cucumber-e-scrume]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Agilidade é a buzzword do momento</title>
		<link>http://1up4dev.org/2009/04/agilidade-e-a-buzzword-do-momento/</link>
		<pubDate>Wed, 22 Apr 2009 14:46:42 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=427</guid>
		<description></description>
		<content:encoded><![CDATA[Nos últimos anos o mercado de TI cresceu exponencialmente. Surgiram desde pequenas empresas especializadas em construir websites até monstruosas fábricas de software com seus contratos milionários. Algumas com orçamento limitado outras com dinheiro jorrando pelos canos. Umas com problemas por falta de organização outras com problemas burocráticos. Bons profissionais vs. equipes de sobrinhos, habilidade técnica contra enxurradas de documentos... muito fracasso, pouco sucesso.
<h2>A meta é coletar as moedas até conseguirmos uma estrela</h2>
Surgiram muitas empresas especializadas em desenvolver software ou que têm um software como produto principal. Normalmente, essas empresas se preocupam apenas em satisfazer os investidores e se esquecem dos clientes. Focam em vender e deixam a qualidade de lado. Prezam pela imagem e ignoram os problemas.

É uma triste realidade que essas empresas tenham mais <a href="http://www.youtube.com/watch?v=R47Xe8kVrv0" target="_blank">executivos</a> do que programadores. Como diz o <a href="http://www.luli.com.br/" target="_blank">Luli Radfahrer</a>, <em>executivos são aqueles seres que se vestem com um pensamento fracassado, usam uma linguagem própria sendo uma mistura de termos que só eles entendem e 20% de palavras em inglês</em>... não vivem os problemas reais da empresa. É como se estivessem em outro mundo: Mario World!

[caption id="attachment_439" align="aligncenter" width="300" caption="O mundo dos executivos: nuvens sorrindo"]<a href="http://1up4dev.org/wp-content/uploads/2009/04/marioland-clean.jpg"><img class="size-medium wp-image-439" title="Mario World" src="http://1up4dev.org/wp-content/uploads/2009/04/marioland-clean-300x188.jpg" alt="" width="300" height="188" /></a>[/caption]

A maioria das empresas que têm problemas com desenvolvimento de software ainda estão vivendo na década de 90. Internet ainda é uma palavra assustadora. Programador é apenas um funcionário que sabe o que significam siglas de informática e sabem mexer no computador. Mudança ainda é encarada como algo arriscado, que deve ser planejado, estudado e aprovado pelo presidente, diretoria e gestores. A palavra da vez é <strong>processo</strong> e seu fiel companheiro é <strong>prazo</strong>. A burocracia é uma amiga que garante que as coisas não fujam de controle. Nesse cenário não há como fugir do waterfall.

O maior problema do waterfall são os papéis: cada um com sua "especialidade". Alguém determina que um <span style="text-decoration: line-through;">infeliz</span> funcionário vai ser responsável por "levantar requisitos". Faz um cursinho de UML e começa a escrever uma quantidade sem fim de Casos de Uso sem ter noção alguma do que seu trabalho afeta no processo. Então a "equipe" começa a ter muito "retrabalho", uma vez que os clientes não estão satisfeitos com o que está sendo entregue. Logo percebem que devem fazer o "levantamento" mais detalhado e passam a engessar ainda mais o processo com reuniões, assinaturas, etc. Conclusão: tempo e dinheiro desperdiçados e nenhum resultado satisfatório.

[caption id="attachment_441" align="aligncenter" width="300" caption="Meu trabalho é digitar 4 8 15 16 23 42 a cada 108 segundos"]<a href="http://1up4dev.org/wp-content/uploads/2009/04/lost_hatch_locke.jpg"><img class="size-medium wp-image-441" title="Lost" src="http://1up4dev.org/wp-content/uploads/2009/04/lost_hatch_locke-300x199.jpg" alt="Seu trabalho é digitar xxx a cada 108 segundos" width="300" height="199" /></a>[/caption]

Falta de foco? Profissionais não qualificados? Processo falho? Não apenas isso: não há comunicação, não há troca de experiências. O waterfall favorece o aparecimento da síndrome do funcionário público: "eu sou gerente: eu <a href="http://www.youtube.com/watch?v=R47Xe8kVrv0" target="_blank">córdeno</a>, não preciso saber programar". As decisões geralmente são tomadas por uma única pessoa. Os projetos seguem o modelo de construção civil. Os profissionais se acomodam pois não veem perspectiva, não conhecem o processo completo, não são ouvidos e por isso não são valorizados.

O foco destas empresas está longe de ser tecnologia. Se concentram em suas <a href="http://migre.me/rwD" target="_blank">buzzwords</a>, processos e reuniões e se esquecem do produto, ou seja, o software. Focam mais na solução do que no problema. Fazendo uma analogia, essas empresas são como um barco furado, onde está entrando água mas há pessoas com baldes para retirá-la e mantê-lo flutuando. Se a agua subir muito, contratam mais pessoas para operar os baldes. Enquanto isso, os executivos ficam acenando como se nada tivesse acontecendo. Quando perguntam se há algum problema, nenhum <span style="text-decoration: line-through;">fdp</span> infeliz tem coragem para falar que o problema é o furo no barco!

As empresas que focam em tecnologia e nos profissionais, tipo o <a href="http://lmgtfy.com/?q=empresas+que+investem+em+tecnologia" target="_blank">Google</a> ou a <a href="http://37signals.com/" target="_blank">37signals</a>, estão se dando bem e mostrando que agilidade não é apenas mais um processo... é algo real e que funciona!
<h2>Agilidade é sair fazendo as coisas de qualquer jeito</h2>
Diante do cenário caótico das empresas, um grupo de profissionais organizou um movimento a fim de unificar as práticas bem sucedidas e tornar o processo de desenvolvimento mais produtivo e pragmático: <a href="http://agilemanifesto.org/" target="_blank">o manifesto ágil</a>. Quem freqüenta esse blog sabe que nós somos fãs e seguidores das práticas ágeis, não porque somos fanáticos e acreditamos somente em uma verdade absoluta, mas por que já sofremos muito com projetos e empresas fracassadas, vivenciamos os problemas que compartilhamos neste blog, passamos noites em claro corrigindo código escrito por maus profissionais, acumulamos horas em reuniões suficiente para tirarmos brevê, tivemos que negociar com cliente, com o chefe, fazer entrevista, contratar, gerenciar, analisar, programar, testar... nós sofremos os problemas do waterfall na pele!

O termo agilidade é bem popular atualmente: "precisamos <strong>agilizar</strong> nosso processo de desenvolvimento". Como divulgação do manifesto ágil é algo muito positivo, pois mais pessoas podem conhecer e utilizar as práticas ágeis. Mas, como toda fama tem seu lado negativo, não seria diferente neste caso. Muitos profissionais "gafanhoto" estão utilizando esse termo como alavancagem profissional. Já tem gerente falando que RUP é ágil, arquiteto defensor de modelagem UML ágil, diagrama ER ágil, modelo de dados ágil, caso de uso ágil, cronograma ágil, etc. Ou seja, estão distorcendo totalmente o propósito e a filosofia da agilidade.

Como disse o <a href="http://gc.blog.br/2008/11/22/agile-indo-para-o-buraco/" target="_blank">Chapiewski</a>, os programadores estão querendo ir direto para a sobremesa e esquecendo de comer seus vegetais. Agile é muito mais do que desenvolver iterativamente, fazer stand-up meetings e planejamentos ágeis. Não dá para ignorar todas as práticas de engenharia de software que realmente fazem com que a produção e mudanças em softwares sejam ágeis, sem contar todos os princípios e práticas que fazem uma diferença enorme.

O mercado que não é bobo já percebeu esse movimento migratório e lançou seus cursos de "Gerenciamento de projetos ágeis com MSProject", "Desenvolvendo aplicações web com agilidade", "Aprenda a programar com JUnit e TDD". Não demorou muito para que uma massa de desenvolvedores colocasse o termo ágil em seus currículos. Pretensiosos demais em achar que um cursinho qualquer pode ensinar todo conceito e técnicas ágeis catalogadas por profissionais com décadas de experiência em desenvolvimento de software.

"Estou aprendendo Ruby on Rails por que o mercado está <a href="http://gc.blog.br/2009/02/15/plano-de-cargos-e-salarios/" target="_blank">pagando bem</a>". do dia para a noite surgiram milhares de especialistas ágeis. O cara que programava em .NET ou Java no modelo tradicional (digitador de código), faz um cursinho rápido e de repente começa a desenvolver aplicações numa tecnologia que exige uma enorme bagagem conceitual. Faz tudo errado, pois não <strong>sabe</strong> realmente o que está fazendo, o projeto fracassa e ainda deixa a tecnologia com má fama. Isso aconteceu com PHP, ASP e está acontecendo com <a href="http://www.mouseoverstudio.com/blog/2009/04/08/nao-deixa-o-mar-te-engolir/" target="_blank">Rails.</a>

Programar é difícil, não é um trabalho para qualquer aventureiro. É preciso <a href="http://akitaonrails.com/2009/04/17/off-topic-devo-fazer-faculdade" target="_blank">estudar</a> muito, se dedicar e principalmente, gostar! Não basta apenas estudar para conseguir uma <a href="http://www.nomedojogo.com/2009/02/17/um-modelo-de-maturidade-para-projetos-rails-e-pratico/" target="_blank">certificação</a> pois não garante nada. Deve-se viver a programação, participar de fóruns, contribuir com projetos open-source, discutir idéias, ser auto-crítico, ler muito, praticar, apreciar as boas práticas e abolir o que não presta...

[caption id="attachment_443" align="aligncenter" width="225" caption="Agilidade é propor soluções simples para os problemas"]<a href="http://1up4dev.org/wp-content/uploads/2009/04/controle-wii-remote.jpg"><img class="size-medium wp-image-443" title="controle-wii-remote" src="http://1up4dev.org/wp-content/uploads/2009/04/controle-wii-remote-225x300.jpg" alt="Agilidade é propor soluções simples para os problemas" width="225" height="300" /></a>[/caption]

Agilidade não é anarquia, não significa "sair fazendo as coisas de qualquer jeito", dizer "não" para documentação, etc. É uma mudança de atitude, uma nova maneira de enfrentar os problemas e propor soluções <a href="http://blog.aspercom.com.br/2008/07/21/hierarquias-sao-inteligentes-nas-pontas/" target="_blank">simples e práticas</a>, é ter foco, é saber fazer mais com menos, é automatizar tarefas, é estar comprometido... agilidade é atitude.
<h2>Contratamos uma consultoria para implantar Scrum</h2>
Scrum é a <em>metodologia</em> da moda. Assim que começou a se popularizar entre a comunidade de desenvolvedores, não demorou muito para o que vários sites e blogs se dedicassem exclusivamente na sua divulgação, apresentando benefícios, artigos, guias, exemplos, certificados para imprimir e pendurar em uma moldura na parede, etc. Logo surgiram as consultorias especializadas em <span style="text-decoration: line-through;">adestramento</span> treinamento e implantação de Scrum nas empresas. Um pouco de política aqui e influência ali até que a INFO Magazine publicasse uma matéria dizendo sua empresa <strong>deveria</strong> usar Scrum como solução para todos os problemas.

Mais uma vez, a falta de foco e maturidade das empresas distorcem tudo. Muitas empresas "compraram" o Scrum como a solução pronta. Bastar treinar os funcionários, comprar blocos de post-it e tudo passa a funcionar bem e gerar lucro. Pagam um curso de "gerenciamento de projetos com Scrum" para os gerentes. Depois apostam todos as fichas em um projeto "piloto". Fazem tudo que manda o manual: reuniões diárias, planing-pocker, quadro com post-its, etc. E o projeto... fracassa!

[caption id="attachment_454" align="aligncenter" width="200" caption="Queimando dinheiro"]<a href="http://1up4dev.org/wp-content/uploads/2009/04/burning_money.jpg"><img class="size-medium wp-image-454" title="burning_money" src="http://1up4dev.org/wp-content/uploads/2009/04/burning_money.jpg" alt="Queimando dinheiro" width="200" height="150" /></a>[/caption]

Então quer dizer que Scrum não funciona? Foi dinheiro desperdiçado? Tanto esforço para nada? Neste caso, devo dizer que sim! Se esqueceram do processo anterior falho, funcionários pouco qualificados e dos líderes sem foco. Escolheram aqueles funcionários mais "experientes" para serem o Scrum Master. Sim, aqueles mesmos que só sabiam escrever casos de uso e diagramas UML. Se esqueceram dos valores, dos princípios, <a href="http://rogerioalcantara.blogspot.com/2009/04/ah-entao-vc-usa-scrum.html" target="_blank">da atitude</a>, do relacionamento com o cliente. O pensamento não mudou, o foco ainda era no processo. Depois de tanto esforço, só deram outro nome o waterfall. Não demorou muito e surgiram os papéis, artefatos, documentos... ou seja, a empresa continua cometendo os mesmos erros!

Não importa a tecnologia ou processo se não souber usá-lo corretamente! E definitivamente Scrum não pode ser encarado como mais um processo bonitinho, com seus papéis, artefatos, bla bla bla. Um processo de software que funciona é aquele onde a equipe está realmente comprometida e tem experiência acumulada para enfrentar e resolver problemas ao longo do desenvolvimento da aplicação. O processo, ou metodologia, será meramente um nome para as práticas que a equipe conhece e utiliza naturalmente.
<h2>Resumo</h2>
Não há ferramenta, metodologia ou processo que substitua a atitude e experiência de um verdadeiro desenvolvedor ágil. Estude, pratique, esteja comprometido, estude denovo, questione-se, estude novamente. <a href="http://smartic.us/2008/09/09/10-things-you-could-be-doing-to-your-code-right-now/" target="_blank">Revise seu código</a>, estude mais um pouco, e principalmente, tenha atitude! <strong>Agilidade não é metodologia, é atitude!</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>427</wp:post_id>
		<wp:post_date>2009-04-22 11:46:42</wp:post_date>
		<wp:post_date_gmt>2009-04-22 14:46:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>agilidade-e-a-buzzword-do-momento</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agilidade"><![CDATA[agilidade]]></category>
		<category domain="post_tag" nicename="pragmatic-waterfall"><![CDATA[pragmatic waterfall]]></category>
		<category domain="category" nicename="processos"><![CDATA[processos]]></category>
		<category domain="category" nicename="questionamento"><![CDATA[questionamento]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="scrum"><![CDATA[scrum]]></category>
		<category domain="category" nicename="waterfall"><![CDATA[waterfall]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078540]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>326</wp:comment_id>
			<wp:comment_author><![CDATA[José Eduardo]]></wp:comment_author>
			<wp:comment_author_email>j.edu.88@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>200.184.168.125</wp:comment_author_IP>
			<wp:comment_date>2009-05-26 20:57:36</wp:comment_date>
			<wp:comment_date_gmt>2009-05-26 23:57:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Parabens pelo post! De fato, vc descreveu com muita exatidão a situação da empresa que trabalho (infelizmente).Continue assim! Esse post ficou otimo.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>125</wp:comment_id>
			<wp:comment_author><![CDATA[Rogério R. Alcântara]]></wp:comment_author>
			<wp:comment_author_email>rogerio.alcantara@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://rogerioalcantara.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>201.6.61.252</wp:comment_author_IP>
			<wp:comment_date>2009-04-23 22:23:05</wp:comment_date>
			<wp:comment_date_gmt>2009-04-24 01:23:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Parabéns Panache!

Um excelente post - além de ser muito bem escrito! =)

Reflete bastante a realidade para diversas empresas.

Acho que há um outro fator que deve ser levado em consideração: o fornecedor querer usar o Scrum da maneira correta, mas esbarrar em clientes retrógrados acostumado com cascata, modelo PMBOK, escopo fechado, que se defendem atras de contratos, que querem tudo o que está "no escopo" (mesmo o que é menos importante), e etc..

A partir daí, surgem soluções discrepantes como "usar cascata com o cliente e em contrato mas Scrum internamente". Tenho a impressão que isso não dá certo. =\

O trauma dos clientes que já sofreram com projetos fracassados é tamanho que para se protegerem, utilizam de artifícios (jurídicos inclusive) que acabam amarrando o fornecedor modelo não-ágil criando, assim, um ciclo vicioso do tipo "projeto não ágil &gt; falha &gt; mais controle &gt; projeto não ágil &gt; falha &gt; mais controle..". É lamentável.

..mas acho que isso é assunto para um outro post, não?! =)

Um abraço e boa sorte!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>126</wp:comment_id>
			<wp:comment_author><![CDATA[Rodrigo Panachi]]></wp:comment_author>
			<wp:comment_author_email>rodrigopanachi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://nobrokenwindow.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>189.102.1.2</wp:comment_author_IP>
			<wp:comment_date>2009-04-24 00:40:45</wp:comment_date>
			<wp:comment_date_gmt>2009-04-24 03:40:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[E ae Rogério!? Obrigado pelo comentário.

Concordo com você. Eu ia citar essa situação, mas lembrei que um dos primeiros posts que escrevi aqui <a href="http://1up4dev.org/2008/05/o-paradoxo-iterativo-incremental-x-confianca/" rel="nofollow">falava exatamente disso</a>.

Mas eu também já vi o oposto: os clientes queriam um contrato mais flexível mas o fornecedor estava tão fechado no waterfall que não cedia: "O contrato é para nossa própria proteção", dizia o diretor. Pensamento de fracassado...

Sucesso!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>jQuery DataTables, GitHub API e links da semana</title>
		<link>http://1up4dev.org/2009/05/jquery-datatables-github-apilinks-semana/</link>
		<pubDate>Mon, 04 May 2009 04:00:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=477</guid>
		<description></description>
		<content:encoded><![CDATA[<h2><a href="http://www.datatables.net/" target="_blank">jQuery DataTables</a></h2>
Nós somos fãs de jQuery pela sua simplicidade e poder de extensão através de plugins. Falando nisso, este plugin torna qualquer tabela &lt;table/&gt; em um "grid" ordenável, pesquisavel e paginável <em>automagicamente</em>.

<a href="http://1up4dev.org/wp-content/uploads/2009/05/datatables.png"><img class="aligncenter size-medium wp-image-490" title="datatables" src="http://1up4dev.org/wp-content/uploads/2009/05/datatables-300x86.png" alt="" width="300" height="86" /></a>

Para usar, basta incluir o plugin na página após o jQuery e executar o script:
<pre>$(document).ready(function() {
    $("id-tabela").dataTable();
}</pre>
No <a href="http://www.datatables.net/" target="_blank">site oficial</a> é possível consultar a documentação, exemplos e a <a href="http://www.datatables.net/plug-ins#language" target="_blank">tradução</a> para pt-br.
<h2><a title="github api take two" href="http://github.com/blog/413-github-api-take-two">GitHub API, version 2</a></h2>
Os caras do GitHub não são fracos não... já faz um tempinho, mas antes tarde do que nunca, anunciaram em seu <a title="GitHub Blog" href="http://github.com/blog">blog</a> a versão 2 do GitHub API. Ela provê acesso à "Repository, User, Commit, Object and Network" e futuramente ao Gist também. Como é a primeira release e ainda estão trabalhando nela, o próprio pessoal do Github pede ajuda a "desbravadores" e que abram tickets, caso encontrem algo. Documentação você encontra em  <a title="GitHub API Documentation" href="http://develop.github.com">develop.github.com</a>.
<h2>Links da semana</h2>
<a href="http://www.desenvolvimentoparaweb.com/usabilidade/8-caracteristicas-de-user-interfaces-ui-de-sucesso/" target="_blank">8 características de User Interfaces (UI) de sucesso</a>

<a href="http://github.com/ryanb/nifty-generators/tree/master" target="_blank">Nifty Generators para Ruby on Rails</a>

<a href="http://olabini.com/blog/2009/04/jruby-on-rails-on-google-app-engine/" target="_blank">JRuby on Rails no Google App Engine</a>

<a href="http://www.ajaxianos.com.br/2008/10/grid-com-ordenacao-e-paginacao-animados/" target="_blank">Grid com ordenação e paginação animados</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>477</wp:post_id>
		<wp:post_date>2009-05-04 01:00:27</wp:post_date>
		<wp:post_date_gmt>2009-05-04 04:00:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jquery-datatables-github-apilinks-semana</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="github"><![CDATA[github]]></category>
		<category domain="post_tag" nicename="jquey"><![CDATA[jquey]]></category>
		<category domain="category" nicename="novidades-da-semana"><![CDATA[novidades da semana]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078523]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>144</wp:comment_id>
			<wp:comment_author><![CDATA[Tárcio Zemel]]></wp:comment_author>
			<wp:comment_author_email>tarciozemel@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://desenvolvimentoparaweb.com</wp:comment_author_url>
			<wp:comment_author_IP>201.39.128.22</wp:comment_author_IP>
			<wp:comment_date>2009-05-04 09:30:20</wp:comment_date>
			<wp:comment_date_gmt>2009-05-04 12:30:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muito obrigado pela indicação e pelo desenvolvimento para web constar nos seus "Links da semana"!

Abraços!  :-D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>145</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email>roger.leite@1up4dev.org</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>200.170.212.34</wp:comment_author_IP>
			<wp:comment_date>2009-05-04 09:36:28</wp:comment_date>
			<wp:comment_date_gmt>2009-05-04 12:36:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Olá Tárcio! Nós que agradecemos pelo ótimo post! Continue com o ótimo trampo!

Sucesso!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Gerando cheat sheet para os snippets do gedit</title>
		<link>http://1up4dev.org/2009/05/gerando-cheat-sheet-para-os-snippets-do-gedit/</link>
		<pubDate>Tue, 05 May 2009 08:00:37 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=482</guid>
		<description></description>
		<content:encoded><![CDATA[Acredito que a maioria de vocês conhecem e/ou já usaram as famosas <em>cheat sheets</em> (tradução para "cola"?) para algo. Costumo usá-las quando quero fixar algum conceito novo ou simplesmente para consultas rápidas. Com o pai Google, é possível encontrar os mais diversos tipos: <a title="Pesquisa no Google para cheat sheet HTML" href="http://www.google.com.br/search?q=cheat+sheet+HTML&amp;ie=utf-8&amp;oe=utf-8&amp;aq=t&amp;rls=com.ubuntu:en-US:unofficial&amp;client=firefox-a">HTML</a>, <a title="Pesquisa no Google para cheat sheet Ruby" href="http://www.google.com.br/search?hl=pt-BR&amp;client=firefox-a&amp;rls=com.ubuntu%3Aen-US%3Aunofficial&amp;hs=Ejh&amp;q=cheat+sheet+Ruby&amp;btnG=Pesquisar&amp;meta=">Ruby</a>, <a title="Pesquisa no Google para cheat sheet Ruby on Rails" href="http://www.google.com.br/search?hl=pt-BR&amp;client=firefox-a&amp;rls=com.ubuntu%3Aen-US%3Aunofficial&amp;hs=WQ2&amp;q=cheat+sheet+Ruby+on+Rails&amp;btnG=Pesquisar&amp;meta=">Ruby on Rails</a>, <a title="Pesquisa no Google para cheat sheet Shell Script" href="http://www.google.com.br/search?hl=pt-BR&amp;client=firefox-a&amp;rls=com.ubuntu%3Aen-US%3Aunofficial&amp;hs=h7M&amp;q=cheat+sheet+Shell+Script&amp;btnG=Pesquisar&amp;meta=">Shell Script</a>... etc.

Atualmente venho praticando Ruby, sendo o gedit - "tunado" com vários plugins - o meu maior aliado. Um dos plugins que mais me ajuda é o <a title="Link para o home do Snippets" href="http://live.gnome.org/Gedit/Plugins/Snippets">Snippets</a> e neste <a title="Post sobre o gedit snippets" href="http://cassiomarques.wordpress.com/2008/09/16/gedit-snippets/">post do Cássio Marques</a>, você encontra uma breve descrição do que é, e um link para snippets de exemplo.

Tudo isso foi só pra contar o que me levou a criar a gem gedit-snippets-tool. Com ela é possível criar <em>cheat sheets</em> dos seus snippets. Supondo que você tenha ruby e rubygem instalados, seu modo de uso é muito simples. Para instalar a gem execute:
<pre><code>sudo gem install rogerleite-gedit-snippets-tool -s http://gems.github.com</code></pre>
Após a instalação, para gerar um <em>cheat sheet</em> com todos os seus snippets, execute:
<pre><code>gedit-snippets-tool -cs &gt; ~/mycheatsheet.xhtml</code></pre>
Caso tenha muitos snippets, e deseja criar um cheat sheet somente com Ruby e Ruby on Rails por exemplo, execute:
<pre><code>gedit-snippets-tool -cs ruby* &gt; ~/mycheatsheet.xhtml</code></pre>
[caption id="attachment_484" align="aligncenter" width="291" caption="Meu cheat sheet de exemplo"]<a href="http://1up4dev.org/wp-content/uploads/2009/04/cheatsheet-example.png"><img class="size-medium wp-image-484" title="cheatsheet example" src="http://1up4dev.org/wp-content/uploads/2009/04/cheatsheet-example-291x300.png" alt="Meu cheat sheet de exemplo" width="291" height="300" /></a>[/caption]

Levando em conta que a gem foi feita em três dias e focamos somente o necessário para lançarmos uma versão 0.x "em produção", vamos as limitações:
<ul>
	<li>O gedit-snippets-tool lê os snippets (arquivos XML) que estão na pasta "home". Constatei que o gedit "limpo" logo após habilitar o plugin Snippets, guarda os snippets na pasta "/usr/share/gedit-2/plugins/snippets/". Bom, se for este o seu caso, peço a gentileza de copiá-los para a "home" em "{home-folder}/.gnome2/gedit/snippets/".</li>
	<li>O template usado para gerar a página xhtml está bem "rústico". O lado bom disso é que está bem fácil de alterá-lo. Vejam o código do template (via gist, leitores de RSS, sorry):</li>
</ul>
<script src="http://gist.github.com/106439.js"></script>

Quem tiver sugestões (<strong>inclusive</strong> de template), podem forkar o projeto ou se quiser, deixe um comentário que eu entro em contato.
<h3>Sobre o Desenvolvimento</h3>
Assim que tive a idéia, análisei o que seria necessário, e resumindo:
<ul>
	<li>Ler os XMLs dos snippets;</li>
	<li>Uma engine para gerar páginas através de "templates";</li>
	<li>Fazer uma gem executável... pois assim é mais fácil e rápido para quem quiser usá-la;</li>
</ul>
A parte do XML é fácil, pois até já fiz coisa parecida <a title="Link de como usei o REXML do Ruby" href="http://1up4dev.org/2008/08/tpw-colocando-dicas-em-pratica/">antes</a>. A parte da engine para templates, o pai Google me guiou a uma ótima, chamada <a href="http://www.kuwata-lab.com/erubis/">Erubis</a>, que é uma gem e torna as coisas muito mais fáceis.

Para criar o esqueleto da gem, usei o <a href="http://github.com/dcrec1/gemhub">gemhub</a> do <a href="http://www.mouseoverstudio.com/blog/2008/10/27/criando-gems-com-gemhub-nunca-foi-tao-simples/">Diego Carrion</a>, que facilitou muito o meu trabalho, sem contar a ajuda que me deu na hora de publicar o gemspec no github... valeu truta! Bom, o resto foram três noites programando e aprendendo a fazer a minha primeira gem. Quem quiser participar estão todos convidados a "forka-lo" no <a title="gedit-snippets-tool home" href="http://github.com/rogerleite/gedit-snippets-tool">github</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>482</wp:post_id>
		<wp:post_date>2009-05-05 05:00:37</wp:post_date>
		<wp:post_date_gmt>2009-05-05 08:00:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gerando-cheat-sheet-para-os-snippets-do-gedit</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gem"><![CDATA[gem]]></category>
		<category domain="category" nicename="projetos"><![CDATA[projetos]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078466]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>150</wp:comment_id>
			<wp:comment_author><![CDATA[Diego Carrion]]></wp:comment_author>
			<wp:comment_author_email>dc.rec1@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mouseoverstudio.com/blog/</wp:comment_author_url>
			<wp:comment_author_IP>189.20.40.106</wp:comment_author_IP>
			<wp:comment_date>2009-05-05 15:58:42</wp:comment_date>
			<wp:comment_date_gmt>2009-05-05 18:58:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Gostei da gem, ja utilizei ela e aqui no trabalho esta ajudando a tudo mundo.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Agendando tarefas em aplicações Rails com rufus-scheduler</title>
		<link>http://1up4dev.org/2009/05/agendando-tarefas-em-aplicacoes-rails-com-rufus-scheduler/</link>
		<pubDate>Sun, 31 May 2009 18:33:06 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=501</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://rufus.rubyforge.org/" target="_blank">Rufus</a> é um conjunto de gems utilizado para <a href="http://pt.wikipedia.org/wiki/Fluxo_de_Trabalho" target="_blank">Workflow</a> e <a href="http://pt.wikipedia.org/wiki/Business_Process_Management" target="_blank">BPM</a>. O <a href="http://rufus.rubyforge.org/rufus-scheduler/" target="_blank">rufus-scheduler</a> é a gem responsável pelo agendamento e execução de tarefas (jobs). Se você programa em Java e conhece o <a href="http://www.opensymphony.com/quartz/wikidocs/QuickStart.html" target="_blank">Quartz</a> não vai ter dificuldade em utilizá-la.

Instalação:
<pre>sudo gem install rufus-scheduler</pre>
Utilização:
<pre>require 'rubygems'
require 'rufus/scheduler'

scheduler = Rufus::Scheduler.start_new

scheduler.every '5m' do
  puts 'Executando a cada 5 minutos'
end

scheduler.schedule '0 18 * * *' do
  puts 'Executando todos os dias as 18h'
end</pre>
Simples assim! Consulte a <a href="http://rufus.rubyforge.org/rufus-scheduler/" target="_blank">documentação</a> oficial ou <a href="http://github.com/jmettraux/rufus-scheduler/tree/master" target="_blank">contribua com o código</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>501</wp:post_id>
		<wp:post_date>2009-05-31 15:33:06</wp:post_date>
		<wp:post_date_gmt>2009-05-31 18:33:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>agendando-tarefas-em-aplicacoes-rails-com-rufus-scheduler</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gem"><![CDATA[gem]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="ruby-on-rails"><![CDATA[ruby on rails]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077354]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>351</wp:comment_id>
			<wp:comment_author><![CDATA[Rafael Souza]]></wp:comment_author>
			<wp:comment_author_email>rafael.ssouza@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://rafaelss.com/</wp:comment_author_url>
			<wp:comment_author_IP>187.26.191.232</wp:comment_author_IP>
			<wp:comment_date>2009-05-31 18:45:11</wp:comment_date>
			<wp:comment_date_gmt>2009-05-31 21:45:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Eu precisei do rufus-scheduler para agendar a limpeza de arquivos de cache usando uma data determinada, funciona muito bem, recomendo!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Paginação no Rails com will_paginate e Ajax de modo fácil</title>
		<link>http://1up4dev.org/2009/07/paginacao-no-rails-com-will_paginate-e-ajax-de-modo-facil/</link>
		<pubDate>Mon, 13 Jul 2009 03:30:48 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=503</guid>
		<description></description>
		<content:encoded><![CDATA[Paginação é um recurso simples e indispensável em qualquer aplicação séria. Em se tratando de Rails, a solução mais popular é a gem <a href="http://github.com/mislav/will_paginate/tree/master" target="_blank">WillPaginate</a> que basicamente adiciona o método "paginate_" aos models do ActiveRecord e fornece um helper para renderização dos links da paginação nas views.

Instalando a gem:
<pre>sudo gem install will_paginate</pre>
Para utilizar na aplicação, adicione no final do <code>config/environment.rb</code>:
<pre>require 'will_paginate'</pre>
Altere o controller para utilizar paginação:
<pre>def index
  @posts = Post.paginate :all, :page =&gt; params[:page], :per_page =&gt; 10
end</pre>
E adicione os links da paginação na view:
<pre>&lt;%= will_paginate @posts %&gt;</pre>
Pronto! Ao clicar nos links da paginação o parâmetro "page" será incluído automaticamente na requisição.

<a href="http://1up4dev.org/wp-content/uploads/2009/07/posts.png"><img class="alignnone size-medium wp-image-509" title="posts" src="http://1up4dev.org/wp-content/uploads/2009/07/posts-300x253.png" alt="" width="300" height="253" /></a>
<h2>Legal, mas cadê o "ajax"?</h2>
Por padrão o WillPaginate não se preocupa com isso. O próprio desenvolvedor <a href="http://wiki.github.com/mislav/will_paginate/ajax-pagination" target="_blank">recomenda usar javascript</a> para interceptar o "click" dos links e renderizar o resultado na mesma página.

Outra alternativa seria estender a classe responsável por renderizar os links da paginação para utilizar requisições com ajax.

Inclua em <code>app/helpers</code> o arquivo <code>ajax_will_paginate.rb</code> com o código:
<pre>class AjaxWillPaginate &lt; WillPaginate::LinkRenderer
  def prepare(collection, options, template)
    @update = options[:update]
    super
  end
  protected
  def page_link(page, text, attributes = {})
    @template.link_to_remote(text, {
      :url     =&gt; url_for(page),
      :method  =&gt; :get,
      :update =&gt; @update
    })
  end
end</pre>
Então adicione no final do arquivo <code>config/environment.rb</code>:
<pre>  WillPaginate::ViewHelpers.pagination_options[:renderer] = 'AjaxWillPaginate'</pre>
E altere a chamada do helper na view para:
<pre>&lt;%= will_paginate @posts, :update =&gt; 'div_principal' %&gt;</pre>
Informe na opção <code>:update</code> o Id de um objeto html que contenha todo o conteúdo da paginação que será substituído nas requisições seguintes.

É importante lembrar que esta solução altera o comportamento de todos os helpers de paginação da aplicação, por isso deve ser utilizada com cautela. <a href="http://www.botvector.net/2008/08/willpaginate-on-ajax.html" target="_blank">Outras</a> <a href="http://weblog.redlinesoftware.com/2008/1/30/willpaginate-and-remote-links" target="_blank">soluções</a> parecidas podem ser encontradas <a href="http://www.google.com.br/search?q=ajax+will+paginate" target="_blank">aqui</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>503</wp:post_id>
		<wp:post_date>2009-07-13 00:30:48</wp:post_date>
		<wp:post_date_gmt>2009-07-13 03:30:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>paginacao-no-rails-com-will_paginate-e-ajax-de-modo-facil</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gem"><![CDATA[gem]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="ruby-on-rails"><![CDATA[ruby on rails]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077941]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>447</wp:comment_id>
			<wp:comment_author><![CDATA[andre.dallacorte]]></wp:comment_author>
			<wp:comment_author_email>andre.dallacorte@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://andreonrails.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>187.23.115.180</wp:comment_author_IP>
			<wp:comment_date>2010-03-20 15:01:37</wp:comment_date>
			<wp:comment_date_gmt>2010-03-20 18:01:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Valeu, resolveu meus problemas!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>446</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention 1up4Developers » Blog Archive » Paginação no Rails com will_paginate e Ajax de modo fácil -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/tb/bit.ly/7sKNfP</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.58</wp:comment_author_IP>
			<wp:comment_date>2010-01-25 19:50:44</wp:comment_date>
			<wp:comment_date_gmt>2010-01-25 22:50:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Lucas Catón and Andre Ferraro, André Moreira . André Moreira  said: Paginação com #WillPaginate e #Ajax de modo fácil :-O http://bit.ly/7sKNfP #Rails (via @lucascaton) Ahhh assim tá!!! [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>526</wp:comment_id>
			<wp:comment_author><![CDATA[mairon]]></wp:comment_author>
			<wp:comment_author_email>maironcontatos@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://maironbrasil.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>186.16.100.27</wp:comment_author_IP>
			<wp:comment_date>2010-10-27 14:23:52</wp:comment_date>
			<wp:comment_date_gmt>2010-10-27 17:23:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[opa muito massa soh uma divida

eu tentei usar o will_paginate com ajax  funcionou e tal porem quando eu coloquei em producao ele da um erro no aquivo 
environment.erb

na linha do Paginate vc sabe pq ???

abraco parabes pelo post]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>527</wp:comment_id>
			<wp:comment_author><![CDATA[mairon]]></wp:comment_author>
			<wp:comment_author_email>maironcontatos@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://maironbrasil.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>186.16.100.27</wp:comment_author_IP>
			<wp:comment_date>2010-10-27 15:30:48</wp:comment_date>
			<wp:comment_date_gmt>2010-10-27 18:30:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[estava faltando um plugin neh heheheh

abraco

valeu]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Cuidado com Casos de Uso</title>
		<link>http://1up4dev.org/2009/07/cuidado-com-casos-de-uso/</link>
		<pubDate>Tue, 21 Jul 2009 09:45:58 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=516</guid>
		<description></description>
		<content:encoded><![CDATA[Na Engenharia de Software, um caso de uso (ou <em>use case</em>) é um tipo de classificador representando uma unidade funcional coerente provida pelo sistema, subsistema, ou classe manifestada por seqüências de mensagens intercambiáveis entre os sistemas e um ou mais atores. Pode ser representado por uma elipse contendo, internamente, o nome do caso de uso. (fonte: <a href="http://pt.wikipedia.org/wiki/Caso_de_uso">Wikipédia</a>)

A própria explicação do Caso de Uso demonstra o que costumam ser na prática, ou seja, um monte de <em>buzzwords</em> para enganar o usuário e levar a sua assinatura. Este por sinal, só é citado no segundo parágrafo...
<h2>É uma cilada Bino!!!</h2>
[caption id="attachment_525" align="aligncenter" width="360" caption="Caso de Uso!?! Pode ser uma cilada Bino!"]<a href="http://pt.wikipedia.org/wiki/Carga_Pesada"><img class="size-full wp-image-525" title="Caso de Uso!?! Pode ser uma cilada Bino!" src="http://1up4dev.org/wp-content/uploads/2009/07/cilada_bino.jpg" alt="" width="360" height="120" /></a>[/caption]

Pontos negativos que podem tornar numa cilada:
<ul>
	<li>Não tem público definido. Casos de Uso são feitos para os analistas, desenvolvedores, testadores e as vezes para o usuário.</li>
	<li>Casos de Uso não compilam. O usuário quer um sistema e não papéis para assinar.</li>
	<li>Não traz o famoso ROI, traduzindo, retorno de investimento. Já vi muitos projetos de "anos em análise", e no final, tinham uma bíblia inútil junto com um grande rombo nas contas.</li>
	<li>Difícil de manter atualizado. É natural que as coisas mudem, e a cada mudança ter que atualizar quilos de documentos, não é prático e muito caro.</li>
	<li>Pelo fato de terem um público abrangente, é consumido muito tempo com detalhes inúteis, como diagramas de "tudo", que não ajudam em nada no desenvolvimento. Mais um item que consome tempo, recurso e muito dinheiro.</li>
</ul>
A lista pode continuar fácil, mas devemos ir para a parte que interessa:
<h2>Como corresponder a expectativa do usuário?</h2>
Vou colocar o que está dando certo para mim. Caso encontrem alguma semelhança com o capítulo 7 do <a href="http://www.pragprog.com/titles/tpp/the-pragmatic-programmer">Pragmatic Programmer</a>, não estranhem, foi de lá mesmo que eu me "inspirei".

Nada melhor do que a dica 51 (uma boa idéia!) para começar:
<p style="padding-left: 30px;"><em>Don't gather requirements -- Dig for them</em></p>

Numa tradução livre e tosca, colocaria assim:
<p style="padding-left: 30px;">Não reuna requisitos, cave-os!</p>

<ul>
	<li>Este negócio de "cavar", é algo como: descobrir por que o usuário faz, e não somente como. Descobrindo o por que, você consegue sugerir maneiras diferentes de como fazer. Isso nos leva a próxima dica.</li>
	<li>Lembre-se que, requisitos não são arquitetura, nem design, muito menos interface do usuário. Requisitos são necessidades!</li>
	<li>Não seja escravo de nenhuma anotação. Use o melhor método que se comunica com o seu público. No meu caso, papel e caneta, com rascunhos da futura tela, já está funcionando e bem.</li>
	<li>Não ter medo de sugerir novas idéias. Acredito que se dependesse da maioria dos usuários, todos os sistemas teriam cara de Excel! :D Com o porque em mente, fica mais fácil sugerir funcionalidades como filtros, layout etc.</li>
	<li><em>Some things are better done, than described.</em> -&gt; Algumas coisas são melhores feitas do que descritas. Pra mim, esta dica tem funcionado com reformulação de telas, algum "filtro maluco" etc.</li>
</ul>
Sei que este post é muito "abstrato", rápido e sem referência nenhuma, mas a idéia em si é causar uma reflexão em ti, sobre o modo que tu trabalha. Hoje, ele é prático? o cliente está satisfeito com resultado? o cliente está satisfeito com a velocidade, desde a análise a concepção? está havendo desperdício de verba?

Estas perguntas são interessantes, e sempre devem ser feitas. Por mais que o software seja problemático, se conseguirmos corresponder a expectativa do usuário, teremos mais um cliente satisfeito na carteira.

O tema Caso de Uso, é polêmico, e não quero causar <em>flame</em>. Pra cada ambiente, equipe, produto/projeto existe uma maneira diferente de trabalhar. O que espero evitar, são aqueles papéis inúteis, com: "se a ação teve sucesso, deve mostrar ok" ... bah!

Por sinal, um dos <a href="http://rafael.adm.br/p/os-top-cinco-erros-nao-tecnicos-cometidos-por-desenvolvedores/">cinco grandes erros não técnicos, cometidos por programadores</a> (<a href="http://www.makinggoodsoftware.com/2009/07/07/5-top-non-technical-mistakes-made-by-programmers/">original aqui</a>) é: Esquecer do usuário. Lembre disto! ;)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>516</wp:post_id>
		<wp:post_date>2009-07-21 06:45:58</wp:post_date>
		<wp:post_date_gmt>2009-07-21 09:45:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cuidado-com-casos-de-uso</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>413</wp:comment_id>
			<wp:comment_author><![CDATA[1up4Developers &raquo; Blog Archive &raquo; Ruby on Rails: quando a linguagem de programação faz diferença!]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2009/08/ruby-on-rails-quando-a-linguagem-de-programacao-faz-diferenca/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2009-08-18 08:26:24</wp:comment_date>
			<wp:comment_date_gmt>2009-08-18 11:26:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] sistema para integração. No começo a novidade até parece ser uma boa idéia, mas logo você vai descobrir que o que realmente importa é ouvir os problemas dos [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>454</wp:comment_id>
			<wp:comment_author><![CDATA[5 top non-technical mistakes made by programmers | Making Good Software | the leading lady]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://leading-lady.weblog.ro/2010/06/17/5-top-non-technical-mistakes-made-by-programmers-making-good-software/</wp:comment_author_url>
			<wp:comment_author_IP>217.156.103.70</wp:comment_author_IP>
			<wp:comment_date>2010-06-17 10:47:54</wp:comment_date>
			<wp:comment_date_gmt>2010-06-17 13:47:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 1up4Developers » Blog Archive » Cuidado com Casos de Uso [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Ruby: quando a linguagem de programação faz diferença!</title>
		<link>http://1up4dev.org/2009/08/ruby-quando-a-linguagem-de-programacao-faz-diferenca/</link>
		<pubDate>Tue, 18 Aug 2009 11:25:58 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=545</guid>
		<description></description>
		<content:encoded><![CDATA[Pretendo neste post falar um pouco da minha evolução na programação e como Ruby e Rails agregaram mais conhecimento e me tornaram um melhor desenvolvedor.

A gente se forma na <a href="http://gc.blog.br/2009/05/18/o-que-eu-acho-sobre-faculdades-de-informatica/" target="_blank">faculdade</a> e de repente estamos trabalhando como programador em alguma empresa de <a href="http://1up4dev.org/2008/10/software-e-sobre-investimento/" target="_blank">software</a>. A primeira coisa que você vai concluir é que <span style="text-decoration: line-through;">nada</span> a maioria das coisas que foram ensinadas na <a href="http://akitaonrails.com/2009/04/17/off-topic-devo-fazer-faculdade" target="_blank">faculdade</a> não se aplicam na vida real. Triste realidade...

Mas como um bom programador (que você é) logo começará a se questionar e se interessar por novos assuntos, aprender novos conceitos e técnicas de programação, pois você não se sentirá <a href="http://1up4dev.org/2008/06/a-importancia-de-estudar-constantemente/" target="_blank">confortável</a> fazendo as mesmas tarefas repetitivas ou que não sejam otimizadas.
<h2>Orientação a objetos</h2>
Nada de cachorrinhos ou pessoas com ações como andar, comer, etc. No mundo real, seus problemas são faturas, notas fiscais, relatórios, importadores de arquivos, planilhas... e por aí vai. Seu primeiro desafio será de entender a orientação a objetos de verdade. Mas não se preocupe se isto demorar um pouco pois logo a "lâmpada" acenderá e tudo ficará <a href="http://domaindrivendesign.org/" target="_blank">claro como o dia</a>.
<h2>Linguagem e frameworks</h2>
Agora você consegue modelar os objetos da sua aplicação mas se depara com assuntos técnicos que podem ser solucionados prontamente utilizando-se <a href="http://guilher.me/inovacao/frameworks-ageis-para-projetos-de-web20/" target="_blank">frameworks</a> e alguns recursos avançados da linguagem em questão. Logo você estará visitando os sites da documentação do Struts, do Hibernate, do Ant... e descobrirá que o nome <a href="http://www.apache.org/" target="_blank">Apache</a>, além de tribo indígena, é muito mais do que um servidor Web. Após muitas provas de conceito e algumas noites sem dormir, você será um programador muito produtivo e confiante.
<h2>Análise e documentação</h2>
Parabéns! Aqui você já pode ser considerado um desenvolvedor. Logo seu destaque na equipe será recompensado com mais trabalho <span style="text-decoration: line-through;">de corno</span> desafiador. Nesta fase sua empresa se parece com uma <a href="http://1up4dev.org/2009/04/agilidade-e-a-buzzword-do-momento/" target="_blank">padaria</a>: "Me vê meio quilo do relatório X", "Faz dois webservices pra viagem!", "Aí, saindo uma fornada de casos de uso...", etc. Logo <a href="http://1up4dev.org/2008/11/os-guardioes-da-cascata/" target="_blank">alguém</a> tem a brilhante <a href="http://1up4dev.org/2008/11/arquiteto-cascateiro/" target="_blank">idéia</a> de "documentar" tudo desde uma simples alteração no CSS do sistema até complexos e numerosos <a href="http://blog.fragmental.com.br/2008/07/25/uh-eme-ele/" target="_blank">diagramas</a> e notações daquele novo sistema para integração. No começo a novidade até parece ser uma boa idéia, mas logo você vai <a href="http://1up4dev.org/2009/07/cuidado-com-casos-de-uso/" target="_blank">descobrir</a> que o que realmente importa é <a href="http://1up4dev.org/2008/11/foco-no-problema/" target="_blank">ouvir os problemas dos clientes</a>.
<h2>Testes</h2>
Se você não teve a sorte de ser orientado desde o começo da sua carreira sobre desenvolvimento guiado por testes, você aprende a importância de testes da melhor maneira possível: <a href="http://www.nomedojogo.com/2009/04/06/so-os-imaturos-nao-testam/" target="_blank">tomando na cabeça</a>! Os problemas começam a ficar mais claros. Você fica mais focado na tarefa que está desempenhando e felizmente também cresce profissionalmente com este aprendizado. Você se pergunta como conseguia desenvolver sem testes e por que a linguagem que você <a href="http://gc.blog.br/2008/10/19/java-e-ruim/" target="_blank">utiliza</a> não tem um suporte mais "nativo" a testes.
<h2>Metodologia</h2>
No decorrer da sua experiência você tentará desempenhar suas atividades de <a href="http://1up4dev.org/2008/10/a-perpetuacao-da-especie/" target="_blank">várias maneiras</a>. Quando você faz de tudo um pouco acha que o melhor seria fazer apenas uma tarefa específica mas depois descobre que estava enganado. Neste ponto você provavelmente já experimentou pelo menos duas metodologias de desenvolvimento e saberá identificar as vantagens e <a href="http://1up4dev.org/2008/06/guerrilha-agile-parte-1/" target="_blank">desvantagens</a> em cada uma.
<h2>Agilidade</h2>
Felizmente sua <a href="http://1up4dev.org/2009/01/tpw-dicas-para-a-qualidade-do-software/" target="_blank">experiência</a> o guia para um caminho mais <a href="http://1up4dev.org/2008/12/agilidade-cascateira/" target="_blank">ágil</a>. Após aprender e aplicar os mandamentos do <a href="http://agilemanifesto.org/" target="_blank">manifesto ágil</a> e aprimorar seus conceitos e habilidades técnicas, desenvolver aplicações torna-se uma tarefa "natural" que você desempenha com fluência independente da linguagem ou tecnologia utilizada. Suas maiores conquistas se resumem em conseguir contornar um problema tecnológico ou limitação da linguagem, negociar o escopo do projeto com o cliente, implementar a maior cobertura de testes possíveis, <a href="http://1up4dev.org/2009/02/tpw-testando-sistemas-legados-automatizando-build/" target="_blank">automatizar</a> processos durante o desenvolvimento, etc.

Neste ponto você começa a se questionar: o que devo fazer agora para <a href="http://akitaonrails.com/2009/07/23/tradu--o-o-que-faz-um-bom-programador" target="_blank">evoluir</a> profissionalmente?
<h2>Ruby!</h2>
Eis que você conhece Ruby e Rails. A linguagem parece estranha a primeira vista mas após algum tempo dedicado e muito estudo você descobre que é uma ferramenta muito poderosa e produtiva, onde você pode "fluir" com seu desenvolvimento. Você pensa no que quer fazer e faz! Escreve sua "feature", implementa e roda! Simples e <a href="http://1up4dev.org/2009/04/business-bingo-generator/" target="_blank">divertido</a>!

Ruby e Rails vieram suprir uma necessidade e/ou carência dos desenvolvedores por <a href="http://www.nomedojogo.com/2009/05/06/como-ruby-on-rails-pode-o-tornar-um-programador-pior/" target="_blank">simplicidade</a>. Até seu surgimento, desenvolver aplicações nas linguagens populares do mercado era uma tarefa complicada e trabalhosa. Ruby é uma linguagem poderosa. Rails é simples e muito produtivo. Combinação perfeita!

O que você tá <a href="http://pt.wikipedia.org/wiki/Procrastinar" target="_blank">esperando</a>? <a href="http://why.nomedojogo.com/" target="_blank">Comece</a> agora <a href="http://akitaonrails.com/" target="_blank">mesmo</a> a <a href="http://www.rubyinside.com.br/" target="_blank">estudar</a> <a href="http://www.ruby-lang.org/" target="_blank">Ruby</a> e <a href="http://www.rubyonrails.pro.br/" target="_blank">Rails</a> e seja feliz!

UPDATE: para não causar confusão, alterei o título. Lembre-se: Ruby é linguagem e Rails é framework!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>545</wp:post_id>
		<wp:post_date>2009-08-18 08:25:58</wp:post_date>
		<wp:post_date_gmt>2009-08-18 11:25:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby-quando-a-linguagem-de-programacao-faz-diferenca</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agilidade"><![CDATA[agilidade]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="ruby-on-rails"><![CDATA[ruby on rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[ruby-on-rails-quando-a-linguagem-de-programacao-faz-diferenca]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078582]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>416</wp:comment_id>
			<wp:comment_author><![CDATA[Luiz Gustavo]]></wp:comment_author>
			<wp:comment_author_email>luizgr28@ig.com.br</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>200.221.128.129</wp:comment_author_IP>
			<wp:comment_date>2009-08-24 18:23:49</wp:comment_date>
			<wp:comment_date_gmt>2009-08-24 21:23:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bom o post, só não concordo com: "a maioria das coisas que foram ensinadas na faculdade não se aplicam na vida real. Triste realidade". Faculdade ensina conceito e teoria, acho muito correto que continuem ensinando isso, quem sabe os conceitos, entende a pratica em um instante.
Vocês deveriam parar de falar mau das faculdades, é por isso que tem um monte de gente trabalhando por ai sem noção nenhuma de conceito e acham tão dificil entender as coisas, afinal, acham que não precisam entrar em uma faculdade para aprender com todos falam que elas são uma bosta.
De resto, concordo, estou aprendendo rails tb.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>415</wp:comment_id>
			<wp:comment_author><![CDATA[links for 2009-08-23 &laquo; pabloidz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://pabloidz.wordpress.com/2009/08/23/links-for-2009-08-23/</wp:comment_author_url>
			<wp:comment_author_IP>72.233.96.143</wp:comment_author_IP>
			<wp:comment_date>2009-08-23 09:02:24</wp:comment_date>
			<wp:comment_date_gmt>2009-08-23 12:02:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Ruby on Rails: quando a linguagem de programação faz diferença! 1up4Developers (tags: ruby learning career) [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>417</wp:comment_id>
			<wp:comment_author><![CDATA[Lucas]]></wp:comment_author>
			<wp:comment_author_email>lsimaocosta@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>187.41.136.82</wp:comment_author_IP>
			<wp:comment_date>2009-09-18 15:25:46</wp:comment_date>
			<wp:comment_date_gmt>2009-09-18 18:25:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Também acredito que linguagens de scripting venham a evoluir a visão de agilidade hj em nosso contexto como desenvolvedores. Faço apenas algumas resalvas: 1º) Faculdade ou Universidade em áreas de Bacharelado, e.g Ciênc. da Computação, não tem e nem devem ter foco no mercado. Há necessidade de fundamentação teória, caso contrário, como poderei ser convicto na escolha de uma linguagem p/ minha necessidade?? Djando com python, ruby com rails ???? 2º) A onda de linguagens dinâmicas cria uma série de programadores estúpidos que não se preucupam em estudar e nem sabem conceitos básico de SO, Redes, Linguagens, Segurança, ES etc ... e acabam sujando a imagem da tecnologia ... Exemplo: ASP e PHP
Eu não programo em ruby, optei por estudar uma linguagem chamada groovy e um framework chamado Grails, escrito em groovy]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Rails Summit 2009</title>
		<link>http://1up4dev.org/2009/10/rails-summit-2009/</link>
		<pubDate>Fri, 23 Oct 2009 13:21:22 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=558</guid>
		<description></description>
		<content:encoded><![CDATA[Estamos de volta depois de algumas semanas de correria e muito trabalho, o que nos impediu de postar sobre vários assuntos atuais e experiências recentes. Também migramos de empresa. Agora o <a href="http://1up4dev.org/author/rogerbarreto/">Roger</a> e eu estamos trabalhando em uma empresa maior, focada em conteúdo digital, desenvolvendo aplicações de grande porte com Ruby e Rails :)
<h1>O evento</h1>
Se você não soube do <a href="http://www.railssummit.com.br/">Rails Summit 2009</a> ou não sabe nem o que é Rails recomendo que acesse <a href="http://pbskids.org/teletubbies/">este site</a>. Deixando o sarcasmo de lado, a edição 2009 do Rails Summit foi muito boa. As palestras foram excelentes (com algumas poucas exceções). Os coffe-breaks e as <a href="http://github.com/railssummit/morena_opensource/tree/master/RailsSummit2009/">locagirls</a> também!

<img class="alignnone size-full wp-image-567" title="Rails Summit 2009 Locaweb" src="http://1up4dev.org/wp-content/uploads/2009/10/4013425175_68b7b78b6f_original.jpg" alt="Rails Summit 2009 Locaweb" width="500" height="333" />

Quem não conseguiu ir este ano pode conferir o que aconteceu e assistir a algumas palestras nos seguintes links:

<a href="http://github.com/leonardoborges/railssummit09">http://akitaonrails.com/2009/10/17/rails-summit-2009-retrospectiva</a>

<a href="http://andrefaria.com/2009/10/15/rails-summit-2009-chad-fowler/">http://andrefaria.com/2009/10/15/rails-summit-2009-chad-fowler/</a>

<a href="http://andrefaria.com/2009/10/19/rails-summit-gregg-pollack/">http://andrefaria.com/2009/10/19/rails-summit-gregg-pollack/</a>

<a href="http://marciotrindade.com/2009/10/13/rails-summit-2009-parte-1">http://marciotrindade.com/2009/10/13/rails-summit-2009-parte-1</a>

<a href="http://marciotrindade.com/2009/10/14/rails-summit-2009-parte-2">http://marciotrindade.com/2009/10/14/rails-summit-2009-parte-2</a>

<a href="http://marciotrindade.com/2009/10/16/rails-summit-2009-parte-3">http://marciotrindade.com/2009/10/16/rails-summit-2009-parte-3</a>
<h1>Rails não escala</h1>
Das palestras técnicas, focadas em Ruby e Rails, destaco a do <a href="http://blog.envylabs.com">Gregg Pollac</a>: On The Edge of Rails Performance, que falou sobre algumas <a href="http://andrefaria.com/2009/10/19/rails-summit-gregg-pollack/">ferramentas e plugins</a> para ajudar a melhorar a performance de aplicações Rails.

O estreiante <a href="http://m.onkey.org/2009/10/18/railssummit-slides">Pratik Naik</a> também deu algumas dicas muito boas para melhoar a performance e falou um bouco sobre suas experiências com Rails.

Para finalizar, o <a href="http://brunomiranda.com/">Bruno Miranda</a> fechou falando sobre sua experiência com o desenvolvimento do <a href="http://br.msn.cyloop.com/">Cyloop</a>, uma rede social de música, mostrando os problemas enfrentados com escalabilidade e as estratégias utilizadas para resolvê-los.

E claro que não podia deixar de falar da excelente palestra do <a href="http://www.slideshare.net/fabiokung/dsls-internas-e-ruby">Fábio Kung</a> sobre metaprogramação com Ruby, apresentando um hands-on, ou seja, &lt;faustao&gt;quem sabe faz ao vivo&lt;/faustao&gt;, para criar uma DSL em Ruby e outras técnicas de magia negra como <a href="http://coderrr.wordpress.com/2008/11/22/super-simple-callbacks-in-ruby/">Callbacks</a>, que pretendo abordar com mais detalhes aqui no blog.

Resumindo, projetar aplicações Rails escaláveis não é uma tarefa trivial e deve ser pensada com muito cuidado. Pretendo explorar mais este assunto nos próximos posts do blog.
<h1>Agilidade a seu favor</h1>
Apesar de ser um evento sobre Rails, um tema predominante foi agile. A <a href="http://andrefaria.com/2009/10/15/rails-summit-2009-chad-fowler/">largada</a> foi dada pelo <a href="http://chadfowler.com/">Chad Fowler</a> que falou sobre a insurgência Ruby on Rails, incentivando o movimento ágil a "quebrar as regras", <a href="http://chadfowler.com/2006/12/27/the-big-rewrite">parar de fazer as coisas que sabemos que estão erradas</a>! Também ressaltou que é preciso ter coragem e atitude para rejeitar os moldes corporativos e lutar contra os <a href="http://akitaonrails.com/2009/03/30/off-topic-net-negative-producing-programmer">trolls</a>, os <a href="http://1up4dev.org/2008/11/os-guardioes-da-cascata/">guardiões da cascata</a>.

O <a href="http://akitaonrails.com/">Akita</a> realmente surpreendeu com sua <a href="http://vimeo.com/7099091">palestra</a> "Agile, beyond chaos". Explicou os princípios do <a href="http://agilemanifesto.org/">manifesto ágil</a> e comprovou cientificamente o "porque" agile funciona!

A palestra sobre empreendedorismo do <a href="http://improveit.com.br/empresa/vinicius">Vinícius Teles</a> foi uma verdadeira aula, contando um pouco da sua história, as dificuldades e obstáculos superados até conseguir transformar o <a href="http://beonthe.net/">Be on the Net</a> em realidade. Resumindo: ganhe dinheiro fazendo o que você gosta e ajudando as outras pessoas a ganhar dinheiro!

Finalizando com chave de ouro, o <a href="http://obiefernandez.com/">Obie Fernandez</a> falou sobre a "arte" do desenvolvimento de aplicações. Assim como um artista que precisa praticar muito para atingir a excelência, um programador precisa praticar e codificar muito... "O que você está esperando? Fuck the enterprise!"

Resumindo, falou-se muito sobre agilidade usando ruby e rails como uma ferramenta pragmática. As empresas de software sérias já estão usando Ruby. É a <a href="http://1up4dev.org/2009/08/ruby-quando-a-linguagem-de-programacao-faz-diferenca/">linguagem ideal para o modelo ágil</a>.
<h2>Comentários do Roger</h2>
Tomei a liberdade de adicionar uma nota neste post do <a href="http://1up4dev.org/author/rodrigopanachi/">Panachi</a>, pois como participante do <a href="http://1up4dev.org/2008/10/rails-summit-eu-fui/">Rails Summit 2008</a>, resumidamente notei três coisas do evento:
<ul>
	<li>A infra estrutura do evento estava muito melhor, mais espaço, mais organização e sem o calor infernal do ano passado. Parabéns para o Akita e o pessoal da Locaweb pelo ótimo trabalho e evento mais uma vez!</li>
	<li>Tivemos ótimas palestras técnicas sobre como melhorar a performance de aplicações Ruby!</li>
	<li>Em 2008 a grande mensagem foi "Participe!". Ficou bem claro a importância de participar de projetos e contribuir. Este ano, a grande mensagem foi "<em>Fuck the Enterprise!</em>". :D</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>558</wp:post_id>
		<wp:post_date>2009-10-23 10:21:22</wp:post_date>
		<wp:post_date_gmt>2009-10-23 13:21:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-summit-2009</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="eventos"><![CDATA[eventos]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="railssummit"><![CDATA[railssummit]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="ruby-on-rails"><![CDATA[ruby on rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078525]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>426</wp:comment_id>
			<wp:comment_author><![CDATA[Andre Farina]]></wp:comment_author>
			<wp:comment_author_email>andref5@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>200.185.17.190</wp:comment_author_IP>
			<wp:comment_date>2009-10-24 23:41:55</wp:comment_date>
			<wp:comment_date_gmt>2009-10-25 02:41:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Salve.
Esse ano não deu para ir, fica para a próxima :(

Parabéns pelo novo trampo de vcs...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Agile Enterprise Edition</title>
		<link>http://1up4dev.org/2009/12/agile-enterprise-edition/</link>
		<pubDate>Mon, 21 Dec 2009 09:00:08 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=560</guid>
		<description></description>
		<content:encoded><![CDATA[Para começar o post, segue esta história sobre <em>gerenciamento</em> que vi no blog do <a href="http://gustavoribeiro.com/blog/gerenciamento" target="_blank">Gustavo Ribeiro</a>:
<blockquote>Todos os dias, uma formiga chegava cedinho ao escritório e pegava duro no trabalho. A formiga era produtiva e feliz. O gerente marimbondo estranhou a formiga trabalhar sem supervisão. Se ela era produtiva sem supervisão, seria ainda mais se fosse supervisionada.

E colocou uma barata, que preparava belíssimos relatórios e tinha muita experiência, como supervisora. A primeira preocupação da barata foi a de padronizar o horário de entrada e saída da formiga.

Logo, a barata precisou de uma secretária para ajudar a preparar os relatórios e contratou também uma aranha para organizar os arquivos e controlar as ligações telefônicas.

O marimbondo ficou encantado com os relatórios da barata e pediu também gráficos com indicadores e análise das tendências que eram mostradas em reuniões.

A barata, então, contratou uma mosca, e comprou um computador com impressora colorida. Logo, a formiga produtiva e feliz, começou a se lamentar de toda aquela movimentação de papéis e reuniões!
O marimbondo concluiu que era o momento de criar a função de gestor para a área onde a formiga produtiva e feliz, trabalhava. O cargo foi dado a uma cigarra, que mandou colocar carpete no seu escritório e comprar uma cadeira especial.

A nova gestora cigarra logo precisou de um computador e de uma assistente (sua assistente na empresa anterior) para ajudá-la a preparar um plano estratégico de melhorias e um controle do orçamento para a área onde trabalhava a formiga, que já não cantarolava mais e cada dia se tornava mais chateada.

A cigarra, então, convenceu o gerente marimbondo, que era preciso fazer um estudo de clima. Mas, o marimbondo, ao rever as cifras, se deu conta de que a unidade na qual a formiga trabalhava já não rendia como antes e contratou a coruja, uma prestigiada consultora, muito famosa, para que fizesse um diagnóstico da situação. A coruja permaneceu três meses nos escritórios e emitiu um volumoso relatório, com vários volumes que concluía: "Há muita gente nesta empresa!"

Então o marimbondo mandou demitir a formiga porque ela andava muito desmotivada e aborrecida.</blockquote>
Então lembrei de uma imagem que ilustra perfeitamente esta fábula e retrata fielmente a "organização" de alguma empresas:
<p style="text-align: center;"><a href="http://1up4dev.org/wp-content/uploads/2009/07/trabalho_em_equipe.jpg"><img class="aligncenter" title="trabalho_em_equipe" src="http://1up4dev.org/wp-content/uploads/2009/07/trabalho_em_equipe-222x300.jpg" alt="" width="222" height="300" /></a></p>

<h2>Dividir para conquistar: você está fazendo isso errado!</h2>
Quando uma <em>startup</em> passa a vender mais e ter uma procura maior por seus produtos/serviços (o que é bom), uma reação comum da "cúpula" é aumentar o quadro de funcionários visando atender a demanda. Logo surgem os problemas com a organização do pessoal e/ou fluxo de trabalho. A solução mais simplista (e óbvia) é a especialização: fulano faz isso, ciclano faz aquilo, e beltrano gerencia. Logo controles são criados, fluxos validados, centros de custo, documentos, reuniões, atas, comitês, gestão de pessoas e relacionamento, terceirização, cargos, departamentos... e nasce o monstro da <a href="http://pt.wikipedia.org/wiki/Burocracia">burocracia</a>, aka "enterprise".

Com essa <a href="http://en.wikipedia.org/wiki/Enterprise_architecture">especialização</a>, cada "módulo" (também conhecido como departamento) começa a perder o foco no GRANDE objetivo da empresa e passa a defender apenas <a href="http://1up4dev.org/2008/11/os-guardioes-da-cascata">seus interesses</a> - a famosa MISSÃO da empresa passa a ser coadjuvante. O resultado? A empresa dobra ou triplica seu quadro de funcionários e na maioria dos casos, seu lucro bruto. Porém agora tem mais despesas com pessoal e gastos extras para manter  esse novo modelo "enterprise". Trocando em miúdos, continua na mesma!

Onde está o erro? Mais uma vez o FOCO está na <a href="http://1up4dev.org/2008/11/foco-no-problema/">solução</a> ao invés de PROBLEMA. Se você ler meus posts anteriores vai ver que este é um tema recorrente. Então por que as empresas continuam fazendo as coisas erradas e cometendo os mesmos erros?

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="425" height="344" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="src" value="http://www.youtube.com/v/R47Xe8kVrv0&amp;hl=pt_BR&amp;fs=1&amp;" /><param name="allowfullscreen" value="true" /><embed type="application/x-shockwave-flash" width="425" height="344" src="http://www.youtube.com/v/R47Xe8kVrv0&amp;hl=pt_BR&amp;fs=1&amp;" allowscriptaccess="always" allowfullscreen="true"></embed></object>

Idéias criativas surgem das pessoas <a href="http://blog.aspercom.com.br/2008/07/21/hierarquias-sao-inteligentes-nas-pontas/">diretamente</a> relacionadas com os problemas e não de diretores, contadores, gestores, etc. Esse modelo "enterprise" é um <em>overhead</em> organizacional que só gera ruído e desperdício!
<h2>A solução é adotar agile!</h2>
SOLUÇÃO!? Mas qual era o PROBLEMA mesmo!? Sim, mais uma vez o foco é a <a href="http://agilesoftwaredevelopment.com/blog/janusz-gorycki/agile-dead">solução</a> ao invés do problema.

Como eu disse nos posts anteriores, acreditar que uma mudança drástica do processo pode mudar a cultura da empresa e pincipalmente as pessoas é o maior erro na adoção de metodologias ágeis. Mudam o processo mas não mudam as pessoas.

De uma forma simples e direta, agile resume-se a quatro valores:
<blockquote>Individuals and interactions over processes and tools
Working software over comprehensive documentation
Customer collaboration over contract negotiation
Responding to change over following a plan</blockquote>
Ou seja, pessoas, software, colaboração e feedback. Simples assim!

O manifesto ágil não cita nada sobre "enterprise", sobre a implementação. Este é o grande desafio em sua adoção. Como seguir estes valores sem burocratizar e engessar o processo? Como criar uma relação de colaboração com os clientes? Como responder rapidamente a mudanças? Como eliminar o esforço que não agrega valor ao produto e/ou empresa? Como evitar politicagem?
<h2>Mantenha-se pequeno!</h2>
Otimize! Busque soluções para os problemas que impedem de produzir mais e com mais qualidade. Faça MAIS com MENOS. Foque no O QUE ao invés do COMO. Escale as pessoas verticalmente!

Inove! Não espere conseguir resultados diferentes fazendo sempre a mesma coisa. Busque novidades, opniões, experiências. Ouça seus funcionários, seus clientes. Estude, pesquise, arrisque, erre, acerte... continuamente.

Mantenha o foco! Tenha um GRANDE e único objetivo e certifique-se que todos acreditem nesta filosofia. É importante que todos comprem a idéia e o <em>modus operandis</em>.

Finalizando, este é apenas meu ponto de vista, baseado na minha experiência em diversas empresas grandes e pequenas, vivenciando problemas, errando muito e principalmente aprendendo com os erros dos outros. Agilidade pode funcionar bem em grandes corporações, desde que haja foco e que todos comprem a idéia. Você pode concordar ou não.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>560</wp:post_id>
		<wp:post_date>2009-12-21 06:00:08</wp:post_date>
		<wp:post_date_gmt>2009-12-21 09:00:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>agile-enterprise-edition</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agilidade"><![CDATA[agilidade]]></category>
		<category domain="post_tag" nicename="corporativismo"><![CDATA[corporativismo]]></category>
		<category domain="post_tag" nicename="metodologia"><![CDATA[metodologia]]></category>
		<category domain="post_tag" nicename="pragmatic-waterfall"><![CDATA[pragmatic waterfall]]></category>
		<category domain="category" nicename="questionamento"><![CDATA[questionamento]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="scrum"><![CDATA[scrum]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077445]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>436</wp:comment_id>
			<wp:comment_author><![CDATA[Gerente X Capataz &laquo; QualidadeBR]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://qualidadebr.wordpress.com/2009/12/28/gerente-x-capataz/</wp:comment_author_url>
			<wp:comment_author_IP>66.135.48.201</wp:comment_author_IP>
			<wp:comment_date>2009-12-28 12:32:04</wp:comment_date>
			<wp:comment_date_gmt>2009-12-28 15:32:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Gerência&#8221; (será mais um hit para o verão 2010, junto com o &#8220;Funk do Anel&#8221; rs) nesse excelente post do Rodrigo [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>440</wp:comment_id>
			<wp:comment_author><![CDATA[Fernando Ferreira]]></wp:comment_author>
			<wp:comment_author_email>nandoferreir@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>200.162.18.130</wp:comment_author_IP>
			<wp:comment_date>2010-01-07 09:28:09</wp:comment_date>
			<wp:comment_date_gmt>2010-01-07 12:28:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excelente post Rodrigo.
Parabéns.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>438</wp:comment_id>
			<wp:comment_author><![CDATA[O melhor da semana 27/12 a 02/01 &laquo; QualidadeBR]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://qualidadebr.wordpress.com/2010/01/03/o-melhor-da-semana-2712-a-0201/</wp:comment_author_url>
			<wp:comment_author_IP>72.233.96.143</wp:comment_author_IP>
			<wp:comment_date>2010-01-03 19:58:53</wp:comment_date>
			<wp:comment_date_gmt>2010-01-03 22:58:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Agile Enterprise Edition &#8211; Rodrigo Panachi (1up4Developers); [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>523</wp:comment_id>
			<wp:comment_author><![CDATA[Felipe]]></wp:comment_author>
			<wp:comment_author_email>fudebungus@zipmail.com.br</wp:comment_author_email>
			<wp:comment_author_url>http://www.debandalarga.com</wp:comment_author_url>
			<wp:comment_author_IP>186.204.210.53</wp:comment_author_IP>
			<wp:comment_date>2010-09-07 17:51:14</wp:comment_date>
			<wp:comment_date_gmt>2010-09-07 20:51:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[olá
fui eu quem fez essa montagem do Funk da Gerência no início de 2009 e, curiosamente, estou recebendo muitas impressões negativas somente agora, em meados de 2010 e, por isso, ocorreu-me de procurar onde está sendo anunciado meu vídeo.

aproveito pra contar que acho o Gerente um profissional necessário na organização de uma empresa, mas se for escolhido um mocorongo para o cargo o resultado é o que o Waldez Ludwig aponta no vídeo - e era um gerente exatamente assim a quem eu tinha que ficar subordinado na época... daí, pra sacanear esse gerente, fiz esse vídeo que foi celebrado entre meus colegas na época.

peço desculpas a admiradores do Ludwig, se acham que deturpei o que ele falou, mas a piada é interna a um grupo de amigos.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>524</wp:comment_id>
			<wp:comment_author><![CDATA[Felipe]]></wp:comment_author>
			<wp:comment_author_email>fudebungus@zipmail.com.br</wp:comment_author_email>
			<wp:comment_author_url>http://www.debandalarga.com</wp:comment_author_url>
			<wp:comment_author_IP>186.204.215.146</wp:comment_author_IP>
			<wp:comment_date>2010-09-09 00:43:26</wp:comment_date>
			<wp:comment_date_gmt>2010-09-09 03:43:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[valeu pelo elogio no twitter e pelo apoio no vídeo, Rodrigo!

estou recomendando seu blog a amigos programadores

abração e sucesso a voces!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Ruby, Rubygems e $LOAD_PATH ou Como funciona o require de gems</title>
		<link>http://1up4dev.org/2009/12/ruby-rubygems-e-load_path-ou-como-funciona-o-require-de-gems/</link>
		<pubDate>Thu, 17 Dec 2009 10:30:15 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=589</guid>
		<description></description>
		<content:encoded><![CDATA[Na madrugada passada, andei "brincando" com o fonte do <a href="http://rubyforge.org/projects/rubygems/">Rubygems</a>. Logo de cara posso te dizer que não consegui fazer o que queria, e pra amenizar o sentimento de "perda de tempo", resolvi postar alguns truques aprendidos.
<h2>Baixei o fonte do rubygems, como faço pra rodá-lo sem alterar o meu sistema?</h2>
Foi a primeira pergunta que fiz. Percebi que com o google não iria encontrar a resposta, mas consegui uma dica importante: $LOAD_PATH.
<pre>$ irb</pre>
<pre>irb(main):001:0&gt; $LOAD_PATH</pre>
No meu Ubuntu, obtive:
<pre>["/usr/local/lib/site_ruby/1.8", "/usr/local/lib/site_ruby/1.8/i486-linux", "/usr/local/lib/site_ruby/1.8/i386-linux", "/usr/local/lib/site_ruby", "/usr/lib/ruby/vendor_ruby/1.8", "/usr/lib/ruby/vendor_ruby/1.8/i486-linux", "/usr/lib/ruby/vendor_ruby", "/usr/lib/ruby/1.8", "/usr/lib/ruby/1.8/i486-linux", "/usr/lib/ruby/1.8/i386-linux", "."]</pre>
<pre>$ ls /usr/local/lib/site_ruby/1.8/</pre>
Exatamente nesta pasta que se encontra o rubygems.rb. Bingo!
Para rodar o fonte do rubygems, só é necessário adicionar ao $LOAD_PATH a pasta lib do projeto. Dado que estou na raiz do projeto rubygems baixado, execute:
<pre>~/rubygems$ ruby -I $PWD/lib ./bin/gem -v</pre>
O paramêtro -I permite adicionar diretório ao $LOAD_PATH. Simples e prático. Primeiro problema resolvido, comecei a programar.
<h2>Afinal, como funciona o "require de gems"?</h2>
Bom, já sabemos que o require "rubygems" fuciona pois encontra-se no $LOAD_PATH do ruby, no caso do meu Ubuntu em "/usr/local/lib/site_ruby/1.8".

Basicamente (e muito), o Rubygems faz duas coisas no Kernel do Ruby.
<ul>
	<li>Adiciona o metodo Kernel#gem.</li>
	<li>Faz um <a href="http://en.wikipedia.org/wiki/Monkey_patch">Monkey Patch</a> no Kernel#require</li>
</ul>
<h3>Kernel#gem</h3>
Permite "acionar" uma versão específica de gem. Note que este acionar, traduz-se para, adicionar a lib da gem no $LOAD_PATH. Segue um trecho do comentário do Kernel#gem:
<p style="padding-left: 30px;">##</p>
<p style="padding-left: 30px;"># Use Kernel#gem to activate a specific version of +gem_name+.</p>
<p style="padding-left: 30px;">#</p>
<p style="padding-left: 30px;"># +version_requirements+ is a list of version requirements that the</p>
<p style="padding-left: 30px;"># specified gem must match, most commonly "= example.version.number".  See</p>
<p style="padding-left: 30px;"># Gem::Requirement for how to specify a version requirement.</p>
<p style="padding-left: 30px;">#</p>
<p style="padding-left: 30px;"># If you will be activating the latest version of a gem, there is no need to</p>
<p style="padding-left: 30px;"># call Kernel#gem, Kernel#require will do the right thing for you.</p>
<p style="padding-left: 30px;">#</p>
<p style="padding-left: 30px;"># Kernel#gem returns true if the gem was activated, otherwise false.  If the</p>
<p style="padding-left: 30px;"># gem could not be found, didn't match the version requirements, or a</p>

<p style="padding-left: 30px;"># different version was already activated, an exception will be raised.
[...]
<h3>Kernel#require</h3>
No final do rubygems.rb encontramos:

if RUBY_VERSION &lt; '1.9' then

require 'rubygems/custom_require'

end

Não consegui descobrir o que acontece com o ruby 1.9, mas no 1.8, o monkey patch executa os seguintes passos:
<ul>
	<li>Chama o "original" require;</li>
	<li>Em caso de LoadError;
<ul>
	<li>Executa o "Gem.searcher.find(path)";</li>
	<li>Se <em>true</em>
<ul>
	<li>Chama o activate (novamente traduz-se para adiciona a gem no $LOAD_PATH)</li>
	<li>Executa o "original" require novamente;</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3>Exemplos com o IRB</h3>
Para finalizar legal e comprovar tudo isso, fiz alguns testes:
<pre>$ gem list json</pre>
<p style="padding-left: 30px;">*** LOCAL GEMS ***</p>
<p style="padding-left: 30px;">json (1.2.0, 1.1.9)</p>
<p style="padding-left: 30px;">json_pure (1.2.0)</p>
<p style="padding-left: 30px;"></p>

<pre>$ irb</pre>
<pre>irb(main):001:0&gt; $LOAD_PATH</pre>
<p style="padding-left: 30px;">=&gt; ["/usr/local/lib/site_ruby/1.8", "/usr/local/lib/site_ruby/1.8/i486-linux", "/usr/local/lib/site_ruby/1.8/i386-linux", "/usr/local/lib/site_ruby", "/usr/lib/ruby/vendor_ruby/1.8", "/usr/lib/ruby/vendor_ruby/1.8/i486-linux", "/usr/lib/ruby/vendor_ruby", "/usr/lib/ruby/1.8", "/usr/lib/ruby/1.8/i486-linux", "/usr/lib/ruby/1.8/i386-linux", "."]</p>

<pre>irb(main):004:0&gt; require "json"</pre>
<p style="padding-left: 30px;">LoadError: no such file to load -- json</p>
<p style="padding-left: 30px;">from (irb):4:in `require'</p>
<p style="padding-left: 30px;">from (irb):4</p>
<p style="padding-left: 30px;">from :0</p>

<pre>irb(main):005:0&gt; gem "json", "= 1.2.0"</pre>
<p style="padding-left: 30px;">NoMethodError: undefined method `gem' for main:Object</p>

<p style="padding-left: 30px;">from (irb):5
from :0

O require "json" por si só, carrega a versão mais atual da gem.
<pre>irb(main):006:0&gt; require "rubygems"</pre>
=&gt; true
<pre>irb(main):007:0&gt; require "json"</pre>
=&gt; true
<pre>irb(main):008:0&gt; JSON::VERSION</pre>
=&gt; "1.2.0"
<pre>irb(main):009:0&gt; $LOAD_PATH</pre>
=&gt; ["/usr/lib/ruby/gems/1.8/gems/gemcutter-0.1.8/lib", "/usr/lib/ruby/gems/1.8/gems/json-1.2.0/bin", "/usr/lib/ruby/gems/1.8/gems/json-1.2.0/ext/json/ext", "/usr/lib/ruby/gems/1.8/gems/json-1.2.0/ext", "/usr/lib/ruby/gems/1.8/gems/json-1.2.0/lib", "/usr/local/lib/site_ruby/1.8", "/usr/local/lib/site_ruby/1.8/i486-linux", "/usr/local/lib/site_ruby/1.8/i386-linux", "/usr/local/lib/site_ruby", "/usr/lib/ruby/vendor_ruby/1.8", "/usr/lib/ruby/vendor_ruby/1.8/i486-linux", "/usr/lib/ruby/vendor_ruby", "/usr/lib/ruby/1.8", "/usr/lib/ruby/1.8/i486-linux", "/usr/lib/ruby/1.8/i386-linux", "."]
<pre>irb(main):010:0&gt; quit</pre>
Após o require "json", as pastas foram adicionadas no $LOAD_PATH.
<pre>"/usr/lib/ruby/gems/1.8/gems/json-1.2.0/bin", "/usr/lib/ruby/gems/1.8/gems/json-1.2.0/ext/json/ext", "/usr/lib/ruby/gems/1.8/gems/json-1.2.0/ext", "/usr/lib/ruby/gems/1.8/gems/json-1.2.0/lib"</pre>
Agora olhe que <strong>interessante</strong> este <strong>último teste</strong>:
<pre>$ irb

irb(main):001:0&gt; require "rubygems"</pre>
=&gt; true
<pre>irb(main):002:0&gt; $LOAD_PATH</pre>
=&gt; ["/usr/lib/ruby/gems/1.8/gems/gemcutter-0.1.8/lib", "/usr/local/lib/site_ruby/1.8", "/usr/local/lib/site_ruby/1.8/i486-linux", "/usr/local/lib/site_ruby/1.8/i386-linux", "/usr/local/lib/site_ruby", "/usr/lib/ruby/vendor_ruby/1.8", "/usr/lib/ruby/vendor_ruby/1.8/i486-linux", "/usr/lib/ruby/vendor_ruby", "/usr/lib/ruby/1.8", "/usr/lib/ruby/1.8/i486-linux", "/usr/lib/ruby/1.8/i386-linux", "."]
<pre>irb(main):003:0&gt; gem "json", "= 1.1.9"</pre>
=&gt; true
<pre>irb(main):004:0&gt; $LOAD_PATH</pre>
=&gt; ["/usr/lib/ruby/gems/1.8/gems/gemcutter-0.1.8/lib", "/usr/lib/ruby/gems/1.8/gems/json-1.1.9/bin", "/usr/lib/ruby/gems/1.8/gems/json-1.1.9/ext/json/ext", "/usr/lib/ruby/gems/1.8/gems/json-1.1.9/ext", "/usr/lib/ruby/gems/1.8/gems/json-1.1.9/lib", "/usr/local/lib/site_ruby/1.8", "/usr/local/lib/site_ruby/1.8/i486-linux", "/usr/local/lib/site_ruby/1.8/i386-linux", "/usr/local/lib/site_ruby", "/usr/lib/ruby/vendor_ruby/1.8", "/usr/lib/ruby/vendor_ruby/1.8/i486-linux", "/usr/lib/ruby/vendor_ruby", "/usr/lib/ruby/1.8", "/usr/lib/ruby/1.8/i486-linux", "/usr/lib/ruby/1.8/i386-linux", "."]
<pre>irb(main):005:0&gt; JSON</pre>
NameError: uninitialized constant JSON
from (irb):5
<pre>irb(main):006:0&gt; require "json"</pre>
=&gt; true
<pre>irb(main):007:0&gt; JSON::VERSION</pre>
=&gt; "1.1.9"
<pre>irb(main):008:0&gt; quit</pre>
Note que após o gem "json", "= 1.1.9" ... a versao 1.1.9 foi adicionada no $LOAD_PATH mas não foi carregada. Ao executar o require "json", como este já estava no $LOAD_PATH, a versão 1.1.9 é usada.

Espero que com estas explicações, você use com mais segurança o rubygems.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>589</wp:post_id>
		<wp:post_date>2009-12-17 07:30:15</wp:post_date>
		<wp:post_date_gmt>2009-12-17 10:30:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby-rubygems-e-load_path-ou-como-funciona-o-require-de-gems</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dicas"><![CDATA[dicas]]></category>
		<category domain="post_tag" nicename="gem"><![CDATA[gem]]></category>
		<category domain="post_tag" nicename="load_path"><![CDATA[load_path]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="rubygems"><![CDATA[rubygems]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Importando e exportando suas gems com Rubygems Snapshot</title>
		<link>http://1up4dev.org/2009/12/importando-e-exportando-suas-gems-com-rubygems-snapshot/</link>
		<pubDate>Tue, 22 Dec 2009 16:24:09 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=618</guid>
		<description></description>
		<content:encoded><![CDATA[Final de ano está rendendo.
O <a href="http://github.com/rogerleite/rubygems_snapshot">rubygems_snapshot</a> nasceu da necessidade de "migrar" as gems instaladas de uma máquina para outra, aliado ao <a href="http://rvm.beginrescueend.com/">rvm</a> (veja este <a href="http://www.nuxlli.com.br/2009/11/24/para-tudo-instale-o-rvm-antes/">post-guia-rápido</a>), permite mudar e/ou criar diferentes ambientes em minutos. Assim você pode fugir do <span style="text-decoration: line-through;">famoso</span> "gem hell".

Veja como é difícil usar:

Instalação:
<pre>sudo gem install rubygems_snapshot</pre>
Para <strong>exportar</strong> as gems instaladas:
<pre>gem snapshot export projeto-exemplo.yml</pre>
Supondo que esteja em outra máquina, para <strong>importar</strong> as gems, use:
<pre>[sudo] gem snapshot import projeto-exemplo.yml</pre>
<h2>Afinal, o que tem de legal nisso?</h2>
Vamos supor que você acaba de entrar numa nova equipe e tem que montar o ambiente de desenvolvimento (por sinal, um ambiente complicado de configurar). O gem snapshot aliada ao rvm, foi feito para facilitar isto, vamos a um exemplo rápido:

Com o rvm, você pode criar um "novo ambiente":
<pre>rvm use 1.8.7%projeto_exemplo</pre>
<pre>gem list</pre>
Deve retornar vazio.
<pre>gem install rubygems_snapshot</pre>
<pre>gem snapshot import projeto-exemplo.yml</pre>
Instalará as gems necessárias para o projeto e pronto!
<h2>ToDo:</h2>
Esta é uma versão bem básica, onde o "import" somente lê as gem e version e manda instalar sem requerir dependências. Está previsto de colocar um aviso no final das gems que deram erro, geralmente devido a dependências de "build nativos", mas por enquanto estamos usando aqui na equipe com sucesso.
<h2>Como faço para criar um rubygems plugin também?</h2>
Bom, logo de cara posso te garantir que não é difícil (apesar da pouca documentação na internet), mas deixarei os detalhes para um outro post. Por enquanto, a minha recomendação é: clone o projeto, analise os dois rb do projeto :D e crie o seu!

Caso algum corajoso for usar, estou a disposição para ajudar, é só deixar um comentário aê!
Valeu e sucesso!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>618</wp:post_id>
		<wp:post_date>2009-12-22 13:24:09</wp:post_date>
		<wp:post_date_gmt>2009-12-22 16:24:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>importando-e-exportando-suas-gems-com-rubygems-snapshot</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gem"><![CDATA[gem]]></category>
		<category domain="post_tag" nicename="plugin"><![CDATA[plugin]]></category>
		<category domain="category" nicename="projetos"><![CDATA[projetos]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="rubygems"><![CDATA[rubygems]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078346]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>434</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention 1up4Developers » Blog Archive » Importando e exportando suas gems com Rubygems Snapshot -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/tb/migre.me/ePj1</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2009-12-22 13:28:39</wp:comment_date>
			<wp:comment_date_gmt>2009-12-22 16:28:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Roger Leite, Rodrigo Panachi. Rodrigo Panachi said: RT @rogerleite: Novo post no 1up4dev! Como importar e exportar suas gems! http://migre.me/ePj1 #ruby #protip [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>435</wp:comment_id>
			<wp:comment_author><![CDATA[Augusto Souza]]></wp:comment_author>
			<wp:comment_author_email>augustorsouza@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>200.196.241.66</wp:comment_author_IP>
			<wp:comment_date>2009-12-22 15:48:53</wp:comment_date>
			<wp:comment_date_gmt>2009-12-22 18:48:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Belo post Roger!
Usei este procedimento e posso dizer q para ambientes de desenvolvimento complexos (tbm conhecido como "gem hell") o processo se torna bem mais rapido....
Abraços...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Rubygems Snapshot! Importando/Exportando gems com velocidade!</title>
		<link>http://1up4dev.org/2010/05/rubygems-snapshot-importandoexportando-gems-com-velocidade/</link>
		<pubDate>Mon, 10 May 2010 13:53:17 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=637</guid>
		<description></description>
		<content:encoded><![CDATA[Nova versão do <a href="http://github.com/rogerleite/rubygems_snapshot">Rubygems_Snapshot</a> no ar!

Fico feliz em dizer que este é o meu primeiro projeto que passou dos dez "watchers" ! :D E que realmente ajudou alguns developers mundo afora.

A primeira versão foi muito focada no uso pessoal, como "quebra-galho" mesmo. Resolvi investir algum tempo e praticamente refaze-lá, pois ao usar no dia-a-dia percebi algumas falhas e dificuldades de uso.

Basicamente, nesta nova versão:

- É possível trabalhar com mais de um formato. Yml e Tar, que é o padrão.

- Ao exportar, os arquivos ".gem" serão exportados.

- Ao importar, ocorre praticamente uma instalação "offlline", muito mais rápido e livre de problemas com "sources" do rubygem !

- Usar o Snapshot como API !

Como tive um trabalhão para deixar o Readme legal, não pretendo escrever mais que isso! :D

<a href="http://github.com/nofxx">Marcos</a>, valeu pelo incentivo! Cara, forka lá e manda bala!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>637</wp:post_id>
		<wp:post_date>2010-05-10 10:53:17</wp:post_date>
		<wp:post_date_gmt>2010-05-10 13:53:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rubygems-snapshot-importandoexportando-gems-com-velocidade</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gems"><![CDATA[gems]]></category>
		<category domain="post_tag" nicename="gems-export"><![CDATA[gems export]]></category>
		<category domain="post_tag" nicename="gems-import"><![CDATA[gems import]]></category>
		<category domain="post_tag" nicename="plugin"><![CDATA[plugin]]></category>
		<category domain="category" nicename="projetos"><![CDATA[projetos]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="rubygems"><![CDATA[rubygems]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Teste sua aplicação de Linha de Comando com Cucumber!</title>
		<link>http://1up4dev.org/2010/05/teste-sua-aplicacao-de-linha-de-comando-com-cucumber/</link>
		<pubDate>Fri, 14 May 2010 10:00:21 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=643</guid>
		<description></description>
		<content:encoded><![CDATA[É engraçado como tudo é questão de treino e disciplina. Levei um tempo para me acostumar com <a href="http://en.wikipedia.org/wiki/Test-driven_development">TDD</a>, <a href="http://www.vim.org/">Vim</a> e não poderia ser diferente com testes funcionais, sendo mais especifico, <a href="http://cukes.info/">Cucumber</a>.

Até o momento, só tinha usado cucumber em projetos web. E quando voltei a desenvolver o <a href="http://github.com/rogerleite/rubygems_snapshot">rubygems_snapshot</a>, senti falta de algo para testar funcionalmente. Baseado no <a href="http://github.com/vertiginous/pik">pik</a>, montei um esquema simples para validar qualquer aplicação de linha de comando.
<h2>Como instalar</h2>
Basicamente, será necessário (fontes via gist):
<ul>
	<li>rake para executar o cucumber</li>
	<li>env_terminal.rb</li>
	<li>terminal_steps.rb</li>
</ul>
<script src="http://gist.github.com/400069.js"></script>

Dado que você tem cucumber instalado, com o esquema da pasta "features".
<ul>
	<li>Copie o cucumber.rake para a raiz.</li>
	<li>Copie o env_terminal.rb para a pasta features.</li>
	<li>Copie o terminal_steps.rb para a pasta features/step_definitions/terminal_steps.rb.</li>
	<li>Edite o  env.rb incluindo (pode ser no começo):</li>
</ul>
<pre>require "env_terminal"</pre>
<ul>
	<li>Dentro do Rakefile, pode ser no final mesmo, adicione:</li>
</ul>
<pre>load "cucumber.rake"</pre>
<h2>Como usar</h2>
Todas features:
<pre>rake cucumber</pre>
Features com a tag @wip, também conhecida como Work in Progress.
<pre>rake cucumber:wip</pre>
<h2>Informações Extras</h2>
Caso precise de mais informações, você tem a opção de ver a saída dos comandos, executando a rake assim:
<pre>rake cucumber show_output=true</pre>
ou
<pre>rake cucumber:wip show_output=true</pre>
No caso do snapshot, tive a necessidade de "modificar" o comando gem toda vez que era executado, ou melhor, passar um parâmetro para controlar o ambiente. Dentro do env_terminal.rb, existe o método <strong>gsub_command</strong>, nele você pode "redefinir" comandos, caso necessite.
<h2><strong>Gostei, quero mais!</strong></h2>
A solução acima, é bem "caseira". Para projetos simples com funcionalidades simples, funciona bem.

Caso queira algo mais robusto, você tem a opção da <a href="http://github.com/aslakhellesoy/aruba">gem Aruba</a>.

Tem este post como introdução:

<a href="http://www.themodestrubyist.com/2010/04/22/aruba---cucumber-goodness-for-the-command-line/">Aruba - Cucumber Goodness for the Command-Line</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>643</wp:post_id>
		<wp:post_date>2010-05-14 07:00:21</wp:post_date>
		<wp:post_date_gmt>2010-05-14 10:00:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>teste-sua-aplicacao-de-linha-de-comando-com-cucumber</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cucumber"><![CDATA[cucumber]]></category>
		<category domain="post_tag" nicename="linha-de-comando"><![CDATA[linha de comando]]></category>
		<category domain="category" nicename="projetos"><![CDATA[projetos]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="rake"><![CDATA[rake]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077714]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>449</wp:comment_id>
			<wp:comment_author><![CDATA[nofxx]]></wp:comment_author>
			<wp:comment_author_email>chadart@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.16.241.219</wp:comment_author_IP>
			<wp:comment_date>2010-05-18 18:27:10</wp:comment_date>
			<wp:comment_date_gmt>2010-05-18 21:27:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hah massa man, vou usar teu code, tinha feito isso ainda mais precariamente, heh:

http://forum.rubyonbr.org/forums/14/topics/5312

Funciona mto bem esse trem, cuke é mto massa.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Active Record em: Como adicionar comportamento as suas associações</title>
		<link>http://1up4dev.org/2010/05/active-record-em-como-adicionar-comportamento-as-suas-associacoes/</link>
		<pubDate>Wed, 19 May 2010 13:14:18 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=657</guid>
		<description></description>
		<content:encoded><![CDATA[Qualquer um que comece a desenvolver com <a href="http://api.rubyonrails.org/files/vendor/rails/activerecord/README.html">Active Record</a> (AR), minha primeira recomendação é, para tudo e leia:  <a href="http://guides.rubyonrails.org/association_basics.html">A Guide to Active Record Associations</a> ou <a href="http://guias.rubyonrails.pro.br/association_basics.html">O Guia de Associações do Active Record</a>. O guia é bem completo, e descreve muito bem os tipos de associações que estão disponíveis no AR.
<h2>Association Proxy, #wtf !</h2>
As associações:
<ul>
	<li>belongs_to</li>
	<li>has_one</li>
	<li>has_many</li>
	<li>has_and_belongs_to_many</li>
</ul>
Quando usadas, adicionam alguns métodos (veja <a href="http://guides.rubyonrails.org/association_basics.html#detailed-association-reference">Detailed Association Reference</a>). Por exemplo, ao declarar uma associação <em>belongs_to</em>, o model "ganhará" os seguintes métodos:
<ul>
	<li>association(force_reload = false)</li>
	<li>association=(associate)</li>
	<li>build_association(attributes = {})</li>
	<li>create_association(attributes = {})</li>
</ul>
Onde association, será substituído pelo nome da associação. Exemplo retirado do guides:
<pre lang="ruby">class Order < ActiveRecord::Base
   belongs_to :customer
end</pre>
Cada instância de Order, conterá os métodos:

<span style="font-size: small;"> </span>
<ul>
	<li>customer</li>
	<li>customer=</li>
	<li>build_customer</li>
	<li>create_customer</li>
</ul>
O <em>association proxy</em>, é o objeto que faz a ligação do objeto que contém a associação, conhecido como <em>owner</em>, e o objeto associado, conhecido como <em>target</em>.
<h2>Legal e daí !?!</h2>
Graças ao <em>association proxy</em>, ao declarar uma associação, podemos extendê-la e adicionar comportamentos "customizados". No guia, é citado como <a href="http://guides.rubyonrails.org/association_basics.html#association-extensions">Association Extensions</a>. O código de exemplo abaixo, está no github em <a href="http://github.com/rogerleite/random-samples">random-samples</a>.

Para exemplificar, vamos criar um modulo que adiciona o comportamento de uma galeria a qualquer coleção.

<pre lang="ruby">
module GalleryColletion

  def current=(curr = nil)
    @current, @index = nil

    if curr.nil?
      @current = collection.first
      @index = 0
    else
      collection.each_with_index do |item, index|
        if item.id.to_i == curr.to_i
          @current = item
          @index = index
        end
      end
    end
    @current
  end

  def current
    @current
  end

  def position
    @index + 1
  end

  def previous?
    return false if @index.nil?
    !!(@index - 1 >= 0)
  end
  def previous
    collection[@index - 1] if previous?
  end

  def next?
    return false if @index.nil?
    !!(@index + 1 < collection.size)
  end
  def next
    collection[@index + 1] if next?
  end

  private

  def collection
    proxy_owner.send(proxy_reflection.name)
  end

end
</pre>
<a href="http://github.com/rogerleite/random-samples/blob/master/association_extend/lib/extensions/gallery_collection.rb">Gallery Collection</a>

Note que o modulo está na pasta lib, logo, a pasta tem que ser adicionada no path via config/environment.rb.

Para extender a associação, declare:

<pre lang="ruby">
class Article < ActiveRecord::Base
  has_and_belongs_to_many :images, :extend => GalleryColletion
end
</pre>
<a href="http://github.com/rogerleite/random-samples/blob/master/association_extend/app/models/article.rb">Article model</a>, <a href="http://github.com/rogerleite/random-samples/blob/master/association_extend/app/models/image.rb">Image model aqui</a>.

Agora para navegar entre as imagens, você pode usar:
<pre lang="ruby">a = Article.first
a.images.current = 1 #1 e o Image.id que deseja selecionar
a.images.current
a.images.position
a.images.next?
a.images.next
a.images.previous?
a.images.previous</pre>
Caso esteja com coragem, baixe o projeto e veja rodando.

Dúvidas, sugestões, algum "case" de sucesso, comente!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>657</wp:post_id>
		<wp:post_date>2010-05-19 10:14:18</wp:post_date>
		<wp:post_date_gmt>2010-05-19 13:14:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>active-record-em-como-adicionar-comportamento-as-suas-associacoes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="active-record"><![CDATA[active record]]></category>
		<category domain="post_tag" nicename="pragmatismo"><![CDATA[pragmatismo]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="ruby-on-rails"><![CDATA[ruby on rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1766743768]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Gerando rotas com parâmetros dinâmicos no Rails de modo fácil</title>
		<link>http://1up4dev.org/2010/07/gerando-rotas-com-parametros-dinamicos-no-rails-de-modo-facil/</link>
		<pubDate>Fri, 02 Jul 2010 09:00:23 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=680</guid>
		<description></description>
		<content:encoded><![CDATA[A <a href="http://api.rubyonrails.org/classes/ActionController/Routing.html">API de rotas</a> do Rails simplifica consideravelmente o desenvolvimento fornecendo um padrão de geração e utilização de URLs para toda aplicação. Porém algumas necessidades especificas e relativamente simples podem gerar dores de cabeça se forem implementadas incorretamente.

Um caso bastante comum são URLs compostas que sempre apontam para um mesmo recurso. Por exemplo, um blog que possua rotas para seus posts no formato <code>/posts/autor/categoria/permalink</code> provavelmente terá uma rota mapeada como <code>map.post "posts/:author/:category/:permalink"</code> gerando automaticamente os helpers <code>post_path</code> e <code>post_url</code>.

Muito bom, porém para <a href="http://guides.rubyonrails.org/routing.html#generating-urls-from-code">usufruirmos desta facilidade</a> precisamos fornecer os valores dos parâmetros dinâmicos nos <em>controllers</em> e <em>views</em>:
<pre lang="ruby">post_path(:author => @post.author, :category => @post.category, :permalink => @post.permalink)</pre>
E mesmo que você forneça os <a href="http://guides.rubyonrails.org/routing.html#route-generation-from-arrays">parâmetros em um array</a>, vai dar muito trabalho além de deixar muito código repetido pela aplicação.
<h2>Entendi! Mas como resolvo este problema?</h2>
Para este caso, apenas implementar o método <code><a href="http://api.rubyonrails.org/classes/ActiveRecord/Base.html#M001840">to_param</a></code> do model não vai servir. Uma solução seria reescrever o método <code>post_path</code> (que é gerado automaticamente) no respectivo helper (posts_helper.rb):
<pre lang="ruby">def post_path(post, options = {})
  super(post, :author => post.author, :category => post.category, :permalink => post.permalink)
end</pre>
Outra solução seria sobrescrever o método <code><a href="http://api.rubyonrails.org/classes/ActionController/Base.html#M000467">default_url_options</a></code> no <em>controller</em> para retorna os parâmetros padrões da rota:
<pre lang="ruby">def default_url_options(options = {})
  options.merge!(:author => @post.author, :category => @post.category, :permalink => @post.permalink) if options[:action] == "show"
end</pre>
A má notícia é que você terá que fazer isto para todos seus controllers e respectivos models.

A terceira solução (e mais elegante) é padronizar a maneira com que os parâmetros opcionais da rota são obtidos a partir do controller e seu respectivo model. Basta adicionar os seguintes métodos no seu <em>ApplicationController</em>:
<pre lang="ruby">def default_url_options(options = {})
  if (model = controller_model(options))
    dynamic_route_params(options).each do |param|
      options[param] = model.send(param) if model.respond_to?(param)
    end
  end
  options
end

def controller_model(options = {})
  clazz = (options[:controller].singularize.camelize.constantize rescue ActiveRecord)
  options.select { |key, value| value.is_a?(clazz) }.first.second
rescue
  nil
end 

def dynamic_route_params(options = {})
  returning [] do |dynamic_params|
    matched_routes = ActionController::Routing::Routes.routes.select do |route|
      route.matches_controller_and_action?(options[:controller], options[:action])
    end
    dynamic_segments = matched_routes.map(&:segments).flatten.each do |segment|
      dynamic_params << segment.key if segment.is_a?(ActionController::Routing::DynamicSegment)
    end
  end
end</pre>
Assim, os valores defaults dos parâmetros da rota serão obtidos diretamente do model. Caso queiram contribuir, este código está disponível no <a href="http://github.com/1up4dev/random-samples/blob/master/dynamic_route_params/dynamic_route_params.rb">github</a>.

<strong>Referências</strong>
<a href="http://railsguts.com/routing_inside_out.html">Rails Routing from the Inside Out</a>
<a href="http://guides.rubyonrails.org/routing.html">Rails Guides: Routing</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>680</wp:post_id>
		<wp:post_date>2010-07-02 06:00:23</wp:post_date>
		<wp:post_date_gmt>2010-07-02 09:00:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gerando-rotas-com-parametros-dinamicos-no-rails-de-modo-facil</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="ruby-on-rails"><![CDATA[ruby on rails]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1761108009]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A extinção do programador sênior</title>
		<link>http://1up4dev.org/2010/07/a-extincao-do-programador-senior/</link>
		<pubDate>Thu, 29 Jul 2010 04:21:38 +0000</pubDate>
		<dc:creator>hbulhoes</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=700</guid>
		<description></description>
		<content:encoded><![CDATA[Quando foi a última vez em que você viu um programador sênior? Eu tenho tido sérias dificuldades para encontrar algum. Acho que se estivesse procurando ararinhas azuis teria tido mais sucesso -- será que alguma toparia programar? Desconfio que não. Consciente da causa ecológica, ela me diria: cada ararinha programando toma o lugar de um programador sênior, que é de uma espécie muito mais em risco do que eu. E bateria as asas em retirada.

É claro que, ao contrário da <a title="Cyanopsitta spixii" href="http://pt.wikipedia.org/wiki/Ararinha-azul" target="_blank">pobre arara</a>, o programador sênior ainda existe, e em grandes quantidades. Mas algo deu errado na evolução da sua espécie que, ao invés de melhorar, foi substituída por uma variedade mais fácil de reproduzir, bem adaptada ao cativeiro, de comportamento dócil, capaz de passar anos fazendo a mesma coisa e com duas opções de cor: terno preto ou azul. E que, curiosamente, não consegue programar. Eu já vou batizando essa variedade de <em>programador senhor</em>.

Estou falando por experiência própria. A <a href="http://www.alohapos.com.br/" target="_blank">empresa em que eu trabalho</a> está recrutando um "programador sênior" há alguns meses. Dada a indisponibilidade dos colegas no nosso <em>networking</em> (o que nos pouparia um grande tempo), resolvemos apelar e buscar no mercadão de trabalho (vulgo apinfo, catho, essas coisas). Nós filtramos dezenas de currículos, conduzimos entrevistas, aplicamos testes. Com isso, conseguimos achar diversos programadores <em>senhores</em> mas nenhum propriamente <em>sênior</em>. A maioria tinha 10+ anos de carreira, 30+ anos de idade e -1 noção para bolar respostas satisfatórias para questões como:
<ol>
	<li>Como dois programas podem se comunicar?</li>
	<li>O que são threads?</li>
	<li>Implemente o <a href="http://imranontech.com/2007/01/24/using-fizzbuzz-to-find-developers-who-grok-coding/" target="_blank">fizz buzz</a> na linguagem que preferir.</li>
</ol>
E assim por diante. Nada muito específico: preferimos encontrar gente que tivesse convivido com certos problemas, independente da tecnologia adotada. Gente demonstrasse <em>senioridade</em> propriamente dita: maturidade, bom senso, raciocínio, segurança. E conhecimento suficiente para não achar que a chave de todos os problemas é uma consulta ao Google (houve quem confessasse isso). Não encontramos essa gente ainda, mas em compensação vimos muitas pessoas bem intencionadas, certamente esforçadas, mas com imensas dificuldades para concatenar opiniões a respeito de conceitos que julgamos básicos e, no nosso negócio, fundamentais.

Sequer exigimos que o candidato conheça tópicos como controle de versão, orientação a objetos, design patterns, agilidade e etcetera, que são sinais mais do que evidentes de maturidade. Já entendemos que tudo isso está além dos limites do habitat do programador senhor. São coisas tão exóticas quanto um programador sênior genuíno, que só deve existir em áreas de proteção ambiental, como este blog.

(Às araras azuis que estiverem interessadas no recrutamento: por ora concluímos o processo, mas não deixem de <a href="mailto:humberto.bulhoes@gmail.com">entrar em contato</a>.)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>700</wp:post_id>
		<wp:post_date>2010-07-29 01:21:38</wp:post_date>
		<wp:post_date_gmt>2010-07-29 04:21:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-extincao-do-programador-senior</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1757729481]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>460</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention 1up4Developers » Blog Archive » A extinção do programador sênior -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/1up4dev.org/2010/07/a-extincao-do-programador-senior/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2010-07-29 11:49:10</wp:comment_date>
			<wp:comment_date_gmt>2010-07-29 14:49:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Rodrigo Panachi, Thiago Adamo and Sabrina Carmona, 01berto. 01berto said: RT @rpanachi: A extinção do programador sênior http://bit.ly/azpndu (via @01berto, @1up4dev) [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>461</wp:comment_id>
			<wp:comment_author><![CDATA[v.for.vedendetta]]></wp:comment_author>
			<wp:comment_author_email>v.for.vendetta.a@bol.com.br</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>187.45.254.63</wp:comment_author_IP>
			<wp:comment_date>2010-07-29 13:20:39</wp:comment_date>
			<wp:comment_date_gmt>2010-07-29 16:20:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Com certeza sua empresa está certa, e pelas perguntas mencionadas,  é uma empresa de "ponta" sem sombra de dúvida. Sem mencionar como sua posição superiora é honesta consegue contemplar as vertentes do mercado.

Como o capricho de uma imagem fictícia de "um programador sênior" pode levar a conclusões bobas e superficiais. 

É isso ai! Enquanto vocês procuram uma agulha no palheiro, o mundo gira e as coisas acontecem.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>462</wp:comment_id>
			<wp:comment_author><![CDATA[Habutre]]></wp:comment_author>
			<wp:comment_author_email>habutre@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>187.88.236.78</wp:comment_author_IP>
			<wp:comment_date>2010-07-29 17:56:06</wp:comment_date>
			<wp:comment_date_gmt>2010-07-29 20:56:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A dura realidade da nossa realidade!

Minha impressão é que SR/PL/JR não se busca mais por competencia ou conhecimento, mas sim pelo quanto o candidato pretende ganhar, somando ao seu curriculum que contem mais cursos e certificações que experiências.

Enfim, essas ararinhas azuis falam muito, e muitas empresas não querem ararinhas falantes e sim jabutis escaladores de árvores, porém bem quietinhos!

Parabéns pelo post!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>463</wp:comment_id>
			<wp:comment_author><![CDATA[AkitaOnRails]]></wp:comment_author>
			<wp:comment_author_email>boss@akitaonrails.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.akitaonrails.com</wp:comment_author_url>
			<wp:comment_author_IP>201.81.140.92</wp:comment_author_IP>
			<wp:comment_date>2010-07-29 20:50:39</wp:comment_date>
			<wp:comment_date_gmt>2010-07-29 23:50:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Concordo, falei sobre isso recentemente também (http://info.abril.com.br/noticias/rede/gestao20/gestao/contratacao-entrevistas-e-candidatos/) e eu tive esse problema várias vezes há anos. No final o que acontece é arriscar com candidatos "mais ou menos" e ver se com algum tempo de casa eles demonstram mais capacidade.

E as perguntas que você fez, inclusive, não é nem para sênior. Um júnior, pelo menos um "pleno" deveria saber responder satisfatoriamente em segundos. 

Eu costumo dizer que 9 em cada 10 candidatos que se dizem ser "programadores" não chegam nem perto do mínimo, nem sei porque eles nos fazem perder nosso tempo em entrevistá-los. É que nem um candidato a motorista chegar sem saber sequer como girar a chave no contato! 

Aliás, eu sei porque eles existem: porque há empresas que contratam!! O que demonstra, por sua vez, a pobreza das pessoas responsáveis por essas contratações.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>466</wp:comment_id>
			<wp:comment_author><![CDATA[Humberto]]></wp:comment_author>
			<wp:comment_author_email>humberto.bulhoes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://myidlethread.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>189.120.67.253</wp:comment_author_IP>
			<wp:comment_date>2010-07-30 11:22:50</wp:comment_date>
			<wp:comment_date_gmt>2010-07-30 14:22:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@v.for.vedendetta - Sim, às vezes tenho a impressão que perseguimos uma ficção de "programador sênior". A imagem da agulha em palheiro ilustra bem. Quem dera que a empresa fosse de ponta! Assim poderia funcionar como íma no palheiro. Fica a dúvida: será que, enquanto isso não acontece, vale a pena nos contentarmos com a palha?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>461</wp:comment_parent>
			<wp:comment_user_id>4</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>467</wp:comment_id>
			<wp:comment_author><![CDATA[Humberto]]></wp:comment_author>
			<wp:comment_author_email>humberto.bulhoes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://myidlethread.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>189.120.67.253</wp:comment_author_IP>
			<wp:comment_date>2010-07-30 11:25:41</wp:comment_date>
			<wp:comment_date_gmt>2010-07-30 14:25:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A impressão é complementar à minha. Parece que a carreira em desenvolvimento permite uma progressão automática que não depende tanto da capacidade ou potencial, e sim do tempo corrido. É um pouco desanimador.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>462</wp:comment_parent>
			<wp:comment_user_id>4</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>476</wp:comment_id>
			<wp:comment_author><![CDATA[Leandro]]></wp:comment_author>
			<wp:comment_author_email>ltcmelo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://0xc0de.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>87.160.188.75</wp:comment_author_IP>
			<wp:comment_date>2010-07-31 19:37:45</wp:comment_date>
			<wp:comment_date_gmt>2010-07-31 22:37:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Realidade... bem característica do Brasil. Talvez pelo fato de que programadores experientes não sejam valorizados pelas empresas (existe a idéia de que qualquer um "sabe programar"). As causas são parte de um buraco ainda mais fundo, relacionados com a falta de incentivo a pesquisa no país e vários outros assuntos.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>489</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email>roger.leite@1up4dev.org</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>189.125.221.100</wp:comment_author_IP>
			<wp:comment_date>2010-08-04 09:40:41</wp:comment_date>
			<wp:comment_date_gmt>2010-08-04 12:40:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Concordo literalmente com o Leandro.
Acontece que já e difícil achar um "verdadeiro" programador, e este, nunca é valorizado. Muita gente no mercado, começa como programador pra "virar" gerente, aliás, as próprias empresas "matam" ótimos programadores os forçando a virar gerente.

Carreira em Y é a buzzword mais fake do universo !

Resumindo, vai ser muito difícil achar algum senior, eu tentaria achar alguém apaixonado por programação nem que tenha pouco tempo de mercado.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>490</wp:comment_id>
			<wp:comment_author><![CDATA[Rodrigo Panachi]]></wp:comment_author>
			<wp:comment_author_email>rodrigopanachi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org</wp:comment_author_url>
			<wp:comment_author_IP>189.125.221.101</wp:comment_author_IP>
			<wp:comment_date>2010-08-04 14:43:42</wp:comment_date>
			<wp:comment_date_gmt>2010-08-04 17:43:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Humberto, procurar um programador "sênior" é uma tarefa difícil e arriscada. Acharia mais válido procurar um programador "ninja", que tenha paixão pelo que faz, que não seja contaminado pelas enterprises buzzwords, tenha uma ou outra certificação, menos de uma década de experiência e principalmente que não queira "virar" gerente ou arquiteto. Essa "espécie" não prioriza o dinheiro: programa por que sabe e gosta!

Parabéns pelo post!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>491</wp:comment_id>
			<wp:comment_author><![CDATA[Carlos Henrique]]></wp:comment_author>
			<wp:comment_author_email>cadu.henrique14@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.62.199.19</wp:comment_author_IP>
			<wp:comment_date>2010-08-04 15:09:21</wp:comment_date>
			<wp:comment_date_gmt>2010-08-04 18:09:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Se você procurar por um programador que ama o que faz, é bem possível que encontre profissionais que não são programadores por formação academica e, portanto, não saberiam responder muitas das perguntas que vocês mesmos propõe que sejam feitas em uma entrevista.

Nos últimos 10 anos, a evolução tecnológica colocou o desenvolvimento sob os holofotes do mercado profissional.

O resultado, você tem "programadores" que estudaram pensando apenas na carreira "enterprise" (estudo - certificado - gerência) e outros que se envolveram com a programação por outros meios.

E, para piorar, quase todos os negócios do mundo, desde empresas enterprise chatas até as empresas bacanas onde vocês devem trabalhar, tem um pilar tecnológico forte. Ou seja, dependem de alguma forma ou outra de desenvolvimento de software.

A pergunta é, o que vale mais; um bitolado repleto de conhecimento formal latente, com títulos "sênior" e certificações mas fundamentalmente limitado ou um programador "por amor e vocação", com conhecimento limitado em questões fundamentais e sujeito à picos-e-vales de produtividade e desmotivação em função do que faz?

Porque, convenhamos, não existe o meio termo.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>535</wp:comment_id>
			<wp:comment_author><![CDATA[-habutre]]></wp:comment_author>
			<wp:comment_author_email>habutre@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>187.119.110.151</wp:comment_author_IP>
			<wp:comment_date>2011-01-19 15:18:05</wp:comment_date>
			<wp:comment_date_gmt>2011-01-19 18:18:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Carlos Henrique na minha opinião, falta maturidade das empresas e seus gestores sobre como avaliar e selecionar seus colaboradores.

É legal ter um programador que consegue pensar no negócio e não apenas em código, mas a recíproca tem de ser verdadeira. Se o negócio não  enxerga  a tecnologia como parte dele, como estratégia fundamental e indivisível, fatalmente teremos essas ocorrências.
Um cara que fala bonito, de vocabulário primoroso vai levar no bico qualquer entrevista, porque as pessoas que em geral seleciona pessoal, gosta disso. Gente que sabe envolver, que usa doces palabras pra vender seu peixe. E aí o mais importante fica de lado, o conhecimento e desenvoltura para resolver um problema técnico, de arquitetura, etc.

Ainda não consegui ver nenhum lugar que consiga apreender cada uma dessas características no momento de contratar.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>605</wp:comment_id>
			<wp:comment_author><![CDATA[Torne-se excelente | 1up4developers]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2011/02/torne-se-excelente/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2011-02-22 06:03:07</wp:comment_date>
			<wp:comment_date_gmt>2011-02-22 09:03:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] a pena ou não fazer faculdade, a idéia aqui é apenas gerar reflexão e reforçar o que vimos falando nos últimos posts. [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>998</wp:comment_id>
			<wp:comment_author><![CDATA[Alcebiades Barbosa]]></wp:comment_author>
			<wp:comment_author_email>al.barbosa@globomail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>164.85.68.11</wp:comment_author_IP>
			<wp:comment_date>2012-09-10 11:12:10</wp:comment_date>
			<wp:comment_date_gmt>2012-09-10 14:12:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Será que esta dificuldade em contratatar programadores seniores acontece porque após um tempo os programadores se tornam gerentes, analistas ou algum outro cargo?
Acho que o cargo de programador muitas vezes não é valorizado. Em muitos casos é visto como um trabalho mecânico, de apenas transformar especificações em código. Como se fosse uma coisa direta.
Então após um tempo os programadores buscam outros cargos para obterem melhores salários e mais valorização.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3345</wp:comment_id>
			<wp:comment_author><![CDATA[FizzBuzz para identificar programadores? |]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://bdexterholland.wordpress.com/2010/08/19/fizzbuzz-para-identificar-programadores/</wp:comment_author_url>
			<wp:comment_author_IP>66.155.8.109</wp:comment_author_IP>
			<wp:comment_date>2013-06-01 00:26:10</wp:comment_date>
			<wp:comment_date_gmt>2013-06-01 03:26:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] algumas coisinhas na web, acabei por encontrar uma técnica para saber se o programador pode ou não ser classificado como [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Teste de integração com Rspec 1.x e Capybara na sua app Rails</title>
		<link>http://1up4dev.org/2010/08/teste-de-integracao-com-rspec-1-x-e-capybara-na-sua-app-rails/</link>
		<pubDate>Mon, 09 Aug 2010 10:00:35 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=704</guid>
		<description></description>
		<content:encoded><![CDATA[Este não é daqueles posts que explicam o que é rspec, testes, diferenças entre teste funcional, integração e etc. Este post é só uma rapidinha, pra quem já conhece <a title="Rspec home" href="http://rspec.info/">rspec</a> e <a title="capybara" href="http://github.com/jnicklas/capybara">capybara</a>.

A documentação do Capybara é boa, mas deixa a desejar nas instruções de como integrá-lo somente com rspec. Com a ajuda do <a href="http://blog.georgeguimaraes.com/">George Guimarães</a> da <a href="http://blog.plataformatec.com.br/">Plataforma</a>, cheguei num passo a passo mega simples.

No <em>config/environments/test.rb</em> declare:
<pre lang="ruby">config.gem "rspec",            :version =&gt; "= 1.3.0", :lib =&gt; false
config.gem "rspec-rails",      :version =&gt; "= 1.3.2", :lib =&gt; false
config.gem "capybara",         :version =&gt; "= 0.3.9", :lib =&gt; false</pre>
No <em>spec/spec_helper.rb</em> coloque:
<pre lang="ruby">require 'capybara/rails'
[...]
Spec::Runner.configure do |config|

  [...]
  config.include(Capybara, :type =&gt; :integration)

end</pre>
Pronto! Isto é o suficiente para utilizar o Capybara nos testes de integração.
Para finalizar, você pode montar um teste simples de validação. Por exemplo:

Crie <em>spec/integration/site_spec.rb</em> e coloque:
<pre lang="ruby">require 'spec_helper'

describe "Site sample" do

  context "root" do

    before do
      visit root_url
      save_and_open_page
    end

    it "should have Hello" do
      page.should have_content("Hello")
    end

  end

end</pre>
Para executar somente os testes de integração:
<pre>rake spec:integration</pre>
<h2>have_content e um hot tip que pode te salvar muitas horas !</h2>
Caso aconteça o erro:
<pre>undefined method `have_content' for #&lt;ActionController::Integration::Session:0xb618ad10&gt;</pre>
Graças a esta mensagem <a href="http://groups.google.com/group/ruby-capybara/browse_thread/thread/28467e031beb7ba1/19a368c21a278eb8?lnk=gst&amp;q=have_content#19a368c21a278eb8">Can't make matchers work with cucumber and rails 2.3.2</a>, descobri que o <em>have_content</em> não funciona com o rails 2.3.2, eu resolvi o problema fazendo um upgrade para a última versão do rails. #ficaadica

Dúvidas, melhorias, sugestões e elogios são sempre bem vindos !]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>704</wp:post_id>
		<wp:post_date>2010-08-09 07:00:35</wp:post_date>
		<wp:post_date_gmt>2010-08-09 10:00:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>teste-de-integracao-com-rspec-1-x-e-capybara-na-sua-app-rails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="rspec"><![CDATA[rspec]]></category>
		<category domain="post_tag" nicename="ruby-on-rails"><![CDATA[ruby on rails]]></category>
		<category domain="post_tag" nicename="testes-unitarios"><![CDATA[testes unitários]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077688]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>528</wp:comment_id>
			<wp:comment_author><![CDATA[mairon]]></wp:comment_author>
			<wp:comment_author_email>maironcontatos@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://maironbrasil.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>190.52.138.220</wp:comment_author_IP>
			<wp:comment_date>2010-12-10 15:12:19</wp:comment_date>
			<wp:comment_date_gmt>2010-12-10 18:12:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[massa  abraco

http://maironbrasil.wordpress.com/2010/12/10/o-comovente-guia-de-ruby-do-why-em-pdf/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>529</wp:comment_id>
			<wp:comment_author><![CDATA[mairon]]></wp:comment_author>
			<wp:comment_author_email>maironcontatos@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://maironbrasil.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>200.85.59.110</wp:comment_author_IP>
			<wp:comment_date>2010-12-14 09:18:27</wp:comment_date>
			<wp:comment_date_gmt>2010-12-14 12:18:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[vamos que vamos
  http://maironbrasil.wordpress.com/2010/12/14/parana-on-rails-cidades-sede/ 
 abraco]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Criando um WebCrawler de modo fácil e rápido com Ruby e Nokogiri</title>
		<link>http://1up4dev.org/2011/01/criando-um-webcrawler-de-modo-facil-e-rapido-com-ruby-e-nokogiri/</link>
		<pubDate>Tue, 18 Jan 2011 09:00:41 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=725</guid>
		<description></description>
		<content:encoded><![CDATA[Quantas vezes você precisou buscar alguma informação externa para sua aplicação, como um número de telefone ou uma foto em algum site? A idéia é simples: criar um <a href="http://en.wikipedia.org/wiki/Web_crawler" target="_blank">crawler</a> script para fazer parse de algum conteúdo HTML. E basta apenas Ruby e <a href="http://nokogiri.org/" target="_blank">Nokogiri</a>.
<h3>Exemplo</h3>
Digamos que eu queira obter a última versão de uma dada gem consultando diretamente no site <a href="http://rubygems.org/">http://rubygems.org</a> para me ajudar quando precisar instalar novas gems no meu ambiente. Vamos ao código:
<pre lang="bash">#!/usr/bin/env ruby

require "rubygems"
require "open-uri"
require "nokogiri"

gem = ARGV[0]
site = open("http://rubygems.org/gems/#{gem}")
document = Nokogiri::HTML(site)
version = document.css(".title h3").text

puts "#{gem} version #{version}"</pre>
Vou salvar esse script no arquivo <code>gem-version.sh</code>, torna-lo executável com <code>chmod +x gem-version.sh</code> em seguida executar no terminal:
<pre lang="bash">$ ./gem-version rails
  rails version 3.0.3</pre>
Pronto, agora você também pode brincar à vontade com <a href="http://github.com/tenderlove/nokogiri" target="_blank">Nokogiri</a> no seu shell!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>725</wp:post_id>
		<wp:post_date>2011-01-18 06:00:41</wp:post_date>
		<wp:post_date_gmt>2011-01-18 09:00:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>criando-um-webcrawler-de-modo-facil-e-rapido-com-ruby-e-nokogiri</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="shellscript"><![CDATA[shellscript]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1757752855]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>533</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Criando um WebCrawler de modo fácil e rápido com Ruby e Nokogiri | 1up4developers -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/1up4dev.org/2011/01/criando-um-webcrawler-de-modo-facil-e-rapido-com-ruby-e-nokogiri/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2011-01-18 07:16:00</wp:comment_date>
			<wp:comment_date_gmt>2011-01-18 10:16:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Rodrigo Panachi. Rodrigo Panachi said: Novo post: Criando um WebCrawler de modo fácil e rápido com Ruby e Nokogiri http://goo.gl/Dfd4g #1up4dev [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Voltamos!</title>
		<link>http://1up4dev.org/2011/01/voltamos/</link>
		<pubDate>Mon, 17 Jan 2011 10:00:23 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=734</guid>
		<description></description>
		<content:encoded><![CDATA[Caros leitores, depois de um período, digamos <em>boring</em>, estamos de volta e com novidades!

Durante o ano de 2010 estivemos trabalhando muito, por isso a baixa frequencia de posts. Porém tanto trabalho rendeu experiências únicas para todos nós, as quais pretendemos compartilhar com vocês em breve.
<h2><span style="color: #444444;">Novos rebeldes colaboradores</span></h2>
<a href="http://twitter.com/habutre" target="_blank">Rogério Ramos</a>

Desenvolvedor, entusiasta, sonhador. Acredita que desenvolvedores e usuários devem trabalhar sempre a quatro mãos. Veterano com agile e Scrum, está iniciando sua jornada com com Ruby on Rails.

<a href="http://twitter.com/p_balduino" target="_blank">Plínio Balduino</a>

Desenvolvedor, baixista musicólatra, test addicted, viciado em leitura, "pragmático, sarcástico, curioso" e pai do Gustavinho. Esperem posts ácidos sobre Scrum e dicas práticas de Rails.

Sejam bem vindos à <a href="http://1up4dev.org/1up-nightmare-team/" target="_blank">guerrilha</a>!
<h2><span style="color: #444444;">E não é só isso!</span></h2>
Estreiamos o novo tema, mais limpo e distribuído, facilitando a leitura dos códigos inline. O endereço do feed também mudou: atualizem seus leitores para o endereço <a href="http://feeds.feedburner.com/1up4developers">http://feeds.feedburner.com/1up4developers</a>. E quem ainda não assinou, assine <em>d-já</em>!

Fiquem a vontade para comentar (ou não). Sucesso!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>734</wp:post_id>
		<wp:post_date>2011-01-17 07:00:23</wp:post_date>
		<wp:post_date_gmt>2011-01-17 10:00:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>voltamos</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Usando Bundler com Rails 2.3</title>
		<link>http://1up4dev.org/2011/01/usando-bundler-com-rails-2-3/</link>
		<pubDate>Mon, 17 Jan 2011 11:00:55 +0000</pubDate>
		<dc:creator>pbalduino</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=745</guid>
		<description></description>
		<content:encoded><![CDATA[Iniciando minha participação neste blog, vou apresentar uma solução rápida para um problema que eu tive e levei um certo tempo para encontrar uma resposta.

Caso você não conheça, Bundler é uma ferramenta criada para facilitar a instalação e atualização de aplicações e suas gems, resolvendo facilmente as dependências e criando ambientes homogêneos em máquinas diferentes. Em outras palavras, resolve de uma vez por todas aquele inferno que era ter que baixar gem por gem da sua aplicação e ainda assim correr o risco de encontrar alguma incompatibilidade.

O Rails 3 utiliza o Bundler por padrão, mas aplicações em Rails 2.x ainda dependem das gems declaradas no arquivo <code>config/environment.rb</code>, e ao copiar os arquivos para uma determinada máquina, você é obrigado a usar <code>rake gems:install</code>, que vai levar algum tempo rodando e não vai instalar tudo o que você precisa.

Ou pelo menos era assim que funcionava até você ler esse post.

Primeiro, considerando que você esteja no diretório raiz da sua aplicação, execute a sequência abaixo:

Antes de qualquer outra coisa, instale o Bundler na sua máquina executando o comando <code>gem install bundler</code>

No seu arquivo <code>config/boot.rb</code>, imediatamente antes da linha <code>Rails.boot!</code>, insira o bloco abaixo:
<pre lang="ruby">class Rails::Boot
  def run
    load_initializer

    Rails::Initializer.class_eval do
      def load_gems
        @bundler_loaded ||= Bundler.require :default, Rails.env
      end
    end

    Rails::Initializer.run(:set_load_path)
  end
end
</pre>
Crie um arquivo <code>config/preinitializer.rb</code>. Esse arquivo não existe no Rails 2.x, então se você não criar, não vai funcionar. Adicione as linhas abaixo nesse arquivo:
<pre lang="ruby">begin
  require "rubygems"
  require "bundler"
rescue LoadError
  raise "Could not load the bundler gem. Install it with `gem install bundler`."
end

if Gem::Version.new(Bundler::VERSION) <= Gem::Version.new("0.9.24")
  raise RuntimeError, "Your bundler version is too old for Rails 2.3." +
   "Run `gem install bundler` to upgrade."
end

begin
  # Set up load paths for all bundled gems
  ENV["BUNDLE_GEMFILE"] = File.expand_path("../../Gemfile", __FILE__)
  Bundler.setup
rescue Bundler::GemNotFound
  raise RuntimeError, "Bundler couldn't find some gems." +
    "Did you run `bundle install`?"
end
</pre>
Crie um arquivo chamado <code>Gemfile</code> no raiz da sua aplicação. Entre em <code>config/environment.rb</code>, remova todas as instruções config.gem e as adicione no arquivo <code>Gemfile</code> conforme abaixo, sem o prefixo <code>config.</code> (ponto incluído).

Seu arquivo <code>config/environment.rb</code> era assim:
<pre lang="ruby"># Be sure to restart your server when you modify this file

# Specifies gem version of Rails to use when vendor/rails is not present
RAILS_GEM_VERSION = '2.3.10' unless defined? RAILS_GEM_VERSION

# Bootstrap the Rails environment, frameworks, and default configuration
require File.join(File.dirname(__FILE__), 'boot')

Rails::Initializer.run do |config|
  # Settings in config/environments/* take precedence over those specified here.
  # Application configuration should go into files in config/initializers
  # -- all .rb files in that directory are automatically loaded.

  # Add additional load paths for your own custom dirs
  # config.load_paths += %W( #{RAILS_ROOT}/extras )

  # Specify gems that this application depends on and have them installed with rake gems:install
  config.gem "bj"
  config.gem "hpricot", :version => '0.6', :source => "http://code.whytheluckystiff.net"
  config.gem "sqlite3-ruby", :lib => "sqlite3"
  config.gem "aws-s3", :lib => "aws/s3"
  config.gem "authlogic", :version => "=2.1.6"
  config.gem "slim_scrooge", "=1.0.10"

  # Only load the plugins named here, in the order given (default is alphabetical).
  # :all can be used as a placeholder for all plugins not explicitly named
  # config.plugins = [ :exception_notification, :ssl_requirement, :all ]

  # Skip frameworks you're not going to use. To use Rails without a database,
  # you must remove the Active Record framework.
  # config.frameworks -= [ :active_record, :active_resource, :action_mailer ]
end
</pre>
E agora é assim:
<pre lang="ruby"># Be sure to restart your server when you modify this file

# Specifies gem version of Rails to use when vendor/rails is not present
RAILS_GEM_VERSION = '2.3.10' unless defined? RAILS_GEM_VERSION

# Bootstrap the Rails environment, frameworks, and default configuration
require File.join(File.dirname(__FILE__), 'boot')

Rails::Initializer.run do |config|
  # Settings in config/environments/* take precedence over those specified here.
  # Application configuration should go into files in config/initializers
  # -- all .rb files in that directory are automatically loaded.

  # Add additional load paths for your own custom dirs
  # config.load_paths += %W( #{RAILS_ROOT}/extras )

  # Only load the plugins named here, in the order given (default is alphabetical).
  # :all can be used as a placeholder for all plugins not explicitly named
  # config.plugins = [ :exception_notification, :ssl_requirement, :all ]

  # Skip frameworks you're not going to use. To use Rails without a database,
  # you must remove the Active Record framework.
  # config.frameworks -= [ :active_record, :active_resource, :action_mailer ]
end
</pre>
Bem mais limpo, não?

Já o seu recém criado arquivo <code>Gemfile</code> vai ficar assim:
<pre lang="ruby">source 'http://gemcutter.org'
gem "bj"
gem "hpricot", "~> 0.6"
gem "sqlite3-ruby", "~> 1.3.1", :require => "sqlite3"
gem "aws-s3", :lib => "aws/s3"
gem "rails", "= 2.3.10"
gem "authlogic", "~> 2.1.6"

group :development, :test do
  gem 'mongrel', :require => false
end

group :production do
  gem "slim_scrooge", "~> 1.0.10"
end
</pre>
Note que eu criei dois grupos: um com <code>:development, :test</code> e um com <code>:production</code>. Significa que as gems do primeiro grupo somente serão utilizadas em desenvolvimento e em testes, e as do segundo grupo somente serão usadas no ambiente de produção. O que está fora dos grupos será usado em qualquer ambiente.

Agora, finalmente você digita <code>bundle install</code>, aguarda alguns instantes e pronto! A sua aplicação está com todas as gems instaladas e suas devidas dependências.

Para listar as gems utilizadas, execute <code>bundle list</code>.

Sugestões, correções e críticas são bem vindas nos comentários.

Para mais informações, leia a documentação no site do Bundle: <a href="http://gembundler.com/" target="_blank">http://gembundler.com/</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>745</wp:post_id>
		<wp:post_date>2011-01-17 08:00:55</wp:post_date>
		<wp:post_date_gmt>2011-01-17 11:00:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>usando-bundler-com-rails-2-3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077967]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>532</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Usando Bundler com Rails 2.3 | 1up4developers -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/1up4dev.org/2011/01/usando-bundler-com-rails-2-3/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2011-01-17 09:39:45</wp:comment_date>
			<wp:comment_date_gmt>2011-01-17 12:39:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Roger Leite. Roger Leite said: RT @p_balduino: Novo post no #1up4dev: Usando Bundler com Rails 2.3 - http://goo.gl/IZyY8 [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>787</wp:comment_id>
			<wp:comment_author><![CDATA[Eduardo]]></wp:comment_author>
			<wp:comment_author_email>edusferreira@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>177.40.172.83</wp:comment_author_IP>
			<wp:comment_date>2011-08-06 11:41:44</wp:comment_date>
			<wp:comment_date_gmt>2011-08-06 14:41:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It works!!!!!!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Deploy de várias aplicações no Nginx + Passenger usando subdomain ou suburi</title>
		<link>http://1up4dev.org/2011/01/deploy-de-varias-aplicacoes-no-nginx-passenger-usando-subdomain-ou-suburi/</link>
		<pubDate>Wed, 26 Jan 2011 10:00:59 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=770</guid>
		<description></description>
		<content:encoded><![CDATA[Se você está pensando em fazer o deploy da sua aplicação Rails em um server <a href="http://nginx.org/">Nginx</a> com <a href="http://www.modrails.com/">Phusion Passenger</a>, você está no caminho certo! Não apenas pela segurança e performance do Nginx, mas também pela facilidade de instalação e configuração quando comparado à outros web servers populares. 

A <a href="http://wiki.nginx.org/Install">instalação do Nginx</a> bem como <a href="http://www.modrails.com/install.html">configuração do módulo do Passenger</a> são relativamente simples. A documentação de <a href="http://www.modrails.com/documentation/Users%20guide%20Nginx.html#_installing_phusion_passenger">ambos é bem completa</a>. Você provavelmente não terá muita dificuldade. Eu recomendo seguir o passo-a-passo da instalação do Passenger:

<pre lang="bash">
  passenger-install-nginx-module
</pre>

Uma vez que tudo esteja instalado, é hora de configurar o Nginx editando o arquivo <code>nginx.conf</code> (provavelmente localizado em <code>/usr/local/nginx/conf/nginx.conf</code>)

<h3>Usando sub URI</h3>

O deploy como sub URI torna sua aplicação acessível com o endereço <code>http://dominio.com/app1</code>, sendo <code>app1</code> o nome da sua aplicação. Supondo que diretório público do Nginx esteja em <code>/var/www</code> e sua aplicação Rails em <code>/var/rails/app1</code>, configure-o assim:

<pre lang="ruby">
http {
    ...
    server {
        listen 80;
        server_name dominio.com www.dominio.com;
        root /var/www;
        passenger_enabled on;
        passenger_base_uri /app1;
    }
    ...
}
</pre>

Ainda é preciso criar um link simbólico para que o contexto da aplicação Rails seja visível pelo document root em <code>/var/www</code>:

<pre lang="bash">
ln -s /var/rails/app1/public /var/www/app1
</pre>

Reiniciando o Nginx, sua aplicação já estará rodando. Para adicionar outras aplicações, basta adicionar:

<pre lang="ruby">
        passenger_base_uri /app1;
        passenger_base_uri /app2;
        passenger_base_uri /app3;
</pre>

E em seguida criar os links simbólicos como descrito acima. Nota importante: em alguns casos, será necessário informar a URL relativa correta nas configurações do Rails:

<pre lang="ruby">
   config.action_controller.relative_url_root = "/app1"
</pre>

<h3>Usando subdomain</h3>

O deploy como subdomain torna sua aplicação acessível com o endereço <code>http://app1.dominio.com</code>. Basta configurar o Nginx como segue:

<pre lang="ruby">
http {
    ...
    server {
        listen 80;
        server_name app1.dominio.com;
        root /var/rails/app1/public;
        passenger_enabled on;
    }
    ...
}
</pre>

Note que o <code>root</code> aponta diretamente para o diretório "public" da aplicação Rails. Para fazer o deploy de outras aplicações como subdomínio, basta configurar outro "server", alterando <code>root</code> e o <code>server_name</code>:

<pre lang="ruby">
http {
    ...
    server {
        listen 80;
        server_name app1.dominio.com;
        root /var/rails/app1/public;
        passenger_enabled on;
    }
    ...
    server {
        listen 80;
        server_name app2.dominio.com;
        root /var/rails/app2/public;
        passenger_enabled on;
    }
    ...
}
</pre>

Uma vez que o DNS do host esteja corretamente configurado, suas aplicações estarão acessíveis em <code>http://app1.dominio.com</code>, <code>http://app2.dominio.com</code>, etc.

Dúvidas ou sugestões, utilizem os comentários. Sucesso!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>770</wp:post_id>
		<wp:post_date>2011-01-26 07:00:59</wp:post_date>
		<wp:post_date_gmt>2011-01-26 10:00:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>deploy-de-varias-aplicacoes-no-nginx-passenger-usando-subdomain-ou-suburi</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078668]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>542</wp:comment_id>
			<wp:comment_author><![CDATA[Rodrigo Panachi]]></wp:comment_author>
			<wp:comment_author_email>rodrigopanachi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://nobrokenwindow.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>189.125.221.100</wp:comment_author_IP>
			<wp:comment_date>2011-01-26 13:17:04</wp:comment_date>
			<wp:comment_date_gmt>2011-01-26 16:17:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Felipe, é possível definir o RAILS_ENV no bloco <code>server</code> com <code>rails_env production</code>, segundo a <a href="http://www.modrails.com/documentation/Users%20guide%20Nginx.html#RailsEnv" rel="nofollow">documentação do Nginx</a>.
Outra alternativa seria passar parâmetros pelo <a href="http://wiki.nginx.org/NginxHttpFcgiModule#fastcgi_param" rel="nofollow">módulo do FastCGI</a>, mas acho que a maneira que você está fazendo já é uma boa alternativa para isso.
Se souber de um jeito melhor, conte pra gente. Sucesso!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>541</wp:comment_id>
			<wp:comment_author><![CDATA[Felipe]]></wp:comment_author>
			<wp:comment_author_email>felipeelias@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>136.206.11.228</wp:comment_author_IP>
			<wp:comment_date>2011-01-26 11:11:51</wp:comment_date>
			<wp:comment_date_gmt>2011-01-26 14:11:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bom tutorial. Agora, pergunta: como você faz para passar variáveis de ambiente pra sua aplicação rails, tipo ENV['VAR']? 

Se que existe uma configuração do passenger (passenger_set_cgi_param) mas não consegui fazer funcionar. O único jeito foi colocando as variáveis dentro de /etc/defaults/nginx (no ubuntu). Já passou por esse problema?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>540</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Deploy de várias aplicações no Nginx + Passenger usando subdomain ou suburi | 1up4developers -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/1up4dev.org/2011/01/deploy-de-varias-aplicacoes-no-nginx-passenger-usando-subdomain-ou-suburi/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2011-01-26 08:35:53</wp:comment_date>
			<wp:comment_date_gmt>2011-01-26 11:35:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Roger Leite and Rodrigo Panachi, @pbalduino. @pbalduino said: RT @rpanachi: Novo post: Deploy de várias aplicações no Nginx + Passenger usando subdomain ou suburi http://goo.gl/WESZp #1up4dev [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3341</wp:comment_id>
			<wp:comment_author><![CDATA[Luiz Osorio]]></wp:comment_author>
			<wp:comment_author_email>cheantunes@uol.com.br</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>164.41.152.8</wp:comment_author_IP>
			<wp:comment_date>2013-05-27 10:45:54</wp:comment_date>
			<wp:comment_date_gmt>2013-05-27 13:45:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Olá amigo! Tentei disponibilizar duas aplicações Rails num mesmo servidor usando subdomain exatamente como o exemplo acima, mas só consigo que funcione aquela especificada no primeiro server block. Quando chamo no browser a segunda, o servidor me responde com a primeira :-)) . Estou lutando contra esse problema há semanas e não consigo ver onde estou errando. Poderia me dar uma força?
Muito obrigado!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Enviando emails no Rails através do Gmail</title>
		<link>http://1up4dev.org/2011/01/enviando-emails-no-rails-atraves-do-gmail/</link>
		<pubDate>Thu, 20 Jan 2011 09:00:09 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=774</guid>
		<description></description>
		<content:encoded><![CDATA[Enviar emails de uma aplicação Rails é <a href="http://guides.rubyonrails.org/action_mailer_basics.html">muito simples</a>. A parte complicada fica com a configuração do ambiente e do servidor de email. Se você não souber ou não tiver muita paciência para fazer isso (por exemplo instalar e configurar <a href="http://www.sendmail.org">sendmail</a>, <a href="http://www.mutt.org/">mutt</a>, etc), pode facilmente usar sua conta do <a href="http://lindsaar.net/2010/3/15/how_to_use_mail_and_actionmailer_3_with_gmail_smtp">Gmail</a> para enviar as mensagens da sua aplicação.

Basta incluir as seguintes configurações no bloco <code>config</code> dos respectivos ambientes da aplicação (por exemplo, <code>config/environments/production.rb</code>):
<pre lang="ruby">  config.action_mailer.delivery_method = :smtp
  config.action_mailer.smtp_settings = {
    :enable_starttls_auto => true,
    :authentication => :plain,
    :address => smtp.gmail.com,
    :port => 587,
    :user_name => "seuemail@gmail.com",
    :password => "suasenha"
  }</pre>
O toque mágico é a chave <code>:enable_startls_auto =&gt; true</code> para habilitar <a href="http://en.wikipedia.org/wiki/Transport_Layer_Security">TLS</a>. Sucesso!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>774</wp:post_id>
		<wp:post_date>2011-01-20 06:00:09</wp:post_date>
		<wp:post_date_gmt>2011-01-20 09:00:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>enviando-emails-no-rails-atraves-do-gmail</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077419]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>536</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Enviando emails no Rails através do Gmail | 1up4developers -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/1up4dev.org/2011/01/enviando-emails-no-rails-atraves-do-gmail/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2011-01-20 17:02:31</wp:comment_date>
			<wp:comment_date_gmt>2011-01-20 20:02:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Roger Leite, Rodrigo Panachi. Rodrigo Panachi said: Novo post: Enviando emails no Rails através do Gmail http://goo.gl/JBeo8 #1up4dev [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>559</wp:comment_id>
			<wp:comment_author><![CDATA[Junio Vitorino]]></wp:comment_author>
			<wp:comment_author_email>jgvitorino@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.59.141.222</wp:comment_author_IP>
			<wp:comment_date>2011-02-08 21:14:44</wp:comment_date>
			<wp:comment_date_gmt>2011-02-09 00:14:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bela dica Rodrigo, mas uma coisa interessante de resaltar é que o GMail tem um limite de envios, isto é, se você tem uma conta do GoogleApps você precisa ficar atento ao número de envios diários, que eu acho que não passam de 100. Eu não recomendaria a utilização desta técnica em produção para um aplicativo que possa ter um fluxo de envios muito grande.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1288</wp:comment_id>
			<wp:comment_author><![CDATA[Carlos]]></wp:comment_author>
			<wp:comment_author_email>carlos.jaun@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.47.82.229</wp:comment_author_IP>
			<wp:comment_date>2012-11-06 17:27:15</wp:comment_date>
			<wp:comment_date_gmt>2012-11-06 20:27:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Show de bola amigo, valew! Vi esse post http://blog.glaucocustodio.com/2012/11/06/enviando-emails-via-stmp-do-gmail-com-action-mailer-do-ruby-on-rails-ex-de-formulario-de-contato-e-model-sem-tabela/ que também me ajudou, abraços!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>TPW: e-mails vs reuniões</title>
		<link>http://1up4dev.org/2011/06/tpw-e-mails-vs-reunioes/</link>
		<pubDate>Mon, 13 Jun 2011 09:00:59 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=634</guid>
		<description></description>
		<content:encoded><![CDATA[A cilada típica em ambientes corporativos:

<img class="aligncenter" title="Ciclo corporativo" src="http://lh5.ggpht.com/_JtWk7d3YRZo/S6k6MYuywBI/AAAAAAAALCE/eTVUncdC1s8/ciclocorporativo.jpg" alt="Ciclo corporativo" width="558" height="551" />

&nbsp;
<h2>E agora, quem poderá nos ajudar?</h2>
Infelizmente, <strong>e-mails</strong> e <strong>reuniões</strong>, mesmo em ambientes ágeis, são inevitáveis, e na maioria das situações, tóxicos. Reuniões de 2 horas de duração ou 50 emails diários são sinais claros de que as coisas não andam muito bem.

Atitudes ágeis tendem a evitar "enrolações" que desviem o foco da equipe ou desacelerem a produtividade. A seguir, algumas estratégias e dicas que podemos aplicar para quebrar um pouco essas práticas corporativas cascateiras, ajudar a manter o foco da equipe e produzir mais.
<h2>Reuniões</h2>
Simplesmente <strong>evite reuniões</strong>, com temor! Tente resolver os problemas com <strong>conversas cara-a-cara</strong>, na sua mesa mesmo. Se precisar discutir um assunto por mais de 5 minutos, convide as pessoas envolvidas para um cafézinho, de preferência em pé.

Se não puder evitar a reunião, <strong>defina com antecipação</strong>: 1) o(s) <strong>objetivo</strong>(s) e 2) a <strong>duração máxima</strong>. Limite qualquer reunião a no máximo 5 participantes e duração de 15 minutos. Acredite: é  suficiente.

Se um problema for muito complexo para ser resolvido em uma reunião de 15 minutos, <strong>quebre o problema em problemas menores</strong>, e discuta um de cada vez. Os próximos problemas devem ser discutidos somente quando o problema anterior for resolvido.

Antes de começar qualquer discussão, faça com que todos presentes tomem ciência dos <strong>objetivos e da duração máxima</strong>. Assim que alcançarem os objetivos ou o tempo se esgotar, termine a discussão imediatamente! Não dê oportunidade para que alguém inicie uma nova discussão desnecessária.

<strong>Diga não</strong>! Em certas ocasiões, é a melhor resposta. Se você não é o responsável por determinado problema, desconhece ou não pode ajudar plenamente, simplesmente diga "não, obrigado".
<h2>E-mails</h2>
Alguns problemas podem ser resolvidos com um simples e-mail, é verdade. A única regra que devemos seguir é a do "passa, repassa ou paga". <strong>Não deixe os e-mails passarem das tréplicas</strong>. Se depois de 3 e-mails o problema ainda não foi resolvido, convide os envolvidos para tomar um cafezinho.

<strong>E-mail não é chat</strong>. O time deve conversar cara-a-cara, incluindo os clientes. Trocar mais do que 5 e-mails diários entre a equipe é um mau sinal. Se não puder falar pessoalmente, <strong>use o telefone ou skype</strong> ao invés de mandar um e-mail que pode ser facilmente ignorado pelo destinatário.

<strong>E-mail não é documentação</strong>. Não é preciso enviar um e-mail a cada decisão tomada pelo cliente ou pelo time. Se algo importante foi decidido, converse pessoalmente com os envolvidos.

Finalmente, use o e-mail com sabedoria, para trocar informações importantes e relevantes entre a equipe. <strong>E-mail não deve ser regra</strong>, e sim um suporte para comunicação entre a equipe. Lembre-se: <strong>quanto mais e-mails você enviar, maior a chance de ser ignorado.</strong>
<h2>Resumo</h2>
Reuniões e e-mails são tóxicos. Evite-os! Se não puder evitar, use-os com sabedoria.

Se identificou com alguma situação? Acha que essas dicas "choveram no molhado"? Concorda, discorda, quer complementar algo? Use os comentários.

<strong>Reflexão: quais dessas práticas você aplica no seu cotidiano profissional?</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>634</wp:post_id>
		<wp:post_date>2011-06-13 06:00:59</wp:post_date>
		<wp:post_date_gmt>2011-06-13 09:00:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tpw-e-mails-vs-reunioes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cascata"><![CDATA[cascata]]></category>
		<category domain="category" nicename="processos"><![CDATA[processos]]></category>
		<category domain="category" nicename="questionamento"><![CDATA[questionamento]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[21,1,2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078420]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>766</wp:comment_id>
			<wp:comment_author><![CDATA[JURANDI OLIVEIRA MARTINS]]></wp:comment_author>
			<wp:comment_author_email>martinsmt@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.99.105.205</wp:comment_author_IP>
			<wp:comment_date>2011-06-24 09:30:16</wp:comment_date>
			<wp:comment_date_gmt>2011-06-24 12:30:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muito importante estas dicas, no ambiente corporativo não devemos usar o tempo com comunicações desnecessarias.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2758</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Benseler]]></wp:comment_author>
			<wp:comment_author_email>cbenseler@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.chrisb.com.br</wp:comment_author_url>
			<wp:comment_author_IP>189.62.7.16</wp:comment_author_IP>
			<wp:comment_date>2013-02-22 10:50:51</wp:comment_date>
			<wp:comment_date_gmt>2013-02-22 13:50:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA["Simplesmente evite reuniões, com temor! " #epicwin]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1263</wp:comment_id>
			<wp:comment_author><![CDATA[José Aurélio]]></wp:comment_author>
			<wp:comment_author_email>joseaposser@yahoo.com.br</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>200.182.169.82</wp:comment_author_IP>
			<wp:comment_date>2012-10-30 13:46:49</wp:comment_date>
			<wp:comment_date_gmt>2012-10-30 16:46:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA["E-mail não é documentação." Mas infelizmente é necessário documentar decisões. Que a decisão deve ser tomada "pessoalmente com [todos] os envolvidos" concordo plenamente, mas infelizmente na nossa área nunca uma decisão é final, e quando menos se espera, a decisão, o escopo, a solução é modificada sem uma das partes envolvidas ter ciência, e ai se entra no loop novamente (+ e-mails e + reuniões).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Complexidade não escala!</title>
		<link>http://1up4dev.org/2011/02/complexidade-nao-escala/</link>
		<pubDate>Tue, 01 Feb 2011 09:00:00 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=800</guid>
		<description></description>
		<content:encoded><![CDATA[Este é um assunto polêmico e que gera muita discussão nos escritórios de TI. Mesmo assim, tendo trabalhado em várias empresas, grandes e pequenas, presenciando vários projetos fracassarem por decisões arquiteturais (as gerenciais não contam nesse contexto), e os mesmos erros sendo cometidos repetidas vezes, sinto-me na obrigação de passar esta experiência e meu ponto de vista.
<h3>Escalabilidade, por definição</h3>
De acordo com a <a href="http://en.wikipedia.org/wiki/Scalability">Wikipedia</a>, <strong>escalabilidade</strong> <em>é uma característica desejável em todo o sistema que indica sua habilidade de manipular uma porção crescente de trabalho de forma uniforme, ou estar preparado para crescer.</em> Em outras palavras, um sistema deve estar preparado para suportar uma demanda crescente.

Pode ser classificada como:
<ul>
<li>Carga de escalabilidade: um sistema distribuído deve ser fácil para ser expandido e usar sua gama de recursos para acomodar tanto exigências do mesmo sendo elas pouca ou excessiva.</li>
<li>Geograficamente escalável: um sistema é geograficamente escalável quando ele mantém sua utilidade e usabilidade, não obstante como são usados os seus recursos.</li>
<li>Escalabilidade administrativa: não importa a variação de informação que diferentes organizações necessitam compartilhar em um único sistema distribuído, ele deve permanecer fácil de ser usado e gerenciado.</li>
<li>Escalabilidade funcional: capacidade de melhorar o sistema, adicionando novas funcionalidades com mínimo esforço.</li>
</ul>
Pode ser aplicada como:
<ul>
<li><strong>Escalabilidade Vertical</strong> (scale up): significa adicionar recursos em um único nó do sistema (mais memória ou um disco rígido mais rápido).</li>
<li><strong>Escalabilidade Horizontal</strong> (scale out): significa adicionar mais nós ao sistema, tais como adicionar um novo computador com uma aplicação para clusterizar o software. Você pode encontrar escalabilidade horizontal nos sabores <a href="http://pt.wikipedia.org/wiki/Computa%C3%A7%C3%A3o_distribu%C3%ADda">Sistemas Distribuídos</a>, <a href="http://en.wikipedia.org/wiki/Enterprise_JavaBean">Serviços de Componentes</a>, <a href="http://pt.wikipedia.org/wiki/Service-oriented_architecture">SOA</a>, <a href="http://en.wikipedia.org/wiki/System_of_systems">System of Systems</a>, etc.</li>
</ul>
<a href="http://escalabilidade.com"><img src="http://1up4dev.org/wp-content/uploads/2011/01/scale-up-300x150.png" alt="Escalabilidade" title="Escalabilidade" width="300" height="150" class="aligncenter size-medium wp-image-828" /></a>
Do ponto de vista do custo de desenvolvimento, manutenção e suporte, eu defino escalabilidade como: caro (complexo) vs. barato (simples). Porém, o que é caro nem sempre é bom... e vice versa.
<h3>Analogias com o mundo real</h3>
Nós gostamos de fazer <a href="http://en.wikipedia.org/wiki/Extreme_programming_practices#System_metaphor">analogias com coisas reais</a>, são ótimas para expressar idéias e facilitar a comunicação.

Call centers, ou centrais de atendimento. Se você mora no Brasil provavelmente já perdeu algumas horas de sua vida pendurado no telefone tentando resolver um problema com sua assinatura de celular, internet, TV, energia elétrica, etc. Mas por que isso acontece?
Provavelmente, essas centrais de atendimento começaram com poucos funcionários, porém foram "projetadas" para crescer conforme a demanda. Basta contratar mais funcionários, dar treinamento e pronto: mais "nós" atendendo as requisições. Entretanto, o processo passa a ser mais complexo e mais burocrático, pois é muita informação para disseminar entre os funcionários. Resultado: alto custo para empresa e pouco resultado para os clientes. A espera ainda existe e quando finalmente somos atendidos, a sensação é de estar falando com um robô, que dificilmente entenderá seu problema e dará uma solução padrão ou insatisfatória para o mesmo.

<a href="http://1up4dev.org/wp-content/uploads/2011/01/call-center.jpg"><img src="http://1up4dev.org/wp-content/uploads/2011/01/call-center-300x225.jpg" alt="Call Center" title="Call Center" width="300" height="225" class="aligncenter size-medium wp-image-820" /></a>

O processo é adequado para escalar a demanda horizontalmente, o que o torna complexo e não garante a qualidade. Vale lembrar que o <a href="http://pt.wikipedia.org/wiki/Sistemas_computacionais">software</a> apenas automatiza ou apóia a realização dos processos reais. Se o processo é complexo, o software será tão complexo quanto (e em alguns casos até mais complexo).

Um exemplo diferente: o <a href="http://pt.wikipedia.org/wiki/Volkswagen_Fusca">Fusca</a>. É um dos carros mais simples que existem, não precisa nem de refrigeração a água. Costuma-se dizer que pode ser consertado com um alicate e um rolo de arame. Seu custo de fabricação seria mínimo se comparado com o custo de um carro popular moderno. Ok, não oferece a mesma segurança, velocidade e conforto de um carro moderno, mas ambos conseguem transportar 5 passageiros ao destino desejado.

<a href="http://1up4dev.org/wp-content/uploads/2011/01/fuka_herbie_oval.jpg"><img class="aligncenter size-medium wp-image-810" title="Fusca" src="http://1up4dev.org/wp-content/uploads/2011/01/fuka_herbie_oval-300x210.jpg" alt="Fusca" width="300" height="210" /></a>

Mas o que um Fusca têm a ver com escalabilidade? Bem, imagine um congestionamento na véspera de um feriado, por exemplo. Tanto o Fusca quanto o carro moderno ficarão parados na mesma fila de farofeiros. Toda tecnologia, complexidade e custo da fabricação do carro moderno não o livra de um congestionamento. Não há projeto que consiga prever ou contornar esse problema.

<a href="http://1up4dev.org/wp-content/uploads/2011/01/baleia1.jpg"><img class="aligncenter size-medium wp-image-811" title="Twitter" src="http://1up4dev.org/wp-content/uploads/2011/01/baleia1-300x225.jpg" alt="Twitter" width="300" height="225" /></a>

Voltando para nossa realidade, em certos casos o custo não paga o benefício. Mesmo um sistema bem planejado, distribuído, separado em camadas e serviços independentes, pode não suportar a demanda, seja de carga ou de funcionalidade. O mesmo aconteceria com um sistema mais simples arquiteturalmente, com certeza. Porém, o custo e velocidade de desenvolvimento e manutenção seria bem menor.

<h3>O que fazer então?</h3>

Sistemas precisam evoluir de acordo com a necessidade. <a href="http://merbist.com/2011/01/31/designing-for-scalability/">Projetar um sistema</a> prevendo todos os possíveis "casos de uso" bem como suas hipotéticas cargas (ou acessos) é uma forte característica do <em>waterfall</em>. Sistemas mais simples arquiteturalmente evoluem mais facilmente, em outras palavras, escalam mais facilmente:

<ul>
<li><a href="http://pt.wikipedia.org/wiki/Keep_It_Simple"><strong>Keep it simple, stupid</strong></a>! Soluções simples geralmente custam menos e trazem retorno mais rápido. Qualquer funcionalidade ou recurso que não agregue valor deve ser descartada. Simples assim!</li>
<li><strong>Simplifique requisitos</strong>. Clientes <em>sem</em> software costumam <em>viajar</em> nos requisitos. Converse, escute e entenda exatamente seus <a href="http://1up4dev.org/2008/11/foco-no-problema/">PROBLEMAS</a>, então <a href="http://pt.wikipedia.org/wiki/YAGNI">negocie</a> e sugira uma SOLUÇÃO simples e rápida. E a <a href="http://pragprog.com/titles/prj/ship-it">entregue</a> logo!</li>
<li><strong>Busque soluções prontas</strong>. As necessidades dos clientes, em muitos casos, são parecidas. Provavelmente existe alguma solução pronta que você pode entregar para seu cliente ao invés de desenvolver um novo [software que todos conhecem] do zero.</li>
<li><strong>Otimize sua infra-estrutura</strong>. Procure a melhor forma de deploy da aplicação. Qual hardware é mais adequado, qual sistema operacional e arquitetura. Faça tunning do webserver (workers, pool, memória), módulos e load balance. Utilize uma versão otimizada do interpretador, como o <a href="http://www.rubyenterpriseedition.com/">Ruby Enterprise Edition</a>, <a href="http://www.jruby.org/">JRuby</a> ou <a href="http://rubini.us/">Rubinius</a>.</li>
<li><strong>Monitore sua aplicação</strong>. Uma vez que esteja em produção, monitore-a em busca de gargalos e possíveis pontos de otimização. Existem várias ferramentas para ajudá-lo nessa tarefa, como o <a href="http://hoptoadapp.com/">Hoptoad</a>, <a href="http://newrelic.com/">NewRelic</a>, ou até mesmo o <a href="http://rubini.us/doc/en/tools/profiler/">Rubinius Profiler</a>.</li>
<li><strong>Otimize sua aplicação</strong>. O log é seu melhor amigo no desenvolvimento. Não ignore queries demoradas ou que geram <a href="http://rails-bestpractices.com/posts/29-fix-n-1-queries">N+1</a>, otimize-as! Faça <em>profiling</em>, analise e otimize o código. Utilize <em>caching</em> para serviços externos e para páginas. Caching pode ser a melhor alternativa para turbinar sua aplicação, mas use-o com sabedoria. Bancos de dados não devem ser um problema, por isso saiba escolher a melhor distribuição para seu caso. Mesmo que <a href="http://nosql-database.org/">NoSQL</a> esteja na moda, não quer dizer que é a melhor solução para sua aplicação (a menos que seja necessário para o negócio).</li>
<li><strong>Simplifique o desenvolvimento</strong>. Fameworks ajudam bastante, mas use-os com sabedoria para não inflar o <em>stack</em> da aplicação. Em certas situações, vale mais a pena desenvolver algo simples do zero do que utilizar algo pronto, pesado e que precise ser adaptado para sua necessidade. Escreva menos: quanto menor seu código, mais rápido será sua execução. Camadas são perigosas: evite rodeios e escreva código que realmente interessa. E lembre-se: sempre existe uma ferramenta certa para cada problema.</li>
</ul>

<h3>SIMPLIFIQUE!</h3>

Tenha sempre a palavra <a href="http://zenhabits.net/simple-living-manifesto-72-ideas-to-simplify-your-life/"><strong>SIMPLES</strong></a> gravada na sua mente. Se uma coisa exigir muito esforço para ser feita, talvez nem valha a pena. Volte para o início, pense novamente e busque uma ALTERNATIVA mais rápida/fácil/barata. Quanto melhor for sua técnica, melhor serão suas escolhas. <a href="http://blip.tv/file/2733212">Pratique constantemente</a>. ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>800</wp:post_id>
		<wp:post_date>2011-02-01 06:00:00</wp:post_date>
		<wp:post_date_gmt>2011-02-01 09:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>complexidade-nao-escala</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="escalabilidade"><![CDATA[escalabilidade]]></category>
		<category domain="category" nicename="questionamento"><![CDATA[questionamento]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="simplicidade"><![CDATA[simplicidade]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077778]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>547</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Complexidade não escala! | 1up4developers -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/1up4dev.org/2011/02/complexidade-nao-escala/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2011-02-01 10:43:01</wp:comment_date>
			<wp:comment_date_gmt>2011-02-01 13:43:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Rodrigo Panachi, 01berto and andrefarina, @pbalduino. @pbalduino said: Complexidade não escala - http://goo.gl/I9Nc7 #1up4dev #agile [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>588</wp:comment_id>
			<wp:comment_author><![CDATA[Weverton do Couto Timoteo]]></wp:comment_author>
			<wp:comment_author_email>wroneevo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.abstraindo.com</wp:comment_author_url>
			<wp:comment_author_IP>201.87.123.113</wp:comment_author_IP>
			<wp:comment_date>2011-02-17 09:39:31</wp:comment_date>
			<wp:comment_date_gmt>2011-02-17 12:39:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Parabéns Rodrigo, post muito bacana, estou começando em Ruby agora, encontrei seu blog e passei a assinar o feed. Todo conteúdo está muito bom!


Abraços!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>589</wp:comment_id>
			<wp:comment_author><![CDATA[Rodrigo Panachi]]></wp:comment_author>
			<wp:comment_author_email>rodrigopanachi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://nobrokenwindow.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>189.125.221.100</wp:comment_author_IP>
			<wp:comment_date>2011-02-17 10:11:02</wp:comment_date>
			<wp:comment_date_gmt>2011-02-17 13:11:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Obrigado Weverton!
Tem muito post sobre Ruby e Rails vindo por aí, fique ligado.

 Sucesso!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>615</wp:comment_id>
			<wp:comment_author><![CDATA[Edmar Ferreira]]></wp:comment_author>
			<wp:comment_author_email>edmaroliveiraferreira@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://escalabilidade.com</wp:comment_author_url>
			<wp:comment_author_IP>201.80.194.118</wp:comment_author_IP>
			<wp:comment_date>2011-02-24 13:45:49</wp:comment_date>
			<wp:comment_date_gmt>2011-02-24 16:45:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muito interessante sua abordagem. Um problema muito comum no desenvolvimento de sistemas que necessitam de alta escalabilidade é justamente a tendência de criar mais complexidade quando se tenta "escalar" o sistema atual. A simplicidade é ponto crucial para que o sistema não apenas seja elegante mas também funcional.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>640</wp:comment_id>
			<wp:comment_author><![CDATA[Pesquisa de pré-lançamento do Sitefique.me | 1up4developers]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2011/03/pesquisa-de-pre-lancamento-do-sitefique-me/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2011-03-21 06:17:57</wp:comment_date>
			<wp:comment_date_gmt>2011-03-21 09:17:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] sua principal característica: ser simples. Se você acompanha nosso blog já deve ter notado que nossa busca por simplicidade é uma constante (e não é uma coisa fácil de se encontrar nos ambientes [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Resenha do livro Crafting Rails Applications</title>
		<link>http://1up4dev.org/2011/02/resenha-do-livro-crafting-rails-applications/</link>
		<pubDate>Wed, 02 Feb 2011 12:05:53 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=841</guid>
		<description></description>
		<content:encoded><![CDATA[No final do ano passado, ao ver um <a href="http://twitter.com/josevalim/status/12537904249176064">twitty do José Valim</a>, fiquei tentando a comprar o livro, mas depois do post <a href="http://blog.plataformatec.com.br/2010/12/crafting-rails-applications-why-i-wrote-this-book/">Crafting Rails Applications: Why I wrote this book</a>, tive certeza que não perderia este presente de Natal.

[caption id="attachment_847" align="alignleft" width="190" caption="Crafting Rails Applications: Expert Practices for Everyday Rails Development"]<a href="http://pragprog.com/titles/jvrails/crafting-rails-applications"><img class="size-full wp-image-847" title="Crafting Rails Applications: Expert Practices for Everyday Rails Development" src="http://1up4dev.org/wp-content/uploads/2011/02/jvrails.jpg" alt="Crafting Rails Applications: Expert Practices for Everyday Rails Development" width="190" height="228" /></a>[/caption]

Apesar de poucas páginas, o livro tem muito conteúdo. Logo no começo, em "<em>Who should read this book ?</em>" é avisado, <strong>não é para iniciantes</strong>. Os capítulos são separados em tópicos interessantes, abordando diferentes maneiras de extender o Rails 3.

Aliás, extender é a palavra chave do livro. Dos projetos que compõe o Rails, somente o <em>Active Resource</em> não foi citado. O livro com certeza pula o básico, ou seja, não espere por explicações em como usar as funcionalidades do Rails.

-
<h2>Detalhes que tornam o livro interessante.</h2>
<ul>
	<li><a href="https://github.com/josevalim/enginex">Enginex</a> - é uma Ruby gem que cria um <em>Rails 3 Engine</em> com Rakefile, Gemfile e pronto para rodar testes em cima de uma aplicação "vendorizada". Ou seja, no livro temos projetos reais, que são executados e tem testes !</li>
	<li><a href="http://en.wikipedia.org/wiki/Test-driven_development">TDD</a> - todo código apresentado, é feito seguindo o <em>Test-driven Development</em>, mostra-se o teste falhando e vai implementando aos poucos, até tudo ficar verde.</li>
	<li><span style="text-decoration: underline;">Como melhorar o seu código</span> - conhecendo <em>Responders</em> e o <em>Renderer Stack do Rails 3</em>, você com certeza irá ampliar o seu leque de possibilidades de como melhorar o fonte das suas aplicações. Tem bastante exemplos de <em>Rails Generators</em> também.</li>
	<li><span style="text-decoration: underline;">Desmistificando Rails</span> - o Valim realmente conseguiu de forma majestosa explicar as entranhas do Rails 3. A cada capítulo e detalhe explicado, pude ver o verdadeiro trampo que fizeram no projeto, em comparação com o 2.x, o Rails mudou muito (internamente!).</li>
</ul>
<h2>Finalizando...</h2>
Se você é um desenvolvedor que se preocupa em conhecer a fundo o framework que trabalha, <strong><a href="http://pragprog.com/titles/jvrails/crafting-rails-applications">compre agora</a></strong>! Confesso que depois da leitura, estou muito mais a vontade para navegar no fontes do Rails, inclusive passei a acompanhar os tickets no <a href="https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/overview">Lighthouse</a>. :D <a href="https://github.com/rails/rails">Rails 3</a> definitivamente está mais flexível, e o José Valim conseguiu expor tudo isso com código e uma leitura agradável.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>841</wp:post_id>
		<wp:post_date>2011-02-02 09:05:53</wp:post_date>
		<wp:post_date_gmt>2011-02-02 12:05:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>resenha-do-livro-crafting-rails-applications</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="resenha"><![CDATA[resenha]]></category>
		<category domain="category" nicename="resenhas"><![CDATA[resenhas]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077430]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>549</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Resenha do livro Crafting Rails Applications | 1up4developers -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/1up4dev.org/2011/02/resenha-do-livro-crafting-rails-applications/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2011-02-02 11:48:37</wp:comment_date>
			<wp:comment_date_gmt>2011-02-02 14:48:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Roger Leite, Rodrigo Panachi and @pbalduino, @pbalduino. @pbalduino said: RT @rogerleite: Novo post: Resenha do livro Crafting Rails Applications - http://goo.gl/yHpbj #rails #ruby [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>552</wp:comment_id>
			<wp:comment_author><![CDATA[corretor]]></wp:comment_author>
			<wp:comment_author_email>corretor@ortografico.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.125.221.200</wp:comment_author_IP>
			<wp:comment_date>2011-02-02 15:53:17</wp:comment_date>
			<wp:comment_date_gmt>2011-02-02 18:53:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Acho que quis dizer majestosa.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>553</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email>roger.leite@1up4dev.org</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>187.3.161.222</wp:comment_author_IP>
			<wp:comment_date>2011-02-02 21:10:30</wp:comment_date>
			<wp:comment_date_gmt>2011-02-03 00:10:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Obrigado corretor !]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>552</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Pare de chorar e mexa-se</title>
		<link>http://1up4dev.org/2011/02/pare-de-chorar-e-mexa-se/</link>
		<pubDate>Sat, 12 Feb 2011 12:00:30 +0000</pubDate>
		<dc:creator>pbalduino</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=858</guid>
		<description></description>
		<content:encoded><![CDATA[Antes de qualquer outra coisa, escrevo esse post em forma de autocrítica e como um tapa na cara em mim mesmo. Espero que a carapuça sirva em você também.

Cena 1: dois programadores estão tomando refrigerante enquanto reclamam do <a href="http://beonthe.net/" target="_blank">site</a> que um terceiro programador fez, deu certo e e acabou virando a principal fonte de renda do empreendedor.

Cena 2: um grupo de funcionários critica um colega que está ganhando mensalmente o equivalente ao salário com aplicações para iPhone e iPad com frase do tipo 'isso aí até eu faço', ou 'é pura falta do que fazer'.

Cena 3: um programador, desses acostumados a usar paletó, gravata e passar o dia em cima de diagramas de <a href="http://en.wikipedia.org/wiki/Use_case_diagram" target="_blank">stick figures, setinhas e balões</a>, profere sem o menor pudor: 'Estudar uma tecnologia nova em casa? Eu só aprendo algo novo se for pago pra isso.'

Cena 4: um colega, inocente e empolgado, convida outro para participar de um Coding Dojo, e recebe como resposta: 'programar depois do expediente? eu prefiro levar uma topada no dedão'

E a clássica cena 5: funcionários reunidos almoçando/tomando café/fumando/num happy hour e falando mal do coordenador/líder técnico/chefe/diretor/gerente/empresa em geral.

Pense um pouco e você vai perceber que, com certeza, já presenciou ou já fez parte de algumas dessas cenas.

Reclamar, ficar insatisfeito, criticar ou debochar é algo natural, faz parte da natureza das pessoas e, acho eu, até mesmo de certas espécies de animais. O problema aparece quando a crítica vira choradeira e nunca passa disso.

Eu trabalhei numa empresa pequena, com cinco funcionários, onde havia contato direto com o dono e com os clientes. A quantidade de coisas que aprendi ali, tanto profissionalmente quanto pessoalmente é algo que me ajuda até hoje. Porém, talvez pelo fato de eu ter ficado por ali mais tempo do que seria produtivo para ambas as partes, eu perdia tempo demais reclamando, me estressando e agindo de forma infantil e improdutiva. Chegou ao ponto de uma namorada dizer 'que cada funcionário está na empresa que merece, e cada empresa tem o funcionário que merece'.

Até hoje penso nessa frase e apesar de toda a violência com a qual ela foi empregada, não deixo de notar a realidade por trás das palavras.

Um ex-funcionário do Google escreveu um artigo (se alguém ainda tiver o link, por favor me envie) em que conta que seus colegas reclamavam da qualidade do granulado usado nos doces que eram <strong>dados</strong> pela empresa no horário de trabalho simplesmente por não terem do que reclamar.

Já presenciei colegas reclamando da qualidade da churrascaria que a empresa escolheu para a confraternização de fim de ano, onde comeram e beberam de graça sem pagar um centavo que fosse. E, honestamente, era um local que eu não teria condições de levar minha família sem deixar uma parcela considerável dos meus rendimentos.

As pessoas, incluindo eu e você, deveriam parar de choramingar, de reclamar e de perder tempo com conversinhas inúteis e começar a meter a mão na massa, produzir coisas de que se orgulhem e que sejam úteis para outras pessoas.

Não estou me limitando ao discurso Go Horse de 'não está feliz, peça as contas'. Estou dizendo para que você pense em como se tornar adulto, até mesmo em como se tornar economicamente autossuficiente (pela Nova Gramática).

Atualmente, o custo de se iniciar um projeto ou de se colocar uma idéia em prática usando a Internet é próximo de zero. Qualquer pessoa com iniciativa e, principalmente, acabativa, consegue <a href="http://williamwilkinson.com/post/3089051066" target="_blank">colher bons frutos</a> com praticamente nenhum investimento além do próprio tempo.

Fazendo uma conta de padaria: se você investir uma hora e meia por dia estudando e/ou implementando uma idéia, por mais absurda que ela pareça para os outros, em um mês você vai ter investido 45 horas, o que é tempo mais do que suficiente para aprender os fundamentos de uma nova linguagem ou apresentar um protótipo da idéia.

Hoje em dia você tem Rails, Sinatra, Django, web2py, uma lista imensa de ferramentas que permitem a criação rápida de aplicações, sem a perda de tempo de editar arquivos XML, descritores ou ficar desenhando <a href="http://1up4dev.org/?attachment_id=860" target="_blank">bonecos de palitinho</a>.

Pare de reclamar. Se organize. Tenha metas claras e reais. Pare de apontar o dedo e comece a trabalhar. Leve o problema a quem for devido ao invés de simplesmente adotar uma postura <a href="http://pt.wikipedia.org/wiki/Comportamento_passivo-agressivo" target="_blank">passivo-agressiva</a>. Busque motivação onde ela não existe, ou vá respirar novos ares. Tente uma forma diferente de fazer as mesmas coisas, compartilhe conhecimento, ouça mais e aprenda mais.

Enfim, deixe de ser uma menininha chorona e comece a agir.

E, a propósito, parabéns ao <a href="http://twitter.com/viniciusteles" target="_blank">Vinicius Teles</a> e equipe pelo trabalho iniciado, concluído e bem feito.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>858</wp:post_id>
		<wp:post_date>2011-02-12 09:00:30</wp:post_date>
		<wp:post_date_gmt>2011-02-12 12:00:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pare-de-chorar-e-mexa-se</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="questionamento"><![CDATA[questionamento]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="resmungo"><![CDATA[resmungo]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078155]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>575</wp:comment_id>
			<wp:comment_author><![CDATA[Rodrigo Panachi]]></wp:comment_author>
			<wp:comment_author_email>rodrigopanachi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://nobrokenwindow.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>201.81.135.235</wp:comment_author_IP>
			<wp:comment_date>2011-02-14 21:08:37</wp:comment_date>
			<wp:comment_date_gmt>2011-02-15 00:08:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[É disso que eu tô falando!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>576</wp:comment_id>
			<wp:comment_author><![CDATA[Igor hercowitz]]></wp:comment_author>
			<wp:comment_author_email>ihercowitz@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.19.21.64</wp:comment_author_IP>
			<wp:comment_date>2011-02-15 05:50:12</wp:comment_date>
			<wp:comment_date_gmt>2011-02-15 08:50:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[É... "pé na porta, soco na cara"
Ótimo post.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>577</wp:comment_id>
			<wp:comment_author><![CDATA[Cássio]]></wp:comment_author>
			<wp:comment_author_email>cassionandi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.115.18.197</wp:comment_author_IP>
			<wp:comment_date>2011-02-15 07:31:56</wp:comment_date>
			<wp:comment_date_gmt>2011-02-15 10:31:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Gostei!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>574</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Pare de chorar e mexa-se | 1up4developers -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/1up4dev.org/2011/02/pare-de-chorar-e-mexa-se/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2011-02-14 19:14:07</wp:comment_date>
			<wp:comment_date_gmt>2011-02-14 22:14:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Luiz Fonseca , Fernando Geraldo. Fernando Geraldo said: Pare de chorar e mexa-se! http://1up4dev.org/2011/02/pare-de-chorar-e-mexa-se/ ótimo post! [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>579</wp:comment_id>
			<wp:comment_author><![CDATA[Luis Eduardo]]></wp:comment_author>
			<wp:comment_author_email>luis.eduardo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.30.215.175</wp:comment_author_IP>
			<wp:comment_date>2011-02-15 20:02:25</wp:comment_date>
			<wp:comment_date_gmt>2011-02-15 23:02:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Putz meu, tomei um "bufetão" , mas valeu, valeu mesmo.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>580</wp:comment_id>
			<wp:comment_author><![CDATA[Vinicius Teles]]></wp:comment_author>
			<wp:comment_author_email>teles@mail.com</wp:comment_author_email>
			<wp:comment_author_url>http://beonthe.net</wp:comment_author_url>
			<wp:comment_author_IP>190.115.38.166</wp:comment_author_IP>
			<wp:comment_date>2011-02-16 12:37:43</wp:comment_date>
			<wp:comment_date_gmt>2011-02-16 15:37:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Olá, Plínio.

Muito legal o seu post! Fico feliz em saber que nosso trabalho serviu de inspiração para o post e espero que sirva também de inspiração para outras iniciativas.

Hoje eu percebo o enorme valor que nossa habilidade técnica tem e, sinceramente, não consigo compreender direito como alguém a desperdiça trabalhando para uma empresa que não aproveita bem esse skill. Um desenvolvedor, se investir em si próprio e em um negócio próprio, se tiver persistência e paciência, consegue certamente ganhar uma boa grana, com a qual poderá ser livre para fazer o que quiser.

Se eu não tivesse feito o Be on the Net, não poderia agora vagar pelo mundo, morando onde me dá na telha e trabalhando normalmente enquanto faço isso. Deu trabalho e ainda dá muito trabalho, mas é algo que eu amo fazer. E essa liberdade não tem preço.

Um grande abraço para você e toda a trupa, desde Mendoza, Argentina.

Vinícius Teles]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>581</wp:comment_id>
			<wp:comment_author><![CDATA[Lucas Renan]]></wp:comment_author>
			<wp:comment_author_email>lucas@freelancersbrasil.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.p3m.com.br</wp:comment_author_url>
			<wp:comment_author_IP>187.35.138.124</wp:comment_author_IP>
			<wp:comment_date>2011-02-16 12:45:50</wp:comment_date>
			<wp:comment_date_gmt>2011-02-16 15:45:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[é o tipo de tapa na cara que todo programador precisa =)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>582</wp:comment_id>
			<wp:comment_author><![CDATA[Cícero Raupp Rolim]]></wp:comment_author>
			<wp:comment_author_email>cicero.rolim@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.muambator.com.br</wp:comment_author_url>
			<wp:comment_author_IP>15.219.153.75</wp:comment_author_IP>
			<wp:comment_date>2011-02-16 12:46:45</wp:comment_date>
			<wp:comment_date_gmt>2011-02-16 15:46:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cara, demais esse post. Merecia ser lido diariamente para muitas pessoas.

Parabéns pelo post!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>583</wp:comment_id>
			<wp:comment_author><![CDATA[Rodrigo]]></wp:comment_author>
			<wp:comment_author_email>rodrigo-nunes@uol.com.br</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.126.194.48</wp:comment_author_IP>
			<wp:comment_date>2011-02-16 13:05:43</wp:comment_date>
			<wp:comment_date_gmt>2011-02-16 16:05:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Assim com o Luis, bofetão. Apesar de já ter iniciado minha idéia, mas como se tivesse desconfiado comigo mesmo.

Valeu a força!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>584</wp:comment_id>
			<wp:comment_author><![CDATA[Atraindo talentos da Geração Y para sua empresa | Ricardo Martins]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ricardomartins.com.br/2010/12/30/atraindo-talentos-da-geracao-y-para-sua-empresa/</wp:comment_author_url>
			<wp:comment_author_IP>74.63.2.80</wp:comment_author_IP>
			<wp:comment_date>2011-02-16 13:05:47</wp:comment_date>
			<wp:comment_date_gmt>2011-02-16 16:05:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] http://1up4dev.org/2011/02/pare-de-chorar-e-mexa-se/ &#8211; Post de Plínio Balduino [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>587</wp:comment_id>
			<wp:comment_author><![CDATA[Eder Eduardo]]></wp:comment_author>
			<wp:comment_author_email>eder.esilva@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://edereduardo.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>189.102.160.188</wp:comment_author_IP>
			<wp:comment_date>2011-02-16 16:27:07</wp:comment_date>
			<wp:comment_date_gmt>2011-02-16 19:27:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cara, muito bom! já  indiquei para várias pessoas.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>586</wp:comment_id>
			<wp:comment_author><![CDATA[Cristiano Caldas]]></wp:comment_author>
			<wp:comment_author_email>eu@cccaldas.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>187.113.80.202</wp:comment_author_IP>
			<wp:comment_date>2011-02-16 13:54:33</wp:comment_date>
			<wp:comment_date_gmt>2011-02-16 16:54:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Meu, mto foda o post, profundo.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>590</wp:comment_id>
			<wp:comment_author><![CDATA[Marcelo Garcia]]></wp:comment_author>
			<wp:comment_author_email>mbgarcia_pa@yahoo.com.br</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.100.224.181</wp:comment_author_IP>
			<wp:comment_date>2011-02-17 12:54:31</wp:comment_date>
			<wp:comment_date_gmt>2011-02-17 15:54:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Li, vivenciei alguns cenários e procuro sempre me lembrar de que nós não somos nem melhores nem piores que outros, apenas diferentes. 
Respeito e considero a opinião de outras pessoas, pois tenho certeza que sempre vou aprender desta forma ao invés de achar que sou uma ilha.
Ótimo post.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>592</wp:comment_id>
			<wp:comment_author><![CDATA[luiz]]></wp:comment_author>
			<wp:comment_author_email>luizgui@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.103.152.197</wp:comment_author_IP>
			<wp:comment_date>2011-02-17 16:38:16</wp:comment_date>
			<wp:comment_date_gmt>2011-02-17 19:38:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[boa tarde,
otimo post,

por acaso alguem tem ou enviou o link do artigo do ex-funcionario do google?!

cumsp, Luiz]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>593</wp:comment_id>
			<wp:comment_author><![CDATA[Anderson Sanches]]></wp:comment_author>
			<wp:comment_author_email>andycds@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://software.pro.br</wp:comment_author_url>
			<wp:comment_author_IP>201.83.234.205</wp:comment_author_IP>
			<wp:comment_date>2011-02-17 16:46:03</wp:comment_date>
			<wp:comment_date_gmt>2011-02-17 19:46:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ótimo artigo. O link do 'bonecos de palitinho' está trocando os rótulos title com href.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>594</wp:comment_id>
			<wp:comment_author><![CDATA[Ricardo Martins]]></wp:comment_author>
			<wp:comment_author_email>ricardo.macedo@yahoo.com.br</wp:comment_author_email>
			<wp:comment_author_url>http://ricardomartins.com.br</wp:comment_author_url>
			<wp:comment_author_IP>200.208.25.92</wp:comment_author_IP>
			<wp:comment_date>2011-02-17 18:39:04</wp:comment_date>
			<wp:comment_date_gmt>2011-02-17 21:39:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bom, o meu pingback chegou primeiro que o meu comentário, mas vamos lá...

Realmente está de parabéns! Eu não sou programador, sou da área de infraestrutura, mas acompanho de perto essa galera.

São textos assim, que estimulam qualquer profissional, seja ele de qualquer área, à sair da zona de conforto e correr atrás de novos desafios.

Dão um estalo na mente, e fazem parar e pensar: "Preciso mudar agora!".

Apenas para complementar, cito abaixo outros textos similares, dessa mesma galera que hoje faz parte desta revolução digital e que produzem um efeito similar em quem lê:

Tweet do Vinícius Teles de um texto de Klaus Wuestefeld: https://gist.github.com/556029
Vítor Pellegrino: http://vp.blog.br/o-que-voce-esta-aprendendo-hoje
Marco Gomes: http://marcogomes.com/blog/2008/eu-faco-parte-da-revolucao
Ricardo Jordão Magalhães: http://www.bizrevolution.com.br/bizrevolution/2010/06/eu-escutei-os-conselhos-de-pessoas-mais-inteligentes-do-que-eu-e-ignorei-a-todos-.html

Sites interessantes:
http://www.tribodomouse.com.br/
http://www.saiadolugar.com.br/

Um abraço!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>598</wp:comment_id>
			<wp:comment_author><![CDATA[Plínio Balduino]]></wp:comment_author>
			<wp:comment_author_email>pbalduino+1up4dev@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://github.com/pbalduino</wp:comment_author_url>
			<wp:comment_author_IP>201.86.126.106</wp:comment_author_IP>
			<wp:comment_date>2011-02-18 09:59:54</wp:comment_date>
			<wp:comment_date_gmt>2011-02-18 12:59:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Valeu, Ricardo.
Muito bons links, alguns deles eu considero clássicos. Recomendo a leitura para todos que passarem por aqui.
Abraço.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>594</wp:comment_parent>
			<wp:comment_user_id>7</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>596</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Pare de chorar e mexa-se | 1up4developers -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/trackback?url=http%3A%2F%2F1up4dev.org%2F2011%2F02%2Fpare-de-chorar-e-mexa-se%2Fcomment-page-1%2F%23comment-580&amp;utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2011-02-17 22:38:57</wp:comment_date>
			<wp:comment_date_gmt>2011-02-18 01:38:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Rodrigo Panachi, Edertech Tecnologia. Edertech Tecnologia said: RT @rpanachi: Você é desenvolvedor? Então &quot;pare de chorar e mexa-se!&quot; http://goo.gl/9P3rj #1up4dev [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>600</wp:comment_id>
			<wp:comment_author><![CDATA[Leandro Alvares da Costa]]></wp:comment_author>
			<wp:comment_author_email>leandroadacosta@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://about.me/leandroadacosta</wp:comment_author_url>
			<wp:comment_author_IP>189.34.141.53</wp:comment_author_IP>
			<wp:comment_date>2011-02-18 14:17:01</wp:comment_date>
			<wp:comment_date_gmt>2011-02-18 17:17:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muito bom, infelizmente os cenários que você descreveu são totalmente coerentes com a maioria dos profissionais do mercado de consultoria de TI.

Ótimo post Plínio. Parabéns! É isso ai :P]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>601</wp:comment_id>
			<wp:comment_author><![CDATA[Leandro Alvares da Costa]]></wp:comment_author>
			<wp:comment_author_email>leandroadacosta@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://about.me/leandroadacosta</wp:comment_author_url>
			<wp:comment_author_IP>189.34.141.53</wp:comment_author_IP>
			<wp:comment_date>2011-02-18 14:21:32</wp:comment_date>
			<wp:comment_date_gmt>2011-02-18 17:21:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muito bom, infelizmente os cenários que você passou são relatos verídicos dos profissionais da maioria das consultorias de TI no mercado.

Ótimo post, parabéns! Motivação pra todos estes que estão com suas crenças limitadas.

Um abraço!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>602</wp:comment_id>
			<wp:comment_author><![CDATA[Guilherme Pereira]]></wp:comment_author>
			<wp:comment_author_email>gppereira3@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>186.250.65.100</wp:comment_author_IP>
			<wp:comment_date>2011-02-18 14:22:30</wp:comment_date>
			<wp:comment_date_gmt>2011-02-18 17:22:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Uma bela porrada na cara...
Me fez enxergar que é hora de eu me movimentar e mudar de ares, além de continuar aprendendo técnicas novas.
Abraço.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>603</wp:comment_id>
			<wp:comment_author><![CDATA[André Silva]]></wp:comment_author>
			<wp:comment_author_email>contato@andresilva.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.andresilva.net</wp:comment_author_url>
			<wp:comment_author_IP>187.41.137.210</wp:comment_author_IP>
			<wp:comment_date>2011-02-20 02:31:59</wp:comment_date>
			<wp:comment_date_gmt>2011-02-20 05:31:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ótimo post.
O triste é refletir bastante a realidade...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>604</wp:comment_id>
			<wp:comment_author><![CDATA[Torne-se excelente | 1up4developers]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2011/02/torne-se-excelente/</wp:comment_author_url>
			<wp:comment_author_IP>200.234.200.148</wp:comment_author_IP>
			<wp:comment_date>2011-02-22 06:02:52</wp:comment_date>
			<wp:comment_date_gmt>2011-02-22 09:02:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 1up4developers   Nadando contra o Waterfall. tail -f /mind/realworld &gt;&gt; /blog        &larr; Pare de chorar e mexa-se [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>609</wp:comment_id>
			<wp:comment_author><![CDATA[Lucas Lopes]]></wp:comment_author>
			<wp:comment_author_email>fbl.lucas@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.22.148.106</wp:comment_author_IP>
			<wp:comment_date>2011-02-23 11:55:00</wp:comment_date>
			<wp:comment_date_gmt>2011-02-23 14:55:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cara excelente post, me fez refletir em várias atitudes como programador.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>610</wp:comment_id>
			<wp:comment_author><![CDATA[Alexsandro]]></wp:comment_author>
			<wp:comment_author_email>blogsposts@alexsandro.com.br</wp:comment_author_email>
			<wp:comment_author_url>http://www.alexsandro.com.br</wp:comment_author_url>
			<wp:comment_author_IP>189.76.230.9</wp:comment_author_IP>
			<wp:comment_date>2011-02-23 15:09:58</wp:comment_date>
			<wp:comment_date_gmt>2011-02-23 18:09:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Show, bela frase "que cada funcionário está na empresa que merece, e cada empresa tem o funcionário que merece"]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>613</wp:comment_id>
			<wp:comment_author><![CDATA[Plínio Balduino]]></wp:comment_author>
			<wp:comment_author_email>pbalduino+1up4dev@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://github.com/pbalduino</wp:comment_author_url>
			<wp:comment_author_IP>200.171.91.17</wp:comment_author_IP>
			<wp:comment_date>2011-02-23 15:56:59</wp:comment_date>
			<wp:comment_date_gmt>2011-02-23 18:56:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ela estava certa, afinal de contas.
É algo que eu sempre lembro antes de reclamar do trabalho.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>610</wp:comment_parent>
			<wp:comment_user_id>7</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>619</wp:comment_id>
			<wp:comment_author><![CDATA[Danilo Nascimento]]></wp:comment_author>
			<wp:comment_author_email>elnasc@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://danilonascimentonet.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>189.20.61.195</wp:comment_author_IP>
			<wp:comment_date>2011-02-28 11:22:20</wp:comment_date>
			<wp:comment_date_gmt>2011-02-28 14:22:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excelente post!!! Acredito que somos capazes de realizarmos qualquer coisa que nos propusermos a fazer!! Mas temos que pagar o preço!!! E parar de reclamar!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>693</wp:comment_id>
			<wp:comment_author><![CDATA[lucas]]></wp:comment_author>
			<wp:comment_author_email>lucas.symbolic@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>187.38.97.14</wp:comment_author_IP>
			<wp:comment_date>2011-04-26 11:43:49</wp:comment_date>
			<wp:comment_date_gmt>2011-04-26 14:43:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Esse post fica na primeira posição da minha lista de afazeres do meu workflowy, não por ter nada relacionado a ela, mas por toda vez q eu vou analisar o que realmente tenho que fazer, lembro deste post.

Acho que é um dos top posts que eu já li sobre desenvolvimento na internet brother!

Parabéns MESMO!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>849</wp:comment_id>
			<wp:comment_author><![CDATA[André Nunes]]></wp:comment_author>
			<wp:comment_author_email>anmbr@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.62.130.146</wp:comment_author_IP>
			<wp:comment_date>2012-01-12 07:28:01</wp:comment_date>
			<wp:comment_date_gmt>2012-01-12 10:28:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Boaa, concordo com isso de tomar a iniciativa, mas discordo MUITO sobre isso de que "ficar desenhando palitinho" é inútil.... não é atoa que vemos códigos totalmente mal formulados, com programas tendo versões: 1.0, 1.1, 1.2....... 1.9.... quando na verdade se forem melhores projetadas seriam 1 2 3 4 5 ...

mas, ótimo texto !]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>935</wp:comment_id>
			<wp:comment_author><![CDATA[A experiência de lançar o RoloGames | 1up4developers]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2012/06/a-experiencia-de-lancar-o-rologames/</wp:comment_author_url>
			<wp:comment_author_IP>187.45.193.139</wp:comment_author_IP>
			<wp:comment_date>2012-06-20 08:40:13</wp:comment_date>
			<wp:comment_date_gmt>2012-06-20 11:40:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] o post te ajude de alguma maneira e te motive também, afinal até hoje o &#8220;polêmico&#8221; Pare de chorar e mexa-se é um dos posts mais lidos do blog! 0savesSave    Se você curtiu (ou não) o post, nos ajude [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Torne-se excelente</title>
		<link>http://1up4dev.org/2011/02/torne-se-excelente/</link>
		<pubDate>Tue, 22 Feb 2011 09:00:05 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=868</guid>
		<description></description>
		<content:encoded><![CDATA[Aproveitando a <strong>grande repercussão</strong> do <a href="http://1up4dev.org/2011/02/pare-de-chorar-e-mexa-se/">post do Plínio</a> sobre atitude empreendedora e um gancho do <a href="http://1up4dev.org/2011/02/complexidade-nao-escala/">meu último post</a> sobre simplicidade e prática constante, volto ao assunto depois que o <a href="http://twitter.com/rogerleite" target="_self">Roger</a> me lembrou deste <a href="http://gist.github.com/556029" target="_blank">gist do Vínicius Teles</a>, que foi escrito por <a href="http://c2.com/cgi/wiki?KlausWuestefeld">Klaus Wuestefeld</a>, autor do manifesto da <a href="http://c2.com/cgi/wiki?SovereignComputing">Computação Soberana</a> e criador do <a href="http://www.prevayler.org" target="_blank">Prevayler</a>, apresentando dicas de conduta na carreira e como aproveitar as oportunidades.

Apesar de ter gerado <a href="https://gist.github.com/556029#gistcomment-8499" target="_blank">muita discussão</a> sobre se vale a pena ou não fazer faculdade, a idéia aqui é apenas <strong>gerar reflexão</strong> e reforçar o que vimos <a href="http://1up4dev.org/2010/07/a-extincao-do-programador-senior/">falando</a> <a href="http://1up4dev.org/2008/11/arquiteto-cascateiro/">nos</a> <a href="http://1up4dev.org/2009/04/agilidade-e-a-buzzword-do-momento/">últimos</a> <a href="http://1up4dev.org/2008/12/agilidade-cascateira/">posts</a>. Divirtam-se!
<h2>Torne-se excelente</h2>
Seja realmente bom em alguma coisa. Não fique só <a href="http://1up4dev.org/2011/02/pare-de-chorar-e-mexa-se/" target="_self">choramingando</a> ou querendo progredir às custas dos outros. Não pense que, porque você sentou 4 anos numa faculdade ouvindo um professor falar sobre software, você sabe alguma coisa. Jogador de futebol não aprende a jogar bola tendo aula. Ele pratica. Instrumentistas geniais não aprendem a tocar tendo aula. Eles praticam. Pratique. Chegue em casa depois do trabalho e da aula e pratique. No final de semana, <strong>pratique</strong>.

Crie seu próprio vírus, seu próprio jogo, seu próprio SO, seu próprio gerenciador de janelas, seu próprio webserver, sua própria VM, qualquer coisa. Várias coisas.

Não precisa ser só programação. Pode ser networking, vendas, etc. Só precisa ser bom mesmo. Tenha paixão pela coisa.

As melhores práticas do mercado são polinizadas primeiro nos projetos de software livre. Aprenda com eles.

Discípulo, Viajante, Mestre: Primeiro seja um discípulo, tenha mestres locais, aprenda alguma coisa com alguém realmente bom, qualquer estilo. Depois viaje, encontre outros mestres e aprenda o estilo deles. Por fim, tenha o seu estilo, tenha discípulos, seja um mestre.

Vou fazer o curso da <a href="http://www.poppendieck.com/" target="_blank">Mary Poppendieck</a> em SP semana que vem e quando tiver o curso de Scrumban do <a href="http://alissonvale.com/" target="_blank">Alisson</a> e do <a href="http://www.aspercom.com.br/" target="_blank">Rodrigo</a> quero fazer também.

"Torne-se excelente" também pode ser chamado de Melhoria Continua ou Learning.
<h2>Não seja deslumbrado</h2>
Desenvolvimento de software é a mesma coisa há 60 anos: modelo imperativo. Há 30 anos: orientação a objetos. Bancos de dados relacionais: 30 anos. (Web, por exemplo, não é uma tecnologia ou um paradigma. É meramente um conjunto de restrições sobre como desenvolver e distribuir seu software).

Não corra atrás da última <strong>buzzword</strong> do mercado. Busque a essência, os fundamentos.

Busque na <a href="http://www.wikipedia.org/" target="_blank">Wikipédia</a> e Grokke: <a href="http://pt.wikipedia.org/wiki/Algoritmo" target="_blank">determinismo</a>, <a href="http://pt.wikipedia.org/wiki/Complexidade_computacional" target="_blank">complexidade de algoritmos O()</a>, problema de parada de <a href="http://pt.wikipedia.org/wiki/M%C3%A1quina_de_Turing" target="_blank">Turing</a>. Pronto, pode largar a faculdade. Falando sério.

<strong>Trabalhe com software livre</strong>. Não dê ouvidos a grandes empresas, grandes instituições ou grandes nomes só porque são grandes.

Você acha que vai aprender mais, ter mais networking e mais chance de alocação no mercado trabalhando em par comigo no <a href="https://github.com/bihaiko/sneer" target="_blank">Sneer</a> por um ano, 8h por semana, ou passando 4 anos na faculdade, 20h por semana, pagando sei lá quanto por mês?

Você acha que vai aprender mais trabalhando em par com o Bamboo 6 meses na linguagem <a href="http://boo.codehaus.org/" target="_blank">Boo</a> e na engine do Unity ou fazendo um ano de pós em "a buzzword da moda"?

"Não seja deslumbrado" também é conhecido como <em>Coolness</em>.
<h2>Mantenha-se Móvel</h2>
Com a demanda que temos hoje no mercado, se você é desenvolvedor de software e não consegue negociar um contrato com uma empresa onde você é pago por hora e pode trabalhar quantas horas quiser com um mínimo de meio período, você precisa rever a sua vida.

É melhor ter dois empregos de meio período que um de período integral, porque você pode largar um deles a qualquer momento.

Você nunca vai conseguir nada melhor se não tiver tempo, se não tiver disponibilidade pra pegar algo melhor quando aparecer.

Você sustenta seus pais e 7 irmãos? Não. Então pare de ser ganancioso e medroso no curto prazo, para de pagar facu, mestrado, pós, MBA, sei-lá-o-quê e vai aprender e empreender.

Trabalhe remoto. Não é o mais fácil, mas é perfeitamente possível.

Não fique reclamando que está trabalhando demais. Aumente seu preço e trabalhe menos.
<h2>Emparceire-se Promiscuamente</h2>
Participe de dojos, de congressos, de projetos de software livre. Tenha amigos, colegas, conhecidos. Seja conhecido. Não faça ruído em seis projetos e doze fóruns. Ajude de verdade em um ou dois projetos de cada vez. Ao longo do tempo, você terá ajudado em varios projetos, trabalhado em várias empresas.
<h2>Mentalidade de Abundância</h2>
Ajude seus amigos sem cobrar (a "camaradagem" do <a href="http://improveit.com.br/empresa/vinicius" target="_blank">Vinícius</a>). Dê palestras gratuitas. Cursos gratuitos. Participe de projetos de software livre.

Pare as vezes uma tarde pra receber um amigo seu e explicar seu projeto. Vá visitar seus amigos nos projetos deles. Viaje com algum amigo seu pra visitar um cliente dele, só pra conversar e fazer companhia.

Você tem um espaço onde dá cursos? É uma <a href="http://www.aspercom.com.br/" target="_blank">Aspercom</a>, <a href="http://www.caelum.com.br/" target="_blank">Caelum</a> da vida? Chama os brothers para dar curso. Porra, bola um modelo em que as pessoas podem se inscrever para cursos variados, pagando um sinal, e mantém tipo uma agenda pré-combinada: "Será numa terça e quinta à noite, avisadas com duas semanas de antecedência". Se rolar, beleza, se depois de meses não der quórum, devolve o sinal. Pode ser curso de Prevayler, de Kanban, de Scrum, de Lean, de Comp Soberana, de Restfulie, de Cucumber, de Rails, de Teste Automatizado Mega-Avançado, qualquer coisa.

Chame amigos seus pra dar curso em dupla com você. Divida clientes. Divida projetos, mesmo que não precise de ajuda.

Dizia o pai de um brother meu de infância: "Tudo que custa dinheiro é barato".
<h2>Busque modelos de custo zero</h2>
Trabalhe em coisas que tem custo administrativo / burocrático / manutenção zero. Por menos ganho que tragam, depois de prontas, estarão tendo uma relação custo/benefício infinitamente vantajosa.
<h2>Ganhe notoriedade</h2>
Faça coisas massa. Participe de projetos de software livre. Dê palestras gratuitas. Promova eventos (dojos, debates, grupos de usuários, etc).
<h2>By Dairton Bassi: Não tenha medo!</h2>
Meta a cara. Arrisque empreender. Arrisque inovar. O que você tem a perder? No máximo um emprego, mas isso pode ser revertido facilmente em um mercado aquecido como o atual. O pior que pode acontecer é não dar certo. Mesmo assim você terá aprendido muito mais do que batendo cartão.

Saia da zona de conforto. Se o seu trabalho estiver fácil e sob controle, isso significa que ele não está mais agregando para a sua evolução técnica e pessoal.

Não desperdice a chance de trocar de função se a nova oportunidade for mais desafiadora. Isso fará você crescer tecnicamente e o preparará para desafios maiores ainda. Conhecer pessoas novas é tão importante quanto manter-se em contato com código.

Não se detenha por insegurança ou pela sensação de despreparo. Como você acha que vai ganhar experiência em alguma coisa se sempre adiá-la?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>868</wp:post_id>
		<wp:post_date>2011-02-22 06:00:05</wp:post_date>
		<wp:post_date_gmt>2011-02-22 09:00:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>torne-se-excelente</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077494]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>607</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Torne-se excelente | 1up4developers -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/1up4dev.org/2011/02/torne-se-excelente/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2011-02-22 12:02:46</wp:comment_date>
			<wp:comment_date_gmt>2011-02-22 15:02:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Roger Leite, Rodrigo Panachi, Jefferson Bicca, Igor Hercowitz, @pbalduino and others. @pbalduino said: RT @rpanachi: Novo post: Torne-se excelente http://goo.gl/7Mvx7 #1up4dev [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>611</wp:comment_id>
			<wp:comment_author><![CDATA[Alexsandro]]></wp:comment_author>
			<wp:comment_author_email>blogsposts@alexsandro.com.br</wp:comment_author_email>
			<wp:comment_author_url>http://www.alexsandro.com.br</wp:comment_author_url>
			<wp:comment_author_IP>189.76.230.9</wp:comment_author_IP>
			<wp:comment_date>2011-02-23 15:15:21</wp:comment_date>
			<wp:comment_date_gmt>2011-02-23 18:15:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Eu criei meu próprio vírus, hahaha, vou disponibilizar o codigo de fonte dele logo logo.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>612</wp:comment_id>
			<wp:comment_author><![CDATA[Plínio Balduino]]></wp:comment_author>
			<wp:comment_author_email>pbalduino+1up4dev@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://github.com/pbalduino</wp:comment_author_url>
			<wp:comment_author_IP>200.171.91.17</wp:comment_author_IP>
			<wp:comment_date>2011-02-23 15:56:32</wp:comment_date>
			<wp:comment_date_gmt>2011-02-23 18:56:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Taí uma coisa que eu sempre quis aprender a fazer e, quando aprendi, não se usava mais MS DOS.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>611</wp:comment_parent>
			<wp:comment_user_id>7</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>622</wp:comment_id>
			<wp:comment_author><![CDATA[Thiago Caiubi]]></wp:comment_author>
			<wp:comment_author_email>thiago.caiubi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://thiagocaiubi.tumblr.com/</wp:comment_author_url>
			<wp:comment_author_IP>189.97.183.93</wp:comment_author_IP>
			<wp:comment_date>2011-02-28 23:55:01</wp:comment_date>
			<wp:comment_date_gmt>2011-03-01 02:55:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Baseado neste e no post do Plínio, me sinto confortável em ressltar uma idéia: "o pior que pode acontecer na vida de uma pessoa é um bom emprego"... autor: Desconhecido....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>624</wp:comment_id>
			<wp:comment_author><![CDATA[Andre Brito]]></wp:comment_author>
			<wp:comment_author_email>andrebritofonseca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.66.27.186</wp:comment_author_IP>
			<wp:comment_date>2011-03-01 20:27:51</wp:comment_date>
			<wp:comment_date_gmt>2011-03-01 23:27:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Isso aí! Muito bom! Ter aquele estilo de vida "take the bull by the horns" e "take the hurricane by the eye" é a única maneira interessante de se viver, certo? :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>626</wp:comment_id>
			<wp:comment_author><![CDATA[Alexandre Fazolin]]></wp:comment_author>
			<wp:comment_author_email>fazolin1@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.16.113.210</wp:comment_author_IP>
			<wp:comment_date>2011-03-04 10:05:11</wp:comment_date>
			<wp:comment_date_gmt>2011-03-04 13:05:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Gostei muito de seu post.

No entanto discordo no fato de que para você ser excelente é necessário trabalhar com software livre. Acredito que você pode ter excelência em qualquer área, basta você ter realmente interesse no que você faz e profissionalismo.

Na questão de ter uma faculdade ou não, pagar ou não, é muito relativo para ser taxado como "deslumbre". Caso você queira ter uma carreira técnica, uma faculdade às vezes não será necessário. Mas para outras carreiras, como as gerenciais, são extremamente necessárias. Veja em qualquer site de emprego as solicitações das empresas.

Bom, tirando o tópico "Não seja deslumbrado", o post foi muito bom.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Documentação não pode ser chato. Como fazer igual ao Rails Guides !</title>
		<link>http://1up4dev.org/2011/02/documentacao-nao-pode-ser-chato-como-fazer-igual-ao-rails-guides/</link>
		<pubDate>Thu, 24 Feb 2011 03:52:40 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=878</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>Documentação é aquilo que você reclama para fazer e reclama quando não encontra.</blockquote>
Por <a href="http://1up4dev.org/author/pbalduino/">Plínio</a> "Chico Xavier" via <a href="http://twitter.com/#!/p_balduino/status/35689585455407105">Twitter</a>.

Isto me fez refletir (bem rápido) sobre as possíveis causas da não-documentação:
<ul>
	<li>É muito chato ! Editar wiki, doc ... é incrível como toda documentação geralmente é feita em algo não produtivo.</li>
	<li>Espaço e Tempo (ou seja, prazo!). Sempre é deixado por último e nunca sobra tempo pra ser feito.</li>
	<li>Não é levado a sério. Levanta a mão que já viu a secretária documentando "tela" de sistema ... :D</li>
	<li>Normalmente o "investidor" do software não vê valor nisto, ou melhor, espera alguém pedir e repassa a tarefa com prioridade "faz rapidinho".</li>
</ul>
Ok. Após reflexão feita, hora de atacar o problema.
<h2>Usando "guides" para criar um Guide !</h2>
Este é um resultado da experiência abaixo:
<p style="text-align: center;"><a href="http://rogerleite.github.com/rubygems_snapshot/"><img class="aligncenter size-medium wp-image-891" title="Snapshot Guide (inspirado no Rails Guides)" src="http://1up4dev.org/wp-content/uploads/2011/02/snapshot_guide-300x241.png" alt="Snapshot Guide (inspirado no Rails Guides)" width="300" height="241" /></a></p>
Com a gem <a href="https://github.com/wycats/guides">guides</a>, em segundos você tem um <em>scaffold</em>, pronto para ser preenchido.
<pre><span style="font-family: Georgia, 'Bitstream Charter', serif; color: #444444;"><span style="line-height: 22px;">$ gem install guides</span></span></pre>
<pre><span style="font-family: Georgia, 'Bitstream Charter', serif; color: #444444;"><span style="line-height: 22px;"> </span></span><span style="color: #444444; font-family: Georgia, 'Bitstream Charter', serif; line-height: 22px;">$ guides #mostra os comandos disponíveis</span></pre>
<pre><span style="font-family: Georgia, 'Bitstream Charter', serif; color: #444444;"><span style="line-height: 22px;">$ guides new sample</span></span></pre>
<pre><span style="font-family: Georgia, 'Bitstream Charter', serif; color: #444444;"><span style="line-height: 22px;">$ cd sample</span></span></pre>
<pre><span style="font-family: Georgia, 'Bitstream Charter', serif; color: #444444;"><span style="line-height: 22px;">$ guides build &amp;&amp; guides preview</span></span></pre>
Pronto. Em http://localhost:9292 você terá acesso ao novo guia gerado.
<h3>Preenchendo o seu Guia</h3>
Em <em>guides.yml</em> (exemplo <a href="https://github.com/rogerleite/rubygems_snapshot/blob/master/guides/guides.yml">aqui</a>), está o básico do seu Guia. Nele está o índice de "capítulos", com resumo e nome do arquivo que o link deve seguir. Os arquivos textile  gerados/criados ficarão na pasta <em>source</em>, o resultado do "guides build" ficará na pasta <em>output</em>.

As páginas são em <a href="http://www.textism.com/tools/textile/">textile</a>, o que facilita bastante. Mas o grande diferencial, está em alguns <em>helpers</em> disponibilizados pela gem, que torna muito simples criar áreas de destaque como INFO, WARNING ... etc e adicionar comandos e códigos.

Para ter idéia de uma página em textile, segue o link <a href="https://github.com/rogerleite/rubygems_snapshot/raw/master/guides/source/getting_started.textile">source/getting_started.textile</a> (raw).
<h3>Repensando a documentação</h3>
Com certeza, usando a <em>gem guides</em>, vocẽ consegue um boost na hora de documentar. Já evitando aquela chatice de editar wiki, .doc, controlando versão ... etc. Usando textile, seu editor preferido e git, não tem mais desculpas.
<h4>Desenvolvendo Frameworks e APIs</h4>
Já faz um tempo que eu topo com a <em>vibe</em> <a href="http://www.google.com.br/search?sourceid=chrome&amp;ie=UTF-8&amp;q=Documentation+Driven+Development">Documentation Driven Development</a>. Como tudo na vida, é questão de bom senso. Documentar uma API, nada mais é do que definir a interface dela, e dependendo do caso, isto ajuda bastante antes de começar o desenvolvimento.
<h4>Você é um Usuário !</h4>
Uma documentação com um monte de imagem e seta, descrevendo o óbvio não serve para nada (além de passar raiva). Uma documentação <strong>sucinta</strong>, com o básico, por exemplo Instalação, Modo de Usar, Configurações Disponíveis é bem melhor que muito dossiê por aí ! Tente ao máximo se colocar no lugar do usuário ao escrever alguma documentação ou ajuda.

---

Não deixe de contribuir com o post. Mande sugestões, comentários, reclamações etc.

<span style="line-height: 24px; font-size: 16px;"> </span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>878</wp:post_id>
		<wp:post_date>2011-02-24 00:52:40</wp:post_date>
		<wp:post_date_gmt>2011-02-24 03:52:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>documentacao-nao-pode-ser-chato-como-fazer-igual-ao-rails-guides</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="documentacao"><![CDATA[documentação]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="rails-guides"><![CDATA[rails guides]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077806]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>614</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Documentação não pode ser chato. Como fazer igual ao Rails Guides ! | 1up4developers -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/1up4dev.org/2011/02/documentacao-nao-pode-ser-chato-como-fazer-igual-ao-rails-guides/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2011-02-24 01:37:49</wp:comment_date>
			<wp:comment_date_gmt>2011-02-24 04:37:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Roger Leite, Rodrigo Panachi. Rodrigo Panachi said: RT @rogerleite: Novo post: Documentação não pode ser chato. Como fazer igual ao Rails Guides ! http://goo.gl/c3tGe #1up4dev #rails [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>621</wp:comment_id>
			<wp:comment_author><![CDATA[Ricardo Almeida]]></wp:comment_author>
			<wp:comment_author_email>ricardoluiz1.almeida@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://manifestonaweb.wordpress.com.br</wp:comment_author_url>
			<wp:comment_author_IP>189.125.221.200</wp:comment_author_IP>
			<wp:comment_date>2011-02-28 14:21:14</wp:comment_date>
			<wp:comment_date_gmt>2011-02-28 17:21:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Valeu pela dica Roger!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>651</wp:comment_id>
			<wp:comment_author><![CDATA[Ismar Dantas]]></wp:comment_author>
			<wp:comment_author_email>ismardantasbs@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.diamantinastudio.com.br</wp:comment_author_url>
			<wp:comment_author_IP>187.1.15.118</wp:comment_author_IP>
			<wp:comment_date>2011-03-26 22:10:47</wp:comment_date>
			<wp:comment_date_gmt>2011-03-27 01:10:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ah muito legal já vi alguns sites usando, achei que era "feito no braço" rsrs valeu a dica!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>893</wp:comment_id>
			<wp:comment_author><![CDATA[Roberta Torres]]></wp:comment_author>
			<wp:comment_author_email>rtorres@uenf.br</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>177.100.87.108</wp:comment_author_IP>
			<wp:comment_date>2012-05-01 19:45:05</wp:comment_date>
			<wp:comment_date_gmt>2012-05-01 22:45:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ola Roger como faço para chamar este guide criado dentro de uma aplicacao rails sem perder as configurações de estilo? Desde ja agradeço]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>927</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email>roger.leite@1up4dev.org</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>189.125.221.200</wp:comment_author_IP>
			<wp:comment_date>2012-05-31 11:05:46</wp:comment_date>
			<wp:comment_date_gmt>2012-05-31 14:05:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Olá Roberta! Me desculpa pela demora na resposta, mas mesmo assim aí vai.
De forma rápida, se você colocar a pasta "output" do guide na pasta "public" da app Rails, já vai funcionar. O problema que isto vai misturar com os assets da sua app, o ideal seria "hospedar" o output do guide em um domínio ou subdomínio somente dele  mesmo.
Link de output de exemplo: <a href="https://github.com/rogerleite/rubygems_snapshot/tree/master/guides/source/output" rel="nofollow">https://github.com/rogerleite/rubygems_snapshot/tree/master/guides/source/output</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>893</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Pesquisa de pré-lançamento do Sitefique.me</title>
		<link>http://1up4dev.org/2011/03/pesquisa-de-pre-lancamento-do-sitefique-me/</link>
		<pubDate>Mon, 21 Mar 2011 09:00:31 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=903</guid>
		<description></description>
		<content:encoded><![CDATA[Pessoal, hoje estamos lançando a <a href="http://sitefique.me/pesquisa" target="_blank">pesquisa de intenção</a> do nosso próximo produto: <a href="http://sitefique.me/" target="_blank">Sitefique.me</a>, uma ferramenta online para <strong>criação de sites</strong> focado na <strong>simplicidade</strong>.
<h2>Sobre o produto</h2>
<a href="http://sitefique.me"><img class="aligncenter" title="Sitefique.me" src="http://media.tumblr.com/tumblr_li2zsoYtUc1qghpef.png" alt="" width="500" height="471" /></a>

A idéia surgiu há vários anos mas somente agora nos sentimos <a href="http://1up4dev.com/quem-somos" target="_blank">experientes o suficiente</a> para tirá-la do papel mantendo sua principal característica: ser <strong>simples</strong>. Se você acompanha nosso blog já deve ter notado que <a href="http://1up4dev.org/2011/02/complexidade-nao-escala/" target="_blank">nossa</a> <a href="http://1up4dev.org/2010/05/rubygems-snapshot-importandoexportando-gems-com-velocidade/" target="_blank">busca</a> <a href="http://1up4dev.org/2009/12/agile-enterprise-edition/" target="_blank">por</a> <strong><a href="http://1up4dev.org/2008/11/foco-no-problema/" target="_blank">simplicidade</a></strong> é <a href="http://1up4dev.org/2008/10/software-e-sobre-investimento/" target="_blank">uma</a> <a href="http://1up4dev.org/?s=simples" target="_blank">constante</a> (e não é uma coisa fácil de se encontrar nos <a href="http://1up4dev.org/2008/12/agilidade-cascateira/" target="_blank">ambientes</a> <a href="http://1up4dev.org/2008/06/guerrilha-agile-parte-1/" target="_blank">corporativos</a>).

Foi seguindo essa filosofia, de ser <strong>simples</strong>, que <a href="http://1up4dev.org/2011/02/pare-de-chorar-e-mexa-se/" target="_blank">decidimos</a> criar o <a href="http://sitefique.me" target="_blank">Sitefique.me</a>, voltado para <strong>pequenas empresas</strong>, que têm a necessidade de um <strong>site próprio</strong>, <strong>divulgar seus produtos</strong> e <strong>serviços</strong> ou até mesmo <strong>vendê-los pela internet</strong>, mas que ainda não encontraram a ferramenta na medida ou que <strong>coubesse no orçamento da empresa</strong>.

O <a href="http://sitefique.me/">Sitefique.me</a> permite <strong>criar um site</strong> do zero em poucos minutos, escolhendo um <strong>layout</strong> que pode ser <strong>personalizado</strong>, e <strong>criar páginas</strong> a partir de <strong>modelos</strong> prontos como <strong>vitrine de serviços</strong>, <strong>álbum de fotos</strong>, <strong>localização</strong> com <strong>mapa</strong> e formulário para <strong>contato</strong>. Tudo muito <strong>simples</strong> e direto ao ponto.
<h2>Precisamos da sua ajuda</h2>
A versão final do produto ainda não está disponível. Estamos finalizando os detalhes, cuidando de alguns assuntos legais, e passando aquele pente fino no código, mas pretendemos lançá-lo nas <strong>próximas semanas</strong>.
Por enquanto, gostaríamos que <a href="http://sitefique.me/pesquisa" target="_blank">respondessem nossa pesquisa de intenção</a>, para nos ajudar a decidir sobre alguns pontos do produto, como valores e planos. Quem responder nossa pesquisa e tiver interessado no produto, será <strong>convidado</strong> para testá-lo <strong>antes do lançamento</strong> oficial e ainda ganhará o <strong>primeiro mês</strong> de mensalidade <strong>grátis</strong>, sem compromisso.

Infelizmente não possuímos capital para investir na <strong>divulgação</strong>. Tudo que fizemos até agora foi com nosso próprio dinheiro (servidores, etc) e nosso “tempo livre”. Por isso, pedimos <strong>sua ajuda</strong> para divulgá-lo:
<ul>
	<li>Se você apóia iniciativas de <strong>empreendedorismo</strong> como esta, <a href="http://sitefique.me" target="_blank">indique o produto</a> para seus contatos ou empresas que podem necessitar desta solução. Você também pode <strong><a href="http://twitter.com/share?_=1300160882340&amp;count=horizontal&amp;text=http%3A%2F%2Fsitefique.me%20Sua%20empresa%20na%20internet.%20Simples%2C%20r%C3%A1pido%20e%20do%20seu%20jeito!&amp;url=http%3A%2F%2Fmigre.me%2F44ARK&amp;via=sitefiqueme" target="_blank">retuitar</a></strong> para seus seguidores.</li>
	<li>Se você é um <strong>desenvolvedor</strong>, como nós, nos ajude divulgando o produto para sua rede de contatos, como mais um “case” de <a href="http://rubyonrails.org/" target="_blank">Ruby on Rails</a>. Você também pode <strong><a href="http://twitter.com/share?_=1300160882340&amp;count=horizontal&amp;text=http%3A%2F%2Fsitefique.me%20Sua%20empresa%20na%20internet.%20Simples%2C%20r%C3%A1pido%20e%20do%20seu%20jeito!&amp;url=http%3A%2F%2Fmigre.me%2F44ARK&amp;via=sitefiqueme" target="_blank">retuitar</a></strong> para seus seguidores.</li>
	<li>Se você tem um <strong>tio</strong> ou um <strong>cunhado</strong> que pega no seu pé nos encontros de família: “Ei sobrinho, quando você vai fazer um site para minha lojinha”, nos ajude indicando o <a href="http://sitefique.me/">Sitefique.me</a>. De qualquer forma, você também pode <strong><a href="http://twitter.com/share?_=1300160882340&amp;count=horizontal&amp;text=http%3A%2F%2Fsitefique.me%20Sua%20empresa%20na%20internet.%20Simples%2C%20r%C3%A1pido%20e%20do%20seu%20jeito!&amp;url=http%3A%2F%2Fmigre.me%2F44ARK&amp;via=sitefiqueme" target="_blank">retuitar</a></strong> para seus seguidores.</li>
	<li>Ou se você simplesmente já sofreu com a famosa <a href="http://imasters.com.br/artigo/13412/mercado/sindrome_do_sobrinho_reloaded/">Síndrome do Sobrinho</a>, com certeza nos ajudará a <strong><a href="http://twitter.com/share?_=1300160882340&amp;count=horizontal&amp;text=http%3A%2F%2Fsitefique.me%20Sua%20empresa%20na%20internet.%20Simples%2C%20r%C3%A1pido%20e%20do%20seu%20jeito!&amp;url=http%3A%2F%2Fmigre.me%2F44ARK&amp;via=sitefiqueme" target="_blank">retuitar</a></strong> para seus seguidores.</li>
</ul>
<h2>Muito obrigado.</h2>
<a href="http://twitter.com/share?_=1300160882340&amp;count=horizontal&amp;text=http%3A%2F%2Fsitefique.me%20Sua%20empresa%20na%20internet.%20Simples%2C%20r%C3%A1pido%20e%20do%20seu%20jeito!&amp;url=http%3A%2F%2Fmigre.me%2F44ARK&amp;via=sitefiqueme" target="_blank">Retuite para seus seguidores</a>. <a href="http://blog.sitefique.me" target="_blank">Assine o blog do produto</a>. <a href="http://1up4dev.com" target="_blank">Conheça a empresa</a>. <a href="http://1up4dev.com/contato" target="_blank">Entre em contato</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>903</wp:post_id>
		<wp:post_date>2011-03-21 06:00:31</wp:post_date>
		<wp:post_date_gmt>2011-03-21 09:00:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pesquisa-de-pre-lancamento-do-sitefique-me</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="category" nicename="sitefique-me"><![CDATA[sitefique.me]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>O desenvolvedor preguiçoso</title>
		<link>http://1up4dev.org/2011/04/o-desenvolvedor-preguicoso/</link>
		<pubDate>Fri, 08 Apr 2011 16:24:49 +0000</pubDate>
		<dc:creator>pbalduino</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=925</guid>
		<description></description>
		<content:encoded><![CDATA[Durante o almoço eu estava conversando com um colega e citei que, se tivesse uma empresa, gostaria de contratar um programador/desenvolvedor/engenheiro que fosse preguiçoso. Por meio minuto ele deve ter imaginado que eu estava louco, ou que queria abrir transformar minha empresa imaginária numa repartição pública.

Vou tentar ser breve na explicação.

O primeiro ponto é que uma pessoa preguiçosa, dentro desse contexto, é completamente diferente de uma pessoa acomodada, encostada ou vagabunda. Uma pessoa preguiçosa, novamente nesse contexto, é aquela que se incomoda de fazer várias vezes ao dia a mesma tarefa, e encontra meios de automatizar isso.

Um caso real: eu trabalhei numa projeto em que era necessário compilar os fontes, passar os binários resultantes (executáveis, DLLs ou JARs) por um software proprietário para que esses fossem convertidos num formato que a plataforma proprietária entenda, e então utilizar um outro software para jogar esse binário convertido para dentro do dispositivo.

O segundo passo, a conversão dos binários, era freqüentemente esquecido, fazendo com que um binário desatualizado fosse instalado no dispositivo, desperdiçando tempo e estressando os envolvidos.

Um colega, preguiçoso, criou um passo novo que foi adicionado ao <a title="Maven" href="http://maven.apache.org/" target="_blank">Maven</a> para que essa geração fosse automatizada, reduzindo todo processo à compilação e instalação. Não fosse o software de instalação tão fechado, a coisa toda seria realizada num único processo.

O mesmo acontece com a utilização de testes automatizados. Poderíamos muito bem executar passo a passo todos os itens de uma planilha gigantesca cada vez que eu gerasse uma nova versão do sistema. Ao invés disso, escrevemos alguns testes automatizados (705 da última vez vi) que levam trinta segundos para executar toda vez que você altera o código. A cada nova funcionalidade, uma nova série de testes é escrita, fazendo com que a coisa seja menos trabalhosa para todos os envolvidos.

Automatizar tarefas repetitivas aumenta a produtividade, reduz drasticamente a possibilidade de que erros idiotas aconteçam e ainda te dá tempo para investir no que realmente interessa.

E você, está sendo preguiçoso ou acomodado?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>925</wp:post_id>
		<wp:post_date>2011-04-08 13:24:49</wp:post_date>
		<wp:post_date_gmt>2011-04-08 16:24:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>o-desenvolvedor-preguicoso</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="questionamento"><![CDATA[questionamento]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078484]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>655</wp:comment_id>
			<wp:comment_author><![CDATA[Yuri Ivatchkovitch]]></wp:comment_author>
			<wp:comment_author_email>mytos.mail@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://y3i12.posterous.com</wp:comment_author_url>
			<wp:comment_author_IP>189.21.198.114</wp:comment_author_IP>
			<wp:comment_date>2011-04-08 14:34:38</wp:comment_date>
			<wp:comment_date_gmt>2011-04-08 17:34:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Tinha um professor da faculdade que dizia que programadores tem que ser preguiçosos. Mas tem que ter preguiça de escrever, para que pense muito e escreva pouco e de forma eficiente.

Acho que a idéia está nos conformes =D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>654</wp:comment_id>
			<wp:comment_author><![CDATA[Igor Hercowitz]]></wp:comment_author>
			<wp:comment_author_email>ihercowitz@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.21.136.226</wp:comment_author_IP>
			<wp:comment_date>2011-04-08 13:28:14</wp:comment_date>
			<wp:comment_date_gmt>2011-04-08 16:28:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Curioso como esse cenário me parece familiar.... :P]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>656</wp:comment_id>
			<wp:comment_author><![CDATA[Alexsandro]]></wp:comment_author>
			<wp:comment_author_email>blogsposts@alexsandro.com.br</wp:comment_author_email>
			<wp:comment_author_url>http://www.alexsandro.com.br</wp:comment_author_url>
			<wp:comment_author_IP>189.76.230.9</wp:comment_author_IP>
			<wp:comment_date>2011-04-08 17:25:55</wp:comment_date>
			<wp:comment_date_gmt>2011-04-08 20:25:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ixi hahaha então eu sou um preguiçoso.
Indignado configurando 120 websites no IIS, me revoltei e fiz um programa que faz isto em massa.

Veja em http://twitter.com/#!/alexsandro_xpt/statuses/15861482357002240]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>657</wp:comment_id>
			<wp:comment_author><![CDATA[Plínio Balduino]]></wp:comment_author>
			<wp:comment_author_email>pbalduino+1up4dev@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://github.com/pbalduino</wp:comment_author_url>
			<wp:comment_author_IP>201.86.126.106</wp:comment_author_IP>
			<wp:comment_date>2011-04-08 17:33:19</wp:comment_date>
			<wp:comment_date_gmt>2011-04-08 20:33:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Alexsandro: Perfeito. Se não fosse a "preguiça" você estaria apertando parafuso o dia inteiro sem sair do lugar.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>656</wp:comment_parent>
			<wp:comment_user_id>7</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>679</wp:comment_id>
			<wp:comment_author><![CDATA[Silas Piacenti]]></wp:comment_author>
			<wp:comment_author_email>silaspiacenti@yahoo.com.br</wp:comment_author_email>
			<wp:comment_author_url>http://www.twitter.com/silaspiacenti</wp:comment_author_url>
			<wp:comment_author_IP>186.252.3.191</wp:comment_author_IP>
			<wp:comment_date>2011-04-20 12:04:55</wp:comment_date>
			<wp:comment_date_gmt>2011-04-20 15:04:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Também existe o funcionário (cara / pessoa :-) que não é preguiçoso, mas é muito produtivo, boa visão técnica, completo, leitor (hoje em dia, isso é MUITO raro), prestativo / atencioso (que presta atenção e tenta fazer algo ao seu redor pra melhorar as coisas)... :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>680</wp:comment_id>
			<wp:comment_author><![CDATA[Plínio Balduino]]></wp:comment_author>
			<wp:comment_author_email>pbalduino+1up4dev@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://github.com/pbalduino</wp:comment_author_url>
			<wp:comment_author_IP>201.86.126.106</wp:comment_author_IP>
			<wp:comment_date>2011-04-20 12:07:21</wp:comment_date>
			<wp:comment_date_gmt>2011-04-20 15:07:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Silas: E que automatiza tudo o que pode para não ter que passar o dia inteiro apertando o mesmo botão, certo?
Esse é o preguiçoso a que eu me refiro no texto.
Não encare 'preguiçoso', dentro desse contexto, como algo ruim. Eu não sou preguiçoso o suficiente ainda, mas é algo que tento melhorar o tempo todo.

Abraço e obrigado pelo comentário.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>679</wp:comment_parent>
			<wp:comment_user_id>7</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>681</wp:comment_id>
			<wp:comment_author><![CDATA[Rodrigo]]></wp:comment_author>
			<wp:comment_author_email>x@x.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>212.243.55.82</wp:comment_author_IP>
			<wp:comment_date>2011-04-20 12:27:16</wp:comment_date>
			<wp:comment_date_gmt>2011-04-20 15:27:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Silas
Completo? Ta falando de um programador ou ta vendendo um carro?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1002</wp:comment_id>
			<wp:comment_author><![CDATA[André]]></wp:comment_author>
			<wp:comment_author_email>taiar@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://taiar.com.br</wp:comment_author_url>
			<wp:comment_author_IP>201.80.114.181</wp:comment_author_IP>
			<wp:comment_date>2012-09-13 10:54:09</wp:comment_date>
			<wp:comment_date_gmt>2012-09-13 13:54:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[O que é a engenharia de software senão um pequeno fruto da preguiça humana?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Comunicação é tudo e mais um pouco</title>
		<link>http://1up4dev.org/2011/04/comunicacao-e-tudo-e-mais-um-pouco/</link>
		<pubDate>Tue, 12 Apr 2011 13:00:54 +0000</pubDate>
		<dc:creator>pbalduino</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=928</guid>
		<description></description>
		<content:encoded><![CDATA[Imagine que você receba a seguinte especificação:
<blockquote>Pegue uma folha de papel A4. Sob a mesa, dobre-a ao meio. Coloque a folha dobrada sobre a mesa.</blockquote>
A especificação parece clara e simples, mas aposto que dobramos as folhas de forma diferente, obtendo resultados diferentes. Eu dobrei a minha folha verticalmente, enquanto provavelmente você dobrou horizontalmente, obtendo uma forma próxima de um quadrado.

Qual foi o problema?

Eu criei uma especificação tendo em mente exatamente o que eu queria. E eu acreditei que aquilo era mais do que suficiente.

Você pegou uma especificação, aparentemente muito simples, e sem questionar seguiu os passos que julgou corretos.

Não houve comunicação, cada parte presumiu coisas e o resultado final não foi o esperado.

O grande diferencial das ditas metodologia ágeis é exatamente permitir a comunicação rápida, clara e sem ruídos entre todos os membros da equipe. Isso não tem nada a ver com post-its, gráficos ou ferramentas na Internet. É por isso que estamos vendo-as falhar, e é por isso que o seu projeto, e o meu, também estão falhando.

É por isso que relacionamentos chegam a níveis insuportáveis de convivência, casamentos terminam, empregos viram um inferno. É por isso que ocorrem desencontros, é por isso que clientes recebem algo que não pediram e que não os atendem.

É por isso também que não consegui comprar um mísero pão doce quando estive fora do país.

Comunicação é, na minha opinião, o fator mais importante, e o menos valorizado. É tudo isso que eu falei, e mais um pouco.

(Escrito pelo autor em 26/01/2009, e muito pouco ou quase nada mudou desde então)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>928</wp:post_id>
		<wp:post_date>2011-04-12 10:00:54</wp:post_date>
		<wp:post_date_gmt>2011-04-12 13:00:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>comunicacao-e-tudo-e-mais-um-pouco</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="coffee-script"><![CDATA[coffee script]]></category>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[coffeescript]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="questionamento"><![CDATA[questionamento]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="ruby-on-rails"><![CDATA[ruby on rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078118]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>664</wp:comment_id>
			<wp:comment_author><![CDATA[Humberto]]></wp:comment_author>
			<wp:comment_author_email>humberto.bulhoes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.102.94.3</wp:comment_author_IP>
			<wp:comment_date>2011-04-12 11:08:40</wp:comment_date>
			<wp:comment_date_gmt>2011-04-12 14:08:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Eu mesmo entendi que era pra dobrar o papel embaixo ("sob") da mesa... mas esse é o problema com especificações. Inúmeras vezes querem indicar COMO fazer ao invés de O QUE fazer, ou melhor ainda, do POR QUE aquela necessidade/funcionalidade ser importante.

"COMO" denota condescendência do comunicador. Ele está dizendo: <i>olha, você não faz idéia da complexidade disso, então estou dizendo exatamente o que deve ser feito e fim de papo</i>. É comunicação de cima pra baixo.

"O QUE" já compartilha a responsabilidade com o outro, agora considerado capaz de propor uma solução. Mas a menos que ambas as partes estejam completamente conscientes dos objetivos do projeto, existe grande chance de a solução virar <i>retrabalho</i>.

"POR QUE" implica comunicação de duas vias, sem reservas. Mais do que chegar numa solução pontual, a resposta do <i>por que</i> vai revelar os valores que embasam as necessidades do projeto. Acho que não é preciso muita fé pra acreditar que valores + necessidades &gt; código + ordens.

O que me leva a uma questão que deve virar post aqui no 1up. Stay tuned.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>669</wp:comment_id>
			<wp:comment_author><![CDATA[Alexsandro]]></wp:comment_author>
			<wp:comment_author_email>blogsposts@alexsandro.com.br</wp:comment_author_email>
			<wp:comment_author_url>http://www.alexsandro.com.br</wp:comment_author_url>
			<wp:comment_author_IP>189.76.230.9</wp:comment_author_IP>
			<wp:comment_date>2011-04-14 17:31:55</wp:comment_date>
			<wp:comment_date_gmt>2011-04-14 20:31:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pura verdade, foda que muitos não querem comunicar ou existe uma barreira externa sobre. É por isto que tudo desanda e falha...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>CoffeeScript quem?</title>
		<link>http://1up4dev.org/2011/04/coffescript-what/</link>
		<pubDate>Thu, 14 Apr 2011 13:20:26 +0000</pubDate>
		<dc:creator>pbalduino</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=934</guid>
		<description></description>
		<content:encoded><![CDATA[Muito buzz se formou depois que o DHH tornou público que a versão 3.1 do Rails virá com CofeeScript por padrão.

Aproveitando a barulheira, que é comum a cada vez que o criador da plataforma abre a boca, vamos nos ater ao que é importante e apresentar uma introdução ao resumo simplificado do CoffeeScript básico.

Confesso que minha opinião sobre essa ferramenta mudou nos primeiros instantes em que comecei a usar. No site do CoffeeScript (ok se eu começar a chamar de CS daqui para frente?) existe um link onde você digita o código do lado esquerdo e, imediatamente, do lado direito aparece o equivalente em JavaScript.

Fiz uma brincadeira lá usando um código que sempre me vem à cabeça ao tentar explicar o básico de programação funcional para alguem. Segue:
<pre>mimimi = (operation, value) ->
   operation(value);

dobro = (value) ->
  value + value;

quadrado = (value) ->
  value * value;

zero = (value) ->
  value - value;

um = (value) ->
  value / value;

alert(mimimi(dobro, 3));
alert(mimimi(quadrado, 3));
alert(mimimi(zero, 3));
alert(mimimi(um, 3));</pre>
Nada de outro mundo, certo? O equivalente JS é o código abaixo:
<pre>var dobro, mimimi, quadrado, um, zero;
mimimi = function(operation, value) {
  return operation(value);
};
dobro = function(value) {
  return value + value;
};
quadrado = function(value) {
  return value * value;
};
zero = function(value) {
  return value - value;
};
um = function(value) {
  return value / value;
};
alert(mimimi(dobro, 3));
alert(mimimi(quadrado, 3));
alert(mimimi(zero, 3));
alert(mimimi(um, 3));</pre>
CS permite também a checagem automática de valores e parâmetros opcionais, conforme o exemplo retirado do site:
<pre>fill = (container, liquid = "coffee") -&gt;
  "Filling the #{container} with #{liquid}..."</pre>
Ou o equivalente em JS:
<pre>var fill;
fill = function(container, liquid) {
  if (liquid == null) {
    liquid = "coffee";
  }
  return "Filling the " + container + " with " + liquid + "...";
};</pre>
Sem dúvida, muito mais legível e expressivo.

É uma ferramenta que eu pretendo usar em algum projeto pequeno, para testar e ver o quanto acelera meu trabalho. Em projetos maiores talvez eu demore um pouco mais para usar mas, considerando que umas das minhas aplicações já conta com 79% de código total escrito em JavaScript, segundo o GitHub, imagino que isso vai melhorar consideravelmente a manutenção do código.

E no mais, se o CS não te chamou a atenção e você não quer mesmo utilizar, basta remover o require do arquivo Gemfiles e a vida segue como se nada tivesse acontecido.

Links recomendados:
<ul>
	<li>Site do CoffeScript: <a title="http://jashkenas.github.com/coffee-script/" href="http://jashkenas.github.com/coffee-script/" target="_blank">http://jashkenas.github.com/coffee-script/</a></li>
	<li>Mais do mesmo: <a title="http://www.rubyinside.com/rails-3-1-adopts-coffeescript-jquery-sass-and-controversy-4669.html" href="http://www.rubyinside.com/rails-3-1-adopts-coffeescript-jquery-sass-and-controversy-4669.html" target="_blank">http://www.rubyinside.com/rails-3-1-adopts-coffeescript-jquery-sass-and-controversy-4669.html</a></li>
	<li>Exemplo bacana de como utilizar CS dentro da sua view: <a title="http://geekiriki.blogspot.com/2010/08/jquery-meets-coffeescript.html" href="http://geekiriki.blogspot.com/2010/08/jquery-meets-coffeescript.html" target="_blank">http://geekiriki.blogspot.com/2010/08/jquery-meets-coffeescript.html</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>934</wp:post_id>
		<wp:post_date>2011-04-14 10:20:26</wp:post_date>
		<wp:post_date_gmt>2011-04-14 13:20:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>coffescript-what</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="coffee-script"><![CDATA[coffee script]]></category>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[coffeescript]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="novidades-da-semana"><![CDATA[novidades da semana]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="ruby-on-rails"><![CDATA[ruby on rails]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077507]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>668</wp:comment_id>
			<wp:comment_author><![CDATA[Alexsandro]]></wp:comment_author>
			<wp:comment_author_email>blogsposts@alexsandro.com.br</wp:comment_author_email>
			<wp:comment_author_url>http://www.alexsandro.com.br</wp:comment_author_url>
			<wp:comment_author_IP>189.76.230.9</wp:comment_author_IP>
			<wp:comment_date>2011-04-14 17:26:12</wp:comment_date>
			<wp:comment_date_gmt>2011-04-14 20:26:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muito e tal.. gostei da sintax mas e ai?!!

1 - CofeeScript se usa com Rubi ou o que?

2 - Quais outras vantagens alem de um código limpo que ja é um bom ganho?


Valew....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>667</wp:comment_id>
			<wp:comment_author><![CDATA[Rodrigo]]></wp:comment_author>
			<wp:comment_author_email>x@x.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>212.243.55.82</wp:comment_author_IP>
			<wp:comment_date>2011-04-14 11:41:51</wp:comment_date>
			<wp:comment_date_gmt>2011-04-14 14:41:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Eu nao acho que o exemplo ficou tao melhor assim nao. Uma camada de acucar pra ganhar isso parece um pouco demais...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>666</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email>roger.barreto+comments@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/rogerleite</wp:comment_author_url>
			<wp:comment_author_IP>189.125.221.200</wp:comment_author_IP>
			<wp:comment_date>2011-04-14 10:47:08</wp:comment_date>
			<wp:comment_date_gmt>2011-04-14 13:47:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Aê Plínio! O flame está correndo solto ... pra quem gosta de acompanhar segue o link: https://github.com/rails/rails/commit/9f09aeb8273177fc2d09ebdafcc76ee8eb56fe33#comments]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>670</wp:comment_id>
			<wp:comment_author><![CDATA[Plínio Balduino]]></wp:comment_author>
			<wp:comment_author_email>pbalduino+1up4dev@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://github.com/pbalduino</wp:comment_author_url>
			<wp:comment_author_IP>201.86.126.106</wp:comment_author_IP>
			<wp:comment_date>2011-04-14 18:18:32</wp:comment_date>
			<wp:comment_date_gmt>2011-04-14 21:18:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Rodrigo: É exatamente por isso que eu não uso SASS/Less. O overhead acaba sendo maior do que o ganho. De fato você ganha alguma coisa em legibilidade, mas em exemplos com jQuery a sintaxe continua praticamente a mesma.

@Alexsandro: Você pode usar com Ruby/Rails através da gem coffee-script. Além do código teoricamente mais limpo, você ganha conhecimento numa ferramenta que talvez não vá usar.

Como eu disse, ainda preciso utilizar num projeto onde eu sinta a diferença, como aconteceu com o HAML, para poder dizer com toda as letras "é ótimo, pode usar" ou "não vale a pena, é só buzz."]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>7</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>O que eu tenho feito da vida ou Links sobre temas variados</title>
		<link>http://1up4dev.org/2011/04/o-que-eu-tenho-feito-da-vida-ou-links-sobre-temas-variados/</link>
		<pubDate>Tue, 19 Apr 2011 16:36:52 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=947</guid>
		<description></description>
		<content:encoded><![CDATA[Em um mega resumo, trabalhando muito no <a href="http://sitefique.me/" target="_blank">Sitefique.me</a>. Acho que este post é uma maneira de mostrar porque está difícil de postar coisas novas, e ao mesmo tempo, oferecer algum conteúdo para nossos leitores.

Hoje em dia, com frameworks "modernos", é relativamente rápido fazer um site e colocá-lo no ar. O difícil é escrever para o seu público alvo.

Quando se faz uma gem ou lib, o seu público alvo é o desenvolvedor e isto facilita muito, pois você sabe o que ele busca e espera do seu "produto". Agora, lançar um produto onde o público alvo é o usuário iniciante/intermediário, muda muito as coisas.

Sem entrar em mais detalhes, <strong>preparei uma compilação do que venho lendo, estudando e usando</strong>, para ajudar nesta nova jornada de montar um produto do zero. São assuntos profundos, que toco de forma superficial (ficou legal né! :D). Espero que aproveitem!
<h2>Brainstorm</h2>
Apesar de parecer, não é simples escrever. Montar textos como o <a href="http://blog.sitefique.me/post/4000593339/pesquisa-sitefiqueme" target="_blank">lançamento</a> e <a href="http://blog.sitefique.me/post/4556035664/informacoes-primeira-versao-sitefiqueme" target="_blank">roadmap</a>, é muito custoso para meros desenvolvedores como nós. Estamos usando o <a href="http://docs.google.com" target="_blank">Google Docs</a> para trabalhar remotamente e simultaneamente com muito êxito!
<h2>Empreendedorismo</h2>
Recomendo o blog <a href="http://www.saiadolugar.com.br">http://www.saiadolugar.com.br</a>
Muito boa esta apresentação, vale a pena conferir:
Guy Kawasaki - A arte do começo (<a href="http://video.google.com/videoplay?docid=8206486082210767228#">link direto aqui</a>)
http://video.google.com/videoplay?docid=8206486082210767228#

Fora isto, tem uma pá de livro sobre o assunto. Os clássicos modernos da 37signals, <a href="http://gettingreal.37signals.com/">Getting Real</a> e <a href="http://37signals.com/rework/">Rework</a>.
<h2>Controle de Tarefas</h2>
Somos em dois desenvolvedores e só! O nosso quadro de tarefas está no <a href="http://lessprojects.com/">lessprojects.com </a>(que por enquanto é de graça). É incrível como <a href="http://lesseverything.com/" target="_blank">os caras</a> são pragmáticos. Este foi um achado do <a title="Rodrigo Panachi" href="http://1up4dev.org/author/rodrigopanachi/">Panachi</a>.
<h2>Frontend, Design, layout e cia.</h2>
Este é um campo que é necessário ter <em>mindset</em> diferente. Até 2002, me virava muito bem com os layouts "divless", ou melhor, usando <em>table</em> mesmo (<em>shame on me</em>). Depois da onda <a title="Tableless web design" href="http://en.wikipedia.org/wiki/Tableless_web_design">tableless</a>, sempre tive dificuldade em desenvolver o frontend (e também nunca fiz muita questão). Agora chegou a hora, e tenho que estudar. É muito importante ter ajuda de quem manja muito! <a title="Diego Costa" href="http://twitter.com/umdiegocosta">Diego</a>, <a title="Gustavo Cardoso - O Designer" href="http://gustavocardoso.com/">Gus</a> e <a title="Barbara Sousa" href="http://www.barbarasousa.com.br">Babi</a>. Valeu!
<h2>Mail marketing</h2>
Enviar e-mail é muito simples. Agora, enviar e-mail com layout legal, com informação relevante, sem ser barrado como spam e renderizar no máximo de webmails e clientes desktop é muito difícil! Encontrei ótimos materiais sobre o assunto:
<ul>
	<li><a title="email design guidelines" href="http://www.campaignmonitor.com/design-guidelines/">Email design guidelines</a></li>
	<li><a title="16 Técnicas para otimizar a entrega do email marketing" href="http://www.templateria.com.br/blog/tecnologia/16-tecnicas-para-otimizar-a-entrega-do-email-marketing/">16 Técnicas para Otimizar a Entrega do Email Marketing</a></li>
	<li><a href="http://www.email-standards.org/">Email Standards Project</a> - Achei animal o objetivo do site. Eles rodam um <em>acid test</em> para uma leva de webmails e clients desktop, e de quebra você ganha uma lista de quem suporta o que ao renderizar html do seu e-mail.</li>
</ul>
<h2>Private Server</h2>
É onde hospedamos o produto, repositórios e o que precisar. O ponto é que você vai precisar! Estamos usando o <a title="Webbynode" href="http://webbynode.com/">http://webbynode.com</a>. Não tive problemas até hoje. Uma maravilha poder logar via ssh e fazer miséria.
<h2>Foco</h2>
Se tiver paciência (acho que o post já é um teste!) leia: <a title="How to get things done like a zen master" href="http://howtogetfocused.com/chapters/how-to-get-things-done-like-a-zen-master/">http://howtogetfocused.com/chapters/how-to-get-things-done-like-a-zen-master</a>

Comentem. Me avisem se este tipo de post é chatão ou legal.

Valeu!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>947</wp:post_id>
		<wp:post_date>2011-04-19 13:36:52</wp:post_date>
		<wp:post_date_gmt>2011-04-19 16:36:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>o-que-eu-tenho-feito-da-vida-ou-links-sobre-temas-variados</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077569]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>675</wp:comment_id>
			<wp:comment_author><![CDATA[babi]]></wp:comment_author>
			<wp:comment_author_email>babisun@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.125.221.200</wp:comment_author_IP>
			<wp:comment_date>2011-04-19 13:47:17</wp:comment_date>
			<wp:comment_date_gmt>2011-04-19 16:47:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Vale comentar que vocês estão usando metodologia agil para tocar o projeto, e que mesmo sendo em dois desenvolvedores funciona muito bem, claro que estou acompanhando de longe, mas é sempre bom ver quando a gestão é utilizada de forma correta e independente de quantos integrantes.
Ótimo post, principalmente porque eu precisava desses links para "email mkt" =D, que é o pesadelo de muitos developers!   

Sucesso! 

Babi]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>684</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email>roger.leite@1up4dev.org</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>187.3.60.181</wp:comment_author_IP>
			<wp:comment_date>2011-04-21 13:02:56</wp:comment_date>
			<wp:comment_date_gmt>2011-04-21 16:02:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[O texto tem um "pouco" mais que 140 caracteres. Realmente não entendi a ironia (se isso foi ironia).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>683</wp:comment_id>
			<wp:comment_author><![CDATA[Carlos Cambra]]></wp:comment_author>
			<wp:comment_author_email>carlosvaztec@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.102.26.40</wp:comment_author_IP>
			<wp:comment_date>2011-04-21 11:06:39</wp:comment_date>
			<wp:comment_date_gmt>2011-04-21 14:06:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fantástico post, parabéns pela iniciativa. Se estiverem precisando de algo que eu possa ajudar estou a disposição.

Sobre o video do Guy Kawasaki, acabei de ler o livro dele The art of the Start, e e disparado o melhor livro, em termos de dicas uteis para quem esta desenvolvendo uma ideia, que eu ja li. Agora estou lendo Founders At Work e estou gostando! Mas segue a dica, um livro que me abriu a cabeça sobre elaboração de produtos foi o The Blue Ocean Strategy.

Grande abraco!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>686</wp:comment_id>
			<wp:comment_author><![CDATA[Plínio]]></wp:comment_author>
			<wp:comment_author_email>pbalduino@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/</wp:comment_author_url>
			<wp:comment_author_IP>205.185.209.211</wp:comment_author_IP>
			<wp:comment_date>2011-04-21 14:31:27</wp:comment_date>
			<wp:comment_date_gmt>2011-04-21 17:31:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Don't feed the trolls]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>687</wp:comment_id>
			<wp:comment_author><![CDATA[Rodrigo Panachi]]></wp:comment_author>
			<wp:comment_author_email>rodrigopanachi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://nobrokenwindow.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>177.28.66.150</wp:comment_author_IP>
			<wp:comment_date>2011-04-21 21:43:25</wp:comment_date>
			<wp:comment_date_gmt>2011-04-22 00:43:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Carlos Cambra, valeu pela dica. Vai para minha wish list...

@Damiao, first!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Throw Legacy - Part I - Continuous testing with Java</title>
		<link>http://1up4dev.org/2011/04/throw-legacy-part-i-continuous-testing-with-java/</link>
		<pubDate>Mon, 25 Apr 2011 11:27:29 +0000</pubDate>
		<dc:creator>andrefarina</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=967</guid>
		<description></description>
		<content:encoded><![CDATA[This is my first blog post and I decide to write in English because writing is a good way to learning and I’d like to improve my English, so post a comment if you see some grammar errors. 8)

JRuby has helped me a lot bringing Ruby test “culture” into Java with RSpec.
In this series of blog posts I will show how I’m doing tests with Java legacy code. I will try cover topics including testing dao, service, controller and view layers.
In this part, we’re going to set up our development environment, write a RSpec example and implement with Java through JRuby. We’ll also get continuous testing running with infinity test gem.

The first thing we need is install <a href="https://rvm.beginrescueend.com/" target="_blank">rvm (Ruby Version Manager)</a>, <a href="http://www.jruby.org/" target="_blank">JRuby</a> and <a href="http://rubygems.org/" target="_blank">Ruby Gems</a>.
<pre>bash &lt;&lt; ( curl http://rvm.beginrescueend.com/releases/rvm-install-head )</pre>
<a title="http://rvm.beginrescueend.com/rvm/install/" href="http://rvm.beginrescueend.com/rvm/install/" target="_blank">http://rvm.beginrescueend.com/rvm/install/</a> for more info.

Install JRuby:
<pre>rvm install jruby</pre>
Set rvm to use JRuby:
<pre>rvm use jruby</pre>
Install RSpec:
<pre>gem install rspec</pre>
Once you have finish installation let’s start code with a example that expresses a form of payment orders available in Brazil called Boleto.

Create the initial project structure like this:
<pre>-boleto
  -spec
  -src
    -com
      -legacy
  -build</pre>
Open up <strong>spec/boleto_spec.rb</strong> and make it look like this:
<pre lang="ruby">require "date"
require "java"
java_import "com.legacy.Boleto"

describe Boleto do
  it "calculates due days" do
    boleto = Boleto.new
    boleto.due_date = java.util.Date.new(Date.parse("2011-01-15").ctime)
    boleto.payment_date = java.util.Date.new(Date.parse("2011-01-25").ctime)
    boleto.due_days.should == 10
  end
end</pre>
Let's run the example and watch it fail.
<pre>jruby -J-cp build -S rspec spec/boleto_spec.rb</pre>
<pre>NameError: cannot load Java class com.legacy.Boleto</pre>
Now write just enough code to make it pass on <strong>src/com/legacy/Boleto.java</strong> like this:
<pre lang="java">package com.legacy;
import java.util.Date;
public class Boleto {
  private Date dueDate;
  private Date paymentDate;

  public Date getDueDate() { return this.dueDate; }
  public void setDueDate(Date dueDate) { this.dueDate = dueDate; }
  public Date getPaymentDate() { return this.paymentDate; }
  public void setPaymentDate(Date paymentDate) { this.paymentDate = paymentDate; }
  public Integer getDueDays() { return 10; }
}</pre>
Also we need to compile the java class.
<pre>javac -d build/ src/com/legacy/Boleto.java</pre>
Instead of run the example by manual command again, let’s install a continuous testing gem:
<pre>wget --no-check-certificate\
 http://www.github.com/tomas-stefano/infinity_test/tarball/master\
 -O infinity_test.tar.gz
tar -zxvf infinity_test.tar.gz
cd tomas-stefano-infinity_test-{version}
gem build infinity_test.gemspec
gem install infinity_test-1.0.2.gem</pre>
What we have done here is install infinity_test gem that contains a path to pass arguments to specific versions of Ruby.

Let's run the example with continuous testing gem:
<pre>infinity_test --rspec --rubies=jruby+"-J-cp build"</pre>
Now we can write a test for code on <strong>spec/boleto_spec.rb</strong> and Infinity Test automatic runs the test.
Also we can create a .infinity_test file, like this:
<pre>infinity_test do
  use :rubies =&gt; %w(jruby),
    :specific_options =&gt; {'jruby' =&gt; '-J-cp build'},
    :test_framework =&gt; :rspec
  notifications :lib_notify   # for linux / growl for mac
end</pre>
And run:
<pre>infinity_test</pre>
<img src="http://1up4dev.org/wp-content/uploads/2011/04/infinity_test.png" alt="infinity_test jruby" width="640" height="150" />
<a title="https://github.com/tomas-stefano/infinity_test/wiki/Customize-Infinity-Test" href="https://github.com/tomas-stefano/infinity_test/wiki/Customize-Infinity-Test" target="_blank">https://github.com/tomas-stefano/infinity_test/wiki/Customize-Infinity-Test</a> for more info.

However, we have to compile the java classes when they change. The solution we came up with is to use editors like <a title="http://www.eclipse.org/" href="http://www.eclipse.org/" target="_blank">eclipse</a> or <a title="http://eclim.org/" href="http://eclim.org/" target="_blank">eclim</a>. This kind of editor auto-recompile Java files whenever they change.

Last notes
<ul>
	<li>I've posted the code for boleto here <a title="https://github.com/andref5/rspec-java" href="https://github.com/andref5/rspec-java" target="_blank">https://github.com/andref5/rspec-java</a></li>
	<li>More info about JRuby
<ul>
	<li> <a title="https://github.com/jruby/jruby/wiki" href="https://github.com/jruby/jruby/wiki" target="_blank">https://github.com/jruby/jruby/wiki</a></li>
	<li> <a title="http://pragprog.com/titles/jruby/using-jruby" href="http://pragprog.com/titles/jruby/using-jruby" target="_blank">http://pragprog.com/titles/jruby/using-jruby</a></li>
</ul>
</li>
	<li>More info about RSpec
<ul>
	<li> <a title="http://relishapp.com/rspec" href="http://relishapp.com/rspec" target="_blank">http://relishapp.com/rspec</a></li>
	<li> <a title="http://kerryb.github.com/iprug-rspec-presentation" href="http://kerryb.github.com/iprug-rspec-presentation" target="_blank">http://kerryb.github.com/iprug-rspec-presentation</a></li>
	<li> <a title="http://pragprog.com/titles/achbd/the-rspec-book" href="http://pragprog.com/titles/achbd/the-rspec-book" target="_blank">http://pragprog.com/titles/achbd/the-rspec-book</a></li>
</ul>
</li>
	<li>More info about Infinity_test
<ul>
	<li> <a title="https://github.com/tomas-stefano/infinity_test" href="https://github.com/tomas-stefano/infinity_test" target="_blank">https://github.com/tomas-stefano/infinity_test</a></li>
</ul>
</li>
	<li>More info about Ruby
<ul>
	<li> <a title="http://mislav.uniqpath.com/poignant-guide/book/" href="http://mislav.uniqpath.com/poignant-guide/book/" target="_blank">http://mislav.uniqpath.com/poignant-guide/book/</a></li>
</ul>
</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>967</wp:post_id>
		<wp:post_date>2011-04-25 08:27:29</wp:post_date>
		<wp:post_date_gmt>2011-04-25 11:27:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>throw-legacy-part-i-continuous-testing-with-java</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_1f24d43ed6ea8ebf2145b75b4f5820c2</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078693]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>690</wp:comment_id>
			<wp:comment_author><![CDATA[momochii]]></wp:comment_author>
			<wp:comment_author_email>yo3urmail2@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>188.143.232.37</wp:comment_author_IP>
			<wp:comment_date>2011-04-25 16:17:28</wp:comment_date>
			<wp:comment_date_gmt>2011-04-25 19:17:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pretty nice post. I just stumbled upon your blog and wanted to say that I have really enjoyed browsing your blog posts. In any case I’ll be subscribing to your feed and I hope you write again soon!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>691</wp:comment_id>
			<wp:comment_author><![CDATA[Rodrigo Panachi]]></wp:comment_author>
			<wp:comment_author_email>rodrigopanachi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://nobrokenwindow.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>189.121.22.14</wp:comment_author_IP>
			<wp:comment_date>2011-04-25 19:40:36</wp:comment_date>
			<wp:comment_date_gmt>2011-04-25 22:40:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great first post, André!

I really enjoy the concept of infinity_test that abstract the test configuration and rvm gemsets...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>692</wp:comment_id>
			<wp:comment_author><![CDATA[andrefarina]]></wp:comment_author>
			<wp:comment_author_email>andref5@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://andrefarina</wp:comment_author_url>
			<wp:comment_author_IP>189.33.168.168</wp:comment_author_IP>
			<wp:comment_date>2011-04-26 09:47:35</wp:comment_date>
			<wp:comment_date_gmt>2011-04-26 12:47:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Tks... \m/
I hope this post can helps someone at waterfalls.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>6</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Don&#039;t be a hero</title>
		<link>http://1up4dev.org/2011/04/dont-be-a-hero/</link>
		<pubDate>Wed, 27 Apr 2011 21:59:21 +0000</pubDate>
		<dc:creator>pbalduino</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1031</guid>
		<description></description>
		<content:encoded><![CDATA[Um amigo escreveu isso há algum tempo e tive a oportunidade de reler hoje.
<blockquote>Sometimes things go wrong: hardware is not acting as expected, the API you rely on is not reliable, some vital information is missing. But you don’t care, as you are a hero, a tough Charles Bronson-like guy that will accomplish the mission no matter what.

Another project is saved? Maybe. But someone made a very stupid choice and will pay for it. And I’m talking about you, Bruce Lee.

In six months nobody will remember the adversities you’ve been through. The sleepless nights. The weird bugs. The managers on you back, asking for status reports every five minutes. But something will linger: your name in the source code. It will be there in the SCM, ready to prove that you are a lousy coder and committed buggy/ugly code.

So, next time you find yourself in this kind of situation, take a deep breath and raise the red flag. Share the problem. It’s not fair to chain yourself to something bad just to show that you are tough.</blockquote>
Eu deveria ter levado esse texto impresso para a Venezuela.

<strong>Update em 02/05</strong>:
<a title="Igor Musardo" href="http://igormusardo.com.br/" target="_blank">Igor Musardo</a> <a href="http://igormusardo.com.br/2011/05/01/no-seja-um-heroi/" target="_blank">repostou esse post</a>, e adicionou um excelente vídeo da palestra do DHH na Rails Conf 2009. Recomendo que <a title="assistam" href="http://igormusardo.com.br/2011/05/01/no-seja-um-heroi/" target="_blank">assistam</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1031</wp:post_id>
		<wp:post_date>2011-04-27 18:59:21</wp:post_date>
		<wp:post_date_gmt>2011-04-27 21:59:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dont-be-a-hero</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="questionamento"><![CDATA[questionamento]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="we-dont-need-another-hero"><![CDATA[we don't need another hero]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[If you enjoyed this post, please consider <a href="#comments">leaving a comment</a> or <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">subscribing to the <abbr title="Really Simple Syndication">RSS</abbr> feed</a> to have future articles delivered to your feed reader.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078122]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>694</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email>roger.barreto+comments@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/rogerleite</wp:comment_author_url>
			<wp:comment_author_IP>189.125.221.200</wp:comment_author_IP>
			<wp:comment_date>2011-04-28 10:24:43</wp:comment_date>
			<wp:comment_date_gmt>2011-04-28 13:24:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Eu só fui aprender isso depois de anos tomando na cabeça!
Bela dica!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>699</wp:comment_id>
			<wp:comment_author><![CDATA[Igor Musardo]]></wp:comment_author>
			<wp:comment_author_email>igor@igormusardo.com.br</wp:comment_author_email>
			<wp:comment_author_url>http://igormusardo.com.br</wp:comment_author_url>
			<wp:comment_author_IP>200.150.79.130</wp:comment_author_IP>
			<wp:comment_date>2011-05-03 12:36:12</wp:comment_date>
			<wp:comment_date_gmt>2011-05-03 15:36:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Plínio, muito obrigado pelo post inspirador! E obrigado pela indicação!

Já acompanho o feed da 1up4dev há algum tempo e vocês sempre trazem postagem interessantes!

Parabéns pelo blog e pelo conteúdo de altíssimo nível.

Abraços,
Igor Musardo]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>697</wp:comment_id>
			<wp:comment_author><![CDATA[Não seja um heroi | Igor Musardo | Software Developer - We can build software that change the World.]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://igormusardo.com.br/2011/05/01/no-seja-um-heroi/</wp:comment_author_url>
			<wp:comment_author_IP>200.98.197.60</wp:comment_author_IP>
			<wp:comment_date>2011-05-01 12:48:36</wp:comment_date>
			<wp:comment_date_gmt>2011-05-01 15:48:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] o texto abaixo no blog 1up4developers em um post do Plínio Balduino, e como partilho 100% dessa ideia, tomei a liberdade de compartilhar e fazer a [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>698</wp:comment_id>
			<wp:comment_author><![CDATA[Não seja um heroi - redeRIA | Agregador de noticias, artigos, tutoriais Flex, Flash, JavaFX, AJAX e Rich internet applications em geral!]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://rederia.net/2011/05/01/nao-seja-um-heroi/</wp:comment_author_url>
			<wp:comment_author_IP>213.133.104.178</wp:comment_author_IP>
			<wp:comment_date>2011-05-01 13:14:09</wp:comment_date>
			<wp:comment_date_gmt>2011-05-01 16:14:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] o texto abaixo no blog 1up4developers em um post do Plínio Balduino, e como partilho 100% dessa ideia, tomei a liberdade de compartilhar e fazer a [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>&#039;(enlightenment)</title>
		<link>http://1up4dev.org/2011/07/enlightenment/</link>
		<pubDate>Thu, 21 Jul 2011 01:39:50 +0000</pubDate>
		<dc:creator>pbalduino</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1064</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: justify;">Sentado num quarto de hotel, longe de casa, com a televisão passando imagens sem som, uma tela de computador cheia de parênteses na minha frente, sentindo uma imensa felicidade por ganhar a vida fazendo aquilo que escolhi, e principalmente, por (re)descobrir o quão divertido e empolgante pode ser esse caminho.</p>
<p style="text-align: justify;">Meu filho, de um ano e meio, me ensina todo dia a ser curioso, a não parar de aprender, me relembra como é bom descobrir o mundo, entender como as coisas funcionam, aprender com os erros. Vejo nele a alegria de perceber pequenas coisas, de querer mais, por mais que isso algumas vezes incomode quem está ao redor.</p>
<p style="text-align: justify;">As pessoas costumam crescer, buscam conforto, buscam um canto macio e aquecido para encostar, um cubículo para se sentar todo dia fazendo o mesmo trabalha de sempre, sem aprender, sem questionar, muitas vezes em entender, ouvindo e dizendo as mesmas coisas todos os dias. As pessoas crescem e perdem aquela alegria da criança ao aprender, se esquecem como é bom entender, perguntar o porquê, colocar a mão onde não é para mexer.</p>
<p style="text-align: justify;">Eu não consigo entender como alguém escolhe se tornar um programador, um desenvolvedor, e não alimenta a curiosidade, não alimenta a vontade de aprender. É pelo salário, já me disseram. Pode ser, mas garanto que estão perdendo o melhor da brincadeira. Eles vão conseguir uma vida confortável, comprometer o orçamento com o que quer seja e logo o lado financeiro não será mais suficiente. Surgirá uma sensação de vazio, de inutilidade, de frustração por trabalhar com algo que não traz nenhuma satisfação, por desperdiçar metade do dia numa vida vazia, metade da vida numa função sem atrativos.</p>
<p style="text-align: justify;">Com a participação de alguns amigos, passamos a compartilhar experiências, conhecimento e novidades com os demais colegas de trabalho. Existem sempre aqueles que nunca estão interessados, como queiram. Mas existem aqueles que logo se tornam sedentos por conhecimento, por novidades, que começam a compartilhar o que sabem, o que descobriram, e isso começa a formar um círculo virtuoso. Essas pessoas passam a relembrar daquela alegria infantil de aprender e entender o mundo, e começam a contaminar as pessoas ao redor, aumentando esse círculo. O ambiente de trabalho passa a ter um clima melhor, apesar de tudo; as pessoas passam a se respeitar mais, a se conhecer melhor, a nutrir admiração uns pelos outros. Obrigado a todos por isso.</p>
<p style="text-align: justify;">Não deixe aquela curiosidade infantil e a vontade de descobrir o mundo morrerem em você. Vale todo o esforço, eu posso garantir.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1064</wp:post_id>
		<wp:post_date>2011-07-20 22:39:50</wp:post_date>
		<wp:post_date_gmt>2011-07-21 01:39:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>enlightenment</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="iluminacao"><![CDATA[iluminação]]></category>
		<category domain="post_tag" nicename="pensamento"><![CDATA[pensamento]]></category>
		<category domain="post_tag" nicename="plaft"><![CDATA[plaft!]]></category>
		<category domain="category" nicename="questionamento"><![CDATA[questionamento]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[If you enjoyed this post, please consider <a href="#comments">leaving a comment</a> or <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">subscribing to the <abbr title="Really Simple Syndication">RSS</abbr> feed</a> to have future articles delivered to your feed reader.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077554]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>839</wp:comment_id>
			<wp:comment_author><![CDATA[Plínio Balduino]]></wp:comment_author>
			<wp:comment_author_email>pbalduino+1up4dev@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://github.com/pbalduino</wp:comment_author_url>
			<wp:comment_author_IP>200.149.6.130</wp:comment_author_IP>
			<wp:comment_date>2011-12-08 15:04:59</wp:comment_date>
			<wp:comment_date_gmt>2011-12-08 18:04:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Obrigado, Anderson

Somos privilegiados por trabalhar com o que gostamos, e é nossa obrigação cultivar isso, mesmo que tenhamos que nadar todos os dias contra a maré.

Abraço.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>7</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>838</wp:comment_id>
			<wp:comment_author><![CDATA[Anderson Sanches]]></wp:comment_author>
			<wp:comment_author_email>andycds@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://software.pro.br</wp:comment_author_url>
			<wp:comment_author_IP>177.32.147.11</wp:comment_author_IP>
			<wp:comment_date>2011-12-08 14:24:25</wp:comment_date>
			<wp:comment_date_gmt>2011-12-08 17:24:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muito bom, parabéns!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>845</wp:comment_id>
			<wp:comment_author><![CDATA[amalrik maia]]></wp:comment_author>
			<wp:comment_author_email>amalrik.maia@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>187.70.38.90</wp:comment_author_IP>
			<wp:comment_date>2011-12-30 00:06:00</wp:comment_date>
			<wp:comment_date_gmt>2011-12-30 03:06:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[aplausos de pé para esse post.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>869</wp:comment_id>
			<wp:comment_author><![CDATA[Plínio Balduino]]></wp:comment_author>
			<wp:comment_author_email>pbalduino+1up4dev@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://github.com/pbalduino</wp:comment_author_url>
			<wp:comment_author_IP>177.146.53.27</wp:comment_author_IP>
			<wp:comment_date>2012-03-27 11:45:30</wp:comment_date>
			<wp:comment_date_gmt>2012-03-27 14:45:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://www.stateofcode.com/wp-content/uploads/2011/05/lisp.jpg]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>7</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>[Tutorial] Configurando o ambiente de desenvolvimento Ruby: RVM</title>
		<link>http://1up4dev.org/2011/08/tutorial-configurando-o-ambiente-de-desenvolvimento-ruby-rvm/</link>
		<pubDate>Mon, 22 Aug 2011 09:00:19 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1069</guid>
		<description></description>
		<content:encoded><![CDATA[Se você ainda não trabalha com <a href="http://www.ruby-lang.org/pt/" target="_blank">Ruby</a> pois acha complicado demais instalá-lo, chega de desculpas! Esse tutorial <del>for dummies</del> ajudará a instalar o Ruby através do <a href="http://beginrescueend.com/" target="_blank">RVM</a> de forma direta, sem enrolação.

Partindo de uma instalação do <a href="http://www.ubuntu.com/" target="_blank">Ubuntu</a> 11.04 zerada, começamos com os pré-requisitos para instalar o RVM:
<pre>user@ubuntu:~$ sudo apt-get install git-core curl</pre>
Basta confirmar a instalação dos pacotes, em seguida executar o comando (extraído do site oficial do RVM):
<pre>user@ubuntu:~$ bash &lt; &lt;(curl -s https://rvm.beginrescueend.com/install/rvm)</pre>
A seguir, o output completo gerado por esse comando indicará os pacotes e libs necessários para a instalação do Ruby.
<pre>(...)

dependencies:
# For RVM
  rvm: bash curl git

# For Ruby (MRI &amp; ree)  you should install the following OS dependencies:
  ruby: /usr/bin/apt-get install <strong>build-essential bison openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-0 libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev automake</strong>

(...)

Installation of RVM to /home/user/.rvm/ is complete.</pre>
Agora, basta instalar essas libs através do apt-get:
<pre>user@ubuntu:~$ sudo apt-get install build-essential bison openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-0 libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev automake</pre>
Com as dependências instaladas, abra um novo console (para re-carregar o RVM), e comece a instalar o Ruby, no caso, o MRI 1.8.7:
<pre>user@ubuntu:~$ rvm install 1.8.7</pre>
Esta operação levará alguns minutos. Quando concluída, você terá o Ruby 1.8.7 e o <a href="http://rubygems.org/" target="_blank">Rubygems</a> 1.8.6 instalados. Para testar tudo, execute os seguintes comandos:
<pre>user@ubuntu:~$ rvm use --default 1.8.7
Using /home/user/.rvm/gems/ruby-1.8.7-p352</pre>
<pre>user@ubuntu:~$ ruby -v
ruby 1.8.7 (2011-06-30 patchlevel 352) [i686-linux]</pre>
<pre>user@ubuntu:~$ gem -v
1.8.6</pre>
Pronto! Agora você tem o Ruby e Rubygems instalados e prontos para o uso. Caso queira conferir, o output dos comandos acima está disponível <a href="https://gist.github.com/1157378" target="_blank">neste gist</a>.

Fique ligado no próximo post: Gemsets e Bundler. Qualquer dúvida, use os comentários.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1069</wp:post_id>
		<wp:post_date>2011-08-22 06:00:19</wp:post_date>
		<wp:post_date_gmt>2011-08-22 09:00:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tutorial-configurando-o-ambiente-de-desenvolvimento-ruby-rvm</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[21,1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078697]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>791</wp:comment_id>
			<wp:comment_author><![CDATA[Guilherme]]></wp:comment_author>
			<wp:comment_author_email>guilherme.kato@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://facebook.com/gui_kato</wp:comment_author_url>
			<wp:comment_author_IP>189.125.221.100</wp:comment_author_IP>
			<wp:comment_date>2011-08-22 16:40:36</wp:comment_date>
			<wp:comment_date_gmt>2011-08-22 19:40:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ótimo post!!!

Os que tem na net hoje em dia estão bem desatualizados!

Obrigado]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>794</wp:comment_id>
			<wp:comment_author><![CDATA[Anderson Sanches]]></wp:comment_author>
			<wp:comment_author_email>andycds@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://software.pro.br</wp:comment_author_url>
			<wp:comment_author_IP>189.33.51.150</wp:comment_author_IP>
			<wp:comment_date>2011-08-26 17:05:23</wp:comment_date>
			<wp:comment_date_gmt>2011-08-26 20:05:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ótima dica. Mas podia ter sugerido a instalação do Ruby 1.9.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>827</wp:comment_id>
			<wp:comment_author><![CDATA[habutre]]></wp:comment_author>
			<wp:comment_author_email>habutre@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>177.60.161.158</wp:comment_author_IP>
			<wp:comment_date>2011-10-26 18:02:51</wp:comment_date>
			<wp:comment_date_gmt>2011-10-26 21:02:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Simples e objetivo. Para instalar a versão desejada, basta substituir a versão 1.8.7 utilizada no post. A versão mais recente na data deste comentário é a 1.9.2]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>840</wp:comment_id>
			<wp:comment_author><![CDATA[claudia]]></wp:comment_author>
			<wp:comment_author_email>claudia.cruvinel@abril.com.br</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.125.221.200</wp:comment_author_IP>
			<wp:comment_date>2011-12-14 14:55:48</wp:comment_date>
			<wp:comment_date_gmt>2011-12-14 17:55:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Parabens...simples, objetivo....otimo]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>848</wp:comment_id>
			<wp:comment_author><![CDATA[Vinicius]]></wp:comment_author>
			<wp:comment_author_email>vbonifacio@mmcafe.com.br</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.116.251.212</wp:comment_author_IP>
			<wp:comment_date>2012-01-10 06:03:59</wp:comment_date>
			<wp:comment_date_gmt>2012-01-10 09:03:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Parabéns pelo post. Direto ao assunto. Mas objetivo do que isso vai ser difícil. Excelente]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>853</wp:comment_id>
			<wp:comment_author><![CDATA[Orlove]]></wp:comment_author>
			<wp:comment_author_email>on.souza@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.52.71.182</wp:comment_author_IP>
			<wp:comment_date>2012-02-09 19:46:11</wp:comment_date>
			<wp:comment_date_gmt>2012-02-09 22:46:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Boa ótimo post bem objetivo e atualizado.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Dica Rápida: Removendo o test unit de um projeto Rails 3</title>
		<link>http://1up4dev.org/2011/11/dica-rapida-removendo-o-test-unit-de-um-projeto-rails-3/</link>
		<pubDate>Tue, 08 Nov 2011 11:00:28 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1114</guid>
		<description></description>
		<content:encoded><![CDATA[Este post serve mais como "cola" de referência, pois toda vez que vou fazer isso eu não encontro fácil no google e nunca lembro. Por sinal é mega simples, é só editar o <em>config/application.rb</em> e remover a linha:
<pre>require 'rails/all'</pre>
E substituir por:
<pre>require "active_record/railtie"
require "action_controller/railtie"
require "action_mailer/railtie"
require "active_resource/railtie"
require "sprockets/railtie"</pre>
Após isso, já não aparece mais as tasks de testes, e você pode remover a pasta test.
<pre>$ git rm -r test/</pre>
Pra finalizar, já segue a dica de alterar a task <em>default</em>, no final do <em>Rakefile</em> é só colocar:
<pre>Rake::Task[:default].prerequisites.clear
task :default =&gt; :spec  #no caso do rspec</pre>
Sucesso!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1114</wp:post_id>
		<wp:post_date>2011-11-08 08:00:28</wp:post_date>
		<wp:post_date_gmt>2011-11-08 11:00:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dica-rapida-removendo-o-test-unit-de-um-projeto-rails-3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[If you enjoyed this post, please consider <a href="#comments">leaving a comment</a> or <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">subscribing to the <abbr title="Really Simple Syndication">RSS</abbr> feed</a> to have future articles delivered to your feed reader.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077533]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>831</wp:comment_id>
			<wp:comment_author><![CDATA[Eder Eduardo]]></wp:comment_author>
			<wp:comment_author_email>eder.esilva@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://edereduardo.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>177.32.130.93</wp:comment_author_IP>
			<wp:comment_date>2011-11-08 12:55:49</wp:comment_date>
			<wp:comment_date_gmt>2011-11-08 15:55:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Então acho válido para projetos já existentes mais tem o comando do rails  que faz isso e melhor não criar novos tests quando você rodar um "rails g model "

rails new ./my_app  --skip-test-unit]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>834</wp:comment_id>
			<wp:comment_author><![CDATA[Dimas Cyriaco]]></wp:comment_author>
			<wp:comment_author_email>dimascyriaco@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/dimascyriaco</wp:comment_author_url>
			<wp:comment_author_IP>187.102.180.37</wp:comment_author_IP>
			<wp:comment_date>2011-11-18 15:37:11</wp:comment_date>
			<wp:comment_date_gmt>2011-11-18 18:37:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Roger, você também pode criar seu projeto com a flag -T:

rails new meu_projeto -T

Dessa forma o rails pula o test/unit. ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>[QuickTips] Habilitando auth_basic no Nginx e como gerar senhas do htpasswd</title>
		<link>http://1up4dev.org/2012/03/quick-tips-habilitando-auth-basic-nginx-e-como-gerar-senhas-htpasswd/</link>
		<pubDate>Tue, 20 Mar 2012 03:57:44 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1134</guid>
		<description></description>
		<content:encoded><![CDATA[Dica para quem usa o <a href="http://wiki.nginx.org/Main" target="_blank">Nginx</a> como web server de aplicações Rails e já apanhou para habilitar <a href="http://wiki.nginx.org/HttpAuthBasicModule" target="_blank">HTTP Basic Authentication</a> ou para gerar as senhas criptografadas em MD5.

Para habilitar o <em>auth_basic</em>, basta adicionar dentro do bloco <em>server</em> do arquivo <em>nginx.conf</em>:
<pre>location ~ / {
        auth_basic            "Restricted";
        auth_basic_user_file  htpasswd;
        passenger_enabled on;
}</pre>
Um detalhe importante: se estiver rodando sua app com <a href="http://www.modrails.com/" target="_blank">Passenger</a>, inclua a linha <em>passenger_enabled on;</em>

Ah, já estava esquecendo das senhas. Elas devem ficar no arquivo <em>htpasswd</em>, no mesmo diretório do arquivo<em> nginx.conf</em> e precisam seguir o formato user:senha em cada linha. Por exemplo:
<pre>user:sd5dsjo23PwdSh
admin:mdePW2hgrPddSA</pre>
O detalhe é que a senha precisa ser <a href="http://wiki.nginx.org/Faq#How_do_I_generate_an_htpasswd_file_without_having_Apache_tools_installed.3F" target="_blank">criptografada em MD5</a>. Uma maneira fácil (e que funciona) de fazer isso é executando:
<pre>ruby -e "puts 'usuario:' + 'senha'.crypt('md5')" &gt;&gt; htpasswd</pre>
Sucesso!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1134</wp:post_id>
		<wp:post_date>2012-03-20 00:57:44</wp:post_date>
		<wp:post_date_gmt>2012-03-20 03:57:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quick-tips-habilitando-auth-basic-nginx-e-como-gerar-senhas-htpasswd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1760367611]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Vagrant, virtualizando o ambiente de trabalho</title>
		<link>http://1up4dev.org/2012/06/vagrant-virtualizando-o-ambiente-de-trabalho/</link>
		<pubDate>Fri, 01 Jun 2012 13:14:30 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1141</guid>
		<description></description>
		<content:encoded><![CDATA[<a title="Vagrant, virtualized development made easy" href="http://vagrantup.com/">Vagrant</a>, se você não conhece ou não deu atenção para ele nestes últimos tempos, este post é pra ti mesmo. Trata-se de uma ferramenta que facilita (e muito!) a criação de Máquinas Virtuais usando o Virtual Box por baixo dos panos. E não é só isso! Com o Vagrant fazer <em>port forward</em>, compartilhar pastas é só questão de alterar um arquivo de configuração. Continue lendo que eu detalho melhor tudo isto.
<h2>Prós e Contra<del>s</del></h2>
Vários pontos se destacam no uso do Vagrant:
<ul>
	<li>Centraliza as <em>dependências de ambiente</em> do projeto. Sabe aquele projeto legado que só roda com rubygems 1.4.2 e mongo 1.1, com o Sol alinhado aos anéis de Saturno, então, você pode deixar tudo isso num <em>box</em> do Vagrant.</li>
	<li>Documenta as <em>dependências de ambiente</em>, caso use algum <em>Provisioner</em>.</li>
	<li>Facilita a integração de novos desenvolvedores na equipe, independente do SO que utiliza.</li>
	<li>Mantém a sua máquina local "limpa". Você não precisa instalar o Mysql, Postgree, Redis, Memcache etc. para cada projeto que roda.</li>
</ul>
Agora vem o contra.
<ul>
	<li>Se você trabalha com projetos simples ou até mesmo com poucos projetos, você pode sentir que está usando um canhão para matar mosca.</li>
</ul>
<h2>Instalação</h2>
Você precisa do <a title="Oracle VM VirtualBox" href="https://www.virtualbox.org/">VirtualBox</a> (versões 4.0.x ou 4.1.x). Já o Vagrant, o jeito mais fácil é instalar via rubygems, ou seja, um "gem install vagrant" e pronto! Caso ache melhor instalar via .dmg, .deb etc., você pode baixar em <a title="Vagrant Downloads" href="http://downloads.vagrantup.com">http://downloads.vagrantup.com</a>.
<h2>Exemplo de Uso</h2>
O <a title="Vagrant - Getting Started" href="http://vagrantup.com/v1/docs/getting-started/index.html">Getting Started</a> do Vagrant é bem completo e tem também o <a title="Rails Casts Virtual Machines with Vagrant" href="http://railscasts.com/episodes/292-virtual-machines-with-vagrant">Rails Cast</a>, mas segue um resumão.

Supondo que o vagrant está instalado. Vamos adicionar uma máquina:
<pre>$ vagrant box add lucid32 http://files.vagrantup.com/lucid32.box</pre>
Dentro da pasta do projeto, você tem criar o Vagrantfile e para isso execute:
<pre>$ vagrant init lucid32  #ja especificando o box lucid32 baixado</pre>
Vamos subir a VM:
<pre>$ vagrant up</pre>
Para acessar a VM:
<pre>$ vagrant ssh</pre>
Repare que dentro da VM, na pasta "/vagrant" estará montado o diretório do seu projeto, onde está o Vagrantfile. Supondo que seja um projeto Rails, daí em diante você segue todo o fluxo <em>default</em>, instalando o <em>bundler</em>, dando um <em>bundle install</em> e etc.

Vamos supor que você executou um "rails s" na VM e o projeto subiu na porta 3000. Para acessá-lo, você tem que configurar o forward_port no VagrantFile:
<pre><code>config.vm.forward_port 3000, 4000  # 3000 from VM, available at 4000</code></pre>
Dá um restart na VM:
<pre>$ vagrant halt &amp;&amp; vagrant up</pre>
Subir o projeto novamente. (vagrant ssh e o "rails s" dentro do /vagrant)

Acesse http://localhost:4000.
<h2>Extras e Conclusão</h2>
A idéia deste post é explicar rapidamente o que é e como usar o Vagrant, mas com certeza o Vagrant tem muito mais a oferecer. Segue alguns tópicos, que valem posts:

<a title="Vagrant Provisioning" href="http://vagrantup.com/v1/docs/provisioners.html">Provisioning</a> - Existem várias ferramentas que podem te ajudar no <em>setup</em> da sua VM. O Vagrant tem suport a Chef, Puppet e até mesmo Shell script.

<a title="Vagrant plugins" href="http://vagrantup.com/v1/docs/plugins.html">Plugins</a> - Você pode mudar ou adicionar funcionalidades ao Vagrant, criando plugins. É claro que sempre vale a pena googlar antes. Por exemplo o <a title="Vagrant Plugin Snapshots da VM" href="https://github.com/t9md/vagrant-snap">vagrant-snap</a>, que ajuda a tirar e gerenciar snapshots da VM.

<a title="Vagrant Boxes" href="http://vagrantup.com/v1/docs/boxes.html">Boxes</a> - No exemplo acima, usamos um box de Ubuntu, mas nada impede de você criar ou utilizar outros boxes. Existe o <a title="A list of base boxes for Vagrant" href="http://vagrantbox.es/">vagrantbox.es</a> que pode te ajudar a baixar uma existente, ou você vai ter que se aventurar pelos docs para criar uma zerada.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1141</wp:post_id>
		<wp:post_date>2012-06-01 10:14:30</wp:post_date>
		<wp:post_date_gmt>2012-06-01 13:14:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vagrant-virtualizando-o-ambiente-de-trabalho</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dicas"><![CDATA[dicas]]></category>
		<category domain="post_tag" nicename="gem"><![CDATA[gem]]></category>
		<category domain="post_tag" nicename="pragmatismo"><![CDATA[pragmatismo]]></category>
		<category domain="category" nicename="projetos"><![CDATA[projetos]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="vagrant"><![CDATA[vagrant]]></category>
		<category domain="post_tag" nicename="virtualizacao"><![CDATA[virtualização]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[Se você curtiu (ou não) o post, nos ajude <a href="#comments">deixando um comentário</a> ou <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">assinando nosso <abbr title="Really Simple Syndication">RSS</abbr> feed</a> para receber nossos futuros posts. Valeu!]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A experiência de lançar o RoloGames</title>
		<link>http://1up4dev.org/2012/06/a-experiencia-de-lancar-o-rologames/</link>
		<pubDate>Wed, 20 Jun 2012 11:37:53 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1161</guid>
		<description></description>
		<content:encoded><![CDATA[Nesta segunda-feira lançamos o <a title="Rolo Games - Rede Social de troca de jogos" href="http://rologames.com.br/">RoloGames</a>.
<p style="text-align: center;"><a href="http://rologames.com.br"><img class="aligncenter size-full wp-image-1174" title="Rolo Games - Rede Social de Troca de Jogos" src="http://1up4dev.org/wp-content/uploads/2012/06/logo1.jpg" alt="Rolo Games - Rede Social de Troca de Jogos" width="600" height="120" /></a></p>
Trata-se de um site social para trocar jogos de videogames, no caso, PlayStation 3.

O Panachi e eu ralamos muito durante 2 meses, projetando e programando todas as funcionalidades. Não foi fácil, mas é gratificante ver o site no ar.

Antes de contar esta experiência, queria falar um pouco do passado e dos projetos onde já falhamos (e aprendemos!), por ordem de lançamento:
<ol>
	<li><a title="Business Bingo Generator" href="http://business-bingo.heroku.com/">Business Bingo Generator</a>. Primeiro site que lançamos, foi feito em dois dias e só de zueira. O legal é que na época tinha uns dez termos cadastrados ... :D</li>
	<li>MeAciona (fora do ar). Foi há mais de 3 anos atrás. Na época, foi o nosso primeiro projeto feito em Rails. Foi muito legal criar o site e ao mesmo tempo aprender Ruby/Rails. O site tinha integração com a Bovespa, cadastro de usuários e possibilitava definir "regras" para receber avisos sobre determinado momento de um papel. Era voltado à pequenos investidores, como uma ferramenta para auxiliar a monitorar as ações. Porém logo percebemos que este nicho/mercado era muito restrito e que existiam várias outras ferramentas gratuitas para esta finalidade. Desistimos da idéia, porém o que aprendemos durante seu desenvolvimento não foi perdido!</li>
	<li><a title="Mooney - Controle financeiro pessoal simples, rápido e seguro" href="https://mooney.1up4dev.com/">Mooney</a>. Controle financeiro pessoal simples, rápido e seguro. Este foi o Panachi que fez, ficou bem legal e ele usa até hoje.</li>
	<li>Sitefique.me (fora de funcionamento, porém mantemos no ar, como portifólio, em <a href="http://sitefiqueme.1up4dev.com">http://sitefiqueme.1up4dev.com</a>). Foi no ano passado (2011). Já tinhamos mais experiência técnica e conseguimos em 3 meses, lançar um serviço mega legal que permitia que qualquer pessoa pudesse criar um site com layout customizado e o publicasse na internet com domínio próprio ou utilizando o subdomínio xxx.sitefique.me. Esperávamos atingir um mercado de pequenas empresas que precisassem manter um site completo e atualizado com um pequeno investimento mensal. É claro que não foi pra frente, pois não planejamos a parte não técnica e vendável (marketing, divulgação, etc) do serviço. A concorrência, principalmente serviços gratuitos, também ajudou a engavetarmos a idéia.</li>
</ol>
Mas como diz o ditado "até mesmo um pé na bunda te empurra pra frente" , continuamos perseverando! É um trabalho cansativo, mas o segredo é não desistir jamais! Isto até me lembra do <a href="http://1up4dev.org/2008/10/rails-summit-eu-fui">Rails Summit</a> (em 2008!), quando o Chris Wanstrath contou que antes de criar o Github, ele já tinha lançado mais de 17 sites! Segundo o meu cálculo, contando com o Rolo Games, ainda temos mais 12 chances! :D

E pensando nisso, resolvi compartilhar a experiência de como foi planejar, desenvolver e colocar no ar o RoloGames. Eu não consigo escrever posts gigantes (tipo do Akita), então resolvi dividir a experiência em três partes (vou atualizando os links conforme forem publicados):
<ul>
	<li><a title="Concepção do RoloGames" href="http://1up4dev.org/2012/06/concepcao-do-rologames/">Concepção</a></li>
	<li>Desenvolvimento</li>
	<li>Infraestrutura</li>
</ul>
Espero que o post te ajude de alguma maneira e te motive também, afinal até hoje o "polêmico" <a href="http://1up4dev.org/2011/02/pare-de-chorar-e-mexa-se/">Pare de chorar e mexa-se</a> é um dos posts mais lidos do blog!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1161</wp:post_id>
		<wp:post_date>2012-06-20 08:37:53</wp:post_date>
		<wp:post_date_gmt>2012-06-20 11:37:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-experiencia-de-lancar-o-rologames</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="desenvolvimento-de-site"><![CDATA[desenvolvimento de site]]></category>
		<category domain="post_tag" nicename="experiencia"><![CDATA[experiencia]]></category>
		<category domain="post_tag" nicename="lancamento"><![CDATA[lançamento]]></category>
		<category domain="category" nicename="marketing"><![CDATA[marketing]]></category>
		<category domain="post_tag" nicename="playstation-3"><![CDATA[playstation 3]]></category>
		<category domain="post_tag" nicename="ps3"><![CDATA[ps3]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="rede-social-troca-de-jogos"><![CDATA[rede social. troca de jogos]]></category>
		<category domain="post_tag" nicename="rolo-games"><![CDATA[Rolo Games]]></category>
		<category domain="post_tag" nicename="rologames"><![CDATA[rologames]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[Se você curtiu (ou não) o post, nos ajude <a href="#comments">deixando um comentário</a> ou <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">assinando nosso <abbr title="Really Simple Syndication">RSS</abbr> feed</a> para receber nossos futuros posts. Valeu!]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078351]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>936</wp:comment_id>
			<wp:comment_author><![CDATA[RODRIGO SANTOS]]></wp:comment_author>
			<wp:comment_author_email>rodrigo_santos_silva@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.102.25.17</wp:comment_author_IP>
			<wp:comment_date>2012-06-20 11:57:58</wp:comment_date>
			<wp:comment_date_gmt>2012-06-20 14:57:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Embora tenha acabado de ler o que deve ter sido apenas uma síntese de tudo que de fato aconteceu nesses projetos, vale lembrar que tem MUITA gente que prefere pagar por serviços melhores que os gratuitos e que para alguns seguimentos, nem sempre são. Porém, o marketing e divulgação podem ser fundamentais para alavancar produtos e serviços que nós consumidores e usuários, nem sabíamos que precisávamos.
Sucesso!!! Com certeza não precisarão chegar ao 17• projeto.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>937</wp:comment_id>
			<wp:comment_author><![CDATA[Concepção do RoloGames | 1up4developers]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2012/06/concepcao-do-rologames/</wp:comment_author_url>
			<wp:comment_author_IP>187.45.193.139</wp:comment_author_IP>
			<wp:comment_date>2012-06-25 07:07:14</wp:comment_date>
			<wp:comment_date_gmt>2012-06-25 10:07:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 1up4developers   Nadando contra o Waterfall. tail -f /mind/realworld &gt;&gt; /blog        &larr; A experiência de lançar o RoloGames [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>949</wp:comment_id>
			<wp:comment_author><![CDATA[Anderson Agustinho]]></wp:comment_author>
			<wp:comment_author_email>ander.agustinho@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.102.25.17</wp:comment_author_IP>
			<wp:comment_date>2012-07-10 15:43:57</wp:comment_date>
			<wp:comment_date_gmt>2012-07-10 18:43:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muito bom o post Roger, parabéns a você e ao Panachi pela iniciativa de empreendedorismo! :D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Concepção do RoloGames</title>
		<link>http://1up4dev.org/2012/06/concepcao-do-rologames/</link>
		<pubDate>Mon, 25 Jun 2012 10:05:09 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1184</guid>
		<description></description>
		<content:encoded><![CDATA[Este post é um tópico da <a title="A experiência de lançar o RoloGames" href="http://1up4dev.org/2012/06/a-experiencia-de-lancar-o-rologames/">Experiência de lançar o RoloGames</a>.
<h2>Quando surgiu a idéia</h2>
Como jogador, nunca achei um serviço legal pra trocar jogos usados. Haviam poucas opções e normalmente as trocas eram feitas via fórum (UOL Jogos, por exemplo). Na época minha filha tinha acabado de nascer, eu estava num emprego novo e acabei congelando a idéia. Recentemente surgiram alguns sites de trocas, tentei usar mas não gostei, pois eram muito "abertos" e mais aborrecia do que gerava oportunidade real. Sofrendo com isso que o Panachi e eu bolamos o <a title="Site social para trocar seus jogos!" href="http://rologames.com.br">RoloGames</a>, onde a troca deve ser sempre 1 por 1 e o site só te avisa se o <em>match </em>for exato.
<h2>Definindo um mantra</h2>
[caption id="attachment_1199" align="alignleft" width="240" caption="Sorriso pimpão do Sr. Kawasaki"]<a href="http://www.youtube.com/watch?v=VKhEg79xLio"><img class="size-full wp-image-1199" title="A Arte do Começo - The Art of Start" src="http://1up4dev.org/wp-content/uploads/2012/06/kawasaki-sm.jpg" alt="A Arte do Começo - The Art of Start" width="240" height="347" /></a>[/caption]

Totalmente baseado nas dicas do Sr. Kawasaki em <a title="Arte do Começo por Guy Kawasaki" href="http://www.youtube.com/watch?v=VKhEg79xLio">A Arte do Começo</a>, definimos uma filosofia para o site. Lembrando que se mantivermos esta filosofia sempre em mente, o site não perderá seu foco:
<ul>
	<li><strong>Oportunidades confiáveis</strong>. Queremos que o usuário encontre somente as oportunidades de troca que <strong>façam sentido</strong> a ele, e não receba spams que infortunam a vida ou propostas <em>sem noção</em> (por exemplo, oferecerem um jogo antigo em troca de um lançamento).</li>
	<li><strong>Toda troca deve ser justa</strong>. Infelizmente, é uma prática considerada normal a troca de 3 jogos por 1, onde pessoas ganham dinheiro em cima de jogadores. As propostas e trocas são sempre de um jogo por outro, de acordo com os desejos e ofertas dos usuários.</li>
	<li><strong>Fácil de usar</strong>. O site não deve atrapalhar a vida do usuário com mensagens que ele não queira receber ou oportunidades que não façam sentido. É claro que a velocidade de navegação do site conta neste quesito.</li>
	<li><strong>Social</strong>. Os usuários podem acompanhar a atividade de seus amigos, enviar mensagens diretas e ter a escolha de trocar os jogos somente com quem quiser.</li>
</ul>
<h2>Provas de Conceitos</h2>
Antes de encostar no código, o Panachi e eu definimos o objetivo do site e algumas premissas para começar o projeto, e a mais importante era: ter um banco de dados de jogos. Definimos somente as informações necessárias de um jogo, e partimos para uma prova de conceito. Em dois dias conseguimos montar um banco de dados bem completo, e a nossa solução foi simplesmente um <a title="Web crawler fácil e rápido com ruby e nokogiri" href="http://1up4dev.org/2011/01/criando-um-webcrawler-de-modo-facil-e-rapido-com-ruby-e-nokogiri/">crawler</a> de jogos! Por sinal, foi tão produtivo que nossa outra prova de conceito originou o <a title="Busca troféus da PSN (Playstation Network)." href="https://github.com/rogerleite/psn_trophies">psn_trophies</a>.
<h2>Interface no papel</h2>
Em paralelo às provas de conceito, começamos a rascunhar as telas do site. O processo foi bem simples, uma pilha de sulfite e lápis (na falta de uma caneta <a title="Rabiscando com uma caneta Sharpie" href="http://37signals.com/svn/posts/466-sketching-with-a-sharpie">Sharpie</a>). A partir dos esboços, começamos a definir quais funcionalidades o site teria. Em seguidas priorizamos as mais importantes e fechamos o escopo da primeira versão. Durante o desenvolvimento, muita coisa mudou no layout, mas os "rabiscos" da concepção foram a essência de tudo.
<h2>Início do desenvolvimento</h2>
Já tinhamos uma prova de conceito, uns rascunhos das páginas e uma lista de funcionalidades. E todo processo levou cerca de uma semana.

Sem perder mais tempo, partimos para o código! E foi então que começamos a tropeçar nos detalhes... mas este será um assunto para o próximo post. Até lá!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1184</wp:post_id>
		<wp:post_date>2012-06-25 07:05:09</wp:post_date>
		<wp:post_date_gmt>2012-06-25 10:05:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>concepcao-do-rologames</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="desenvolvimento-de-site"><![CDATA[desenvolvimento de site]]></category>
		<category domain="category" nicename="marketing"><![CDATA[marketing]]></category>
		<category domain="post_tag" nicename="playstation-3"><![CDATA[playstation 3]]></category>
		<category domain="post_tag" nicename="ps3"><![CDATA[ps3]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="rede-social-troca-de-jogos"><![CDATA[rede social. troca de jogos]]></category>
		<category domain="post_tag" nicename="rologames"><![CDATA[rologames]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[Se você curtiu (ou não) o post, nos ajude <a href="#comments">deixando um comentário</a> ou <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">assinando nosso <abbr title="Really Simple Syndication">RSS</abbr> feed</a> para receber nossos futuros posts. Valeu!]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1767865628]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>938</wp:comment_id>
			<wp:comment_author><![CDATA[A experiência de lançar o RoloGames | 1up4developers]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2012/06/a-experiencia-de-lancar-o-rologames/</wp:comment_author_url>
			<wp:comment_author_IP>187.45.193.139</wp:comment_author_IP>
			<wp:comment_date>2012-06-25 13:06:29</wp:comment_date>
			<wp:comment_date_gmt>2012-06-25 16:06:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 1up4developers   Nadando contra o Waterfall. tail -f /mind/realworld &gt;&gt; /blog        &larr; Vagrant, virtualizando o ambiente de trabalho Concepção do RoloGames &rarr; [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Pair Programming remoto com Screen e Vim</title>
		<link>http://1up4dev.org/2013/03/pair-programming-remoto-com-screen-e-vim/</link>
		<pubDate>Wed, 20 Mar 2013 14:27:02 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1111</guid>
		<description></description>
		<content:encoded><![CDATA[Limitar a produtividade e colaboração interpessoal ao espaço físico de um escritório parece uma idéia cada vez menos viável no ramo de desenvolvimento de software.

Empresas de TI bem sucedidas como <a title="37signals" href="http://37signals.com/" target="_blank">37signals</a> e <a title="Github" href="https://github.com/" target="_blank">Github</a> apostam em times e colaboradores distribuídos pelo mundo trabalhando remotamente em seus projetos.

Usando as ferramentas e práticas certas é possível <a title="REMOTE" href="http://37signals.com/svn/posts/3435-remote-office-not-required-the-new-book-by-37signals-coming-fall-2013" target="_blank">trabalhar remotamente</a> e até mesmo <a title="Pair programming" href="http://en.wikipedia.org/wiki/Pair_programming" target="_blank">parear com outro desenvolvedor</a> à distância.
<h2>Requisitos</h2>
<ul>
	<li>ssh</li>
	<li>screen</li>
	<li>vim</li>
	<li>skype</li>
</ul>
Para compartilhar o mesmo "contexto" remotamente, ambos desenvolvedores deverão ter acesso ao mesmo ambiente de desenvolvimento, via <strong>ssh</strong>. Estando em modo texto, será necessário utilizar um editor compatível, neste caso o <strong><a title="O melhor editor" href="http://www.vim.org/" target="_blank">VIM</a></strong>.  E para compartilhar o terminal em tempo real, utilizaremos o Screen. Para comunicação, basta utilizar o Skype. Simples não!?
<h2>Instalação</h2>
Uma vez escolhido o ambiente de desenvolvimento comum (um servidor de homologação, por exemplo), instale o Screen:
<pre>$ sudo apt-get install screen</pre>
Em seguida, configure as permissões de execução:
<pre>$ chmod u+s /usr/bin/screen
$ chmod 755 /var/run/screen</pre>
O Screen roda como um <em>daemon</em>, mantendo um <em>buffer</em> da tela. Sendo assim, o primeiro passo é iniciar a sessão do Screen:
<pre>$ screen -S nomedasessao</pre>
Isso criará uma sessão com o nome "nomedasessao" e será exibido um shell "limpo", o que quer dizer que você já está conectado a esta sessão. Para verificar, execute:
<pre>$ screen -ls
There is a screen on:
        8095.nomedasessao	(19-03-2013 23:32:54)	(Attached)
1 Socket in /var/run/screen/S-user.</pre>
A partir de agora, o buffer desta sessão pode ser compartilhado com outro usuário conectado. Basta que seu par se logue no servidor via ssh e execute:
<pre>$ screen -x nomedasessao</pre>
Pronto! O que você digitar, seu par vai ver e vice-versa. Assim, basta abrir o VIM e começar a parear remotamente.

Para se desconectar da sessão atual, execute:
<pre># screen -d
[remote detached from 8095.nomedasessao]</pre>
<h2>Usando o Screen</h2>
O Screen é simples e poderoso. É possível criar abas (window), dividir a tela (split), rolar a tela (copy mode), etc.

Todos comandos começam com Ctrl + a, em seguida o comando ou atalho. Seguem alguns comandos e atalhos que serão muito úteis do seu dia-a-dia pareando:

<strong>Copy mode (scroll)</strong>
Inicie o modo de cópia com Ctrl-a + [ (colchete para esquerda)
Navegue pela tela com as setas ou pageup/pagedown;
Marque o início da seleção do texto com &lt;espaço&gt; e termine com &lt;espaço&gt; para copiar;
Cole com Ctrl-a + ] (colchete para direita);

<strong>Windows</strong>
Crie uma janela (ou aba) com Ctrl-a + c
Liste as janelas com Ctrl-a + " (aspas)
Altere para a janela com Ctrl-a &lt;numero de 0-9&gt;
Feche (ou mate) a janela atual com Ctrl+a k

<strong>Split</strong>
Divida a tela horizontalmente com Ctrl-a + S
Divida a tela verticalmente com Ctrl-a + V
Mude de split com Ctrl-a + Tab
Feche um split com Ctrl-a + X

Para digitar um comando: Ctrl-a + :

Consulte o <a title="man screen" href="http://linux.die.net/man/1/screen" target="_blank">manual do Screen</a> para a lista completa de atalhos/comandos.
<h2>Dicas e considerações</h2>
Esta é uma abordagem simplista da utilização do Screen. Deixei vários detalhes de fora do post para tentar ser o mais didático possível. Para informações mais completas como configurações, gerenciamento de sessões e usuários, consulte o <a title="man screen" href="http://linux.die.net/man/1/screen" target="_blank">manual oficial</a>.

Existem outras alternativas como o <a title="tmux" href="http://tmux.sourceforge.net/" target="_blank">tmux</a>, mas o conceito envolvido é o mesmo apresentado aqui.

Se você estiver programando em Rails, provavelmente precisará de 3 contextos: console, server e editor (Vim). Recomendo utilizar cada contexto como "window" na mesma sessão do Screen.

Utilize o Skype (ou outro voip de sua preferência) durante todo o tempo em que estiverem pareando e estabeleça intervalos. <a title="pomodoro" href="http://www.pomodorotechnique.com/" target="_blank">Pomodoro</a> pode ser uma boa opção.

Dúvidas, críticas ou sugestões nos comentários. Sucesso!
<h2>Referências</h2>
<a href="http://www.linux.com/learn/tutorials/442418-using-screen-for-remote-interaction" target="_blank">http://www.linux.com/learn/tutorials/442418-using-screen-for-remote-interaction
</a><a href="http://linux.die.net/man/1/screen" target="_blank">http://linux.die.net/man/1/screen
</a><a href="http://aperiodic.net/screen/quick_reference" target="_blank">http://aperiodic.net/screen/quick_reference</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1111</wp:post_id>
		<wp:post_date>2013-03-20 11:27:02</wp:post_date>
		<wp:post_date_gmt>2013-03-20 14:27:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pair-programming-remoto-com-screen-e-vim</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
		<category domain="post_tag" nicename="pair-programming"><![CDATA[pair programming]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="screen"><![CDATA[screen]]></category>
		<category domain="category" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="vim"><![CDATA[vim]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[Gostou deste post? Então deixe um <a href="#comments">comentário</a>, deixe seu Curtir, divulgue no Twitter e se increva no nosso <a href="http://1up4dev.org/feed/">feed</a>!]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[QuickTips] Nginx: redirect de domínio com www para domínio sem www e vice-versa</title>
		<link>http://1up4dev.org/2012/07/quick-tips-nginx-redirect-de-dominio-com-www-para-dominio-sem-www-e-vice-versa/</link>
		<pubDate>Thu, 05 Jul 2012 13:00:45 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1210</guid>
		<description></description>
		<content:encoded><![CDATA[Simples, basta usar o <a title="Nginx HttpRewriteModule" href="http://wiki.nginx.org/HttpRewriteModule" target="_blank">HttpRewriteModule</a>.

Para redirecionar de <em>www.dominio.com</em> para <em>dominio.com</em> faça:
<pre>server {
    server_name  www.dominio.com;
    rewrite ^(.*) http://dominio.com$1 permanent;
}

server {
    server_name  dominio.com;
    #configurações do servidor aqui
}</pre>
E para redirecionar de <em>domínio.com</em> para <em>www.dominio.com</em>, faça:
<pre>server {
    server_name  dominio.com;
    rewrite ^(.*) http://www.dominio.com$1 permanent;
}

server {
    server_name  www.dominio.com;
    #configurações do servidor aqui
}</pre>
<em>Voilà!</em>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1210</wp:post_id>
		<wp:post_date>2012-07-05 10:00:45</wp:post_date>
		<wp:post_date_gmt>2012-07-05 13:00:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quick-tips-nginx-redirect-de-dominio-com-www-para-dominio-sem-www-e-vice-versa</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="domain"><![CDATA[domain]]></category>
		<category domain="post_tag" nicename="nginx"><![CDATA[nginx]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="redirect"><![CDATA[redirect]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1769909837]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[QuickTips] Migrando sua app Rails do MySQL para PostgreSQL sem dor</title>
		<link>http://1up4dev.org/2012/08/quicktips-migrando-sua-app-rails-do-mysql-para-postgresql-sem-dor/</link>
		<pubDate>Wed, 29 Aug 2012 11:00:07 +0000</pubDate>
		<dc:creator>rodrigopanachi</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1217</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Motivação</h2>
Meu primeiro contato com banco de dados relacionais foi o PostgreSQL, ou Postgres, nos tempos da faculdade. Achei muito complicado na época, difícil de instalar, administrar, etc. Quando comecei a programar profissionalmente, por volta de 2004, conheci o <a href="http://www.mysql.com/" target="_blank">MySQL</a> e gostei muito da sua simplicidade de configuração e ótima performance. Passou a ser o banco de dados padrão para a maioria dos projetos pessoais ou onde havia possibilidade de escolha.

Tudo andava bem, até que a <a href="http://info.abril.com.br/noticias/negocios/oracle-compra-sun-por-us-7-4-bilhoes-20042009-5.shl" target="_blank">Oracle comprou a Sun Microsystems em 2009</a>. Não é segredo que nunca fui fã da Oracle, e considerando os acontecimentos recentes com o <a href="http://br-linux.org/2011/oracle-descontinua-licenca-que-permitia-incluir-sua-java-vm-em-distribuicoes-linux/" target="_blank">Java</a> e o <a href="http://idgnow.uol.com.br/ti-corporativa/2011/04/19/oracle-desiste-do-openoffice/" target="_blank">OpenOffice</a>, não demoraria muito para o MySQL também receber seu <a href="http://blog.mariadb.org/disappearing-test-cases/" target="_blank">toque de Midas da escrotização</a>.

Dentre várias alternativas, optei pelo <a href="http://www.postgresql.org/" target="_blank">PostgreSQL</a> pela sua performance, muitas vezes comparável com o Oracle DB, suporte da comunidade, e por ser <a href="http://en.wikipedia.org/wiki/Open-source_software" target="_blank">Open Source</a>.
<h2>Instalando o Postgres</h2>
Se você estiver no Ubuntu, basta rodar:
<pre>$ sudo apt-get install postgresql-9.1 libpq-dev</pre>
Finalizada a instalação, inicie o serviço e abra o client do Postgres:
<pre>$ sudo service postgresql start
$ sudo -u postgres psql</pre>
Aproveite o terminal e mude a senha do usuário <em>postgres</em>:
<pre># \password</pre>
Para sair, digite:
<pre># \q</pre>
<h2>Migrando o banco</h2>
Estou usando a gem <a href="http://rubygems.org/gems/mysql2psql" target="_blank">mysql2psql</a>, que embora esteja deprecated, funciona muito bem e não tem dependência do stack do Rails, como o <em>activerecord</em>. Assim é possível rodar a migração fora do contexto da aplicação e descartar o MySQL quando terminar.

O funcionamento é simples: conecta no banco MySQL de origem e copia a estrutura e os dados para um banco Postgres destino configurado. Para instalar:
<pre>$ sudo gem install mysql2psql</pre>
Em seguida, execute:
<pre>$ mysql2psql</pre>
Isto criará o arquivo <em>mysql2psql.yml</em> com a estrutura de configuração necessária. Edite este arquivo para ficar assim:
<pre>mysql:
 hostname: localhost
 port: 3306
 socket: /var/run/mysqld/mysqld.sock
 username: root
 password: root
 database: app_development
destination:
 postgres:
  hostname: localhost
  port: 5432
  username: postgres
  password: postgres
  database: app_development</pre>
Agora crie o banco de destino no Postgres:
<pre>$ sudo psql -h localhost -U postgres -W
# CREATE DATABASE app_development;</pre>
Saia do client com <em>\q</em> e então rode novamente:
<pre>$ mysql2psql</pre>
Se as configurações estiverem corretas, a estrutura do banco e os dados serão migrados. O output será parecido com:
<pre>Creating table comments...
Created table comments
Creating table schema_migrations...
Created table schema_migrations
Creating table users...
Created table users

Counting rows of comments... 
Rows counted
Loading comments...
5 rows loaded in 0min 0s

Counting rows of schema_migrations... 
Rows counted
Loading schema_migrations...
20 rows loaded in 0min 0s

Counting rows of users... 
Rows counted
Loading users...
418 rows loaded in 0min 0s

Indexing table comments...
Indexed table comments
Indexing table schema_migrations...
Indexed table schema_migrations
Indexing table users...
Indexed table users

Table creation 0 min, loading 1 min, indexing 0 min, total 1 min</pre>
<h2>Configurando a app</h2>
Para finalizar, remova a gem do <em>mysql</em>, adicione a do Postgres no <em>Gemfile</em> e configure o <em>database.yml</em> com as informações do Postgres:
<pre># Gemfile
gem 'pg'</pre>
<pre># database.yml
development:
  adapter: postgresql
  host: localhost
  database: app_development
  username: postgres
  password: postgres</pre>
Basta rodar <em>bundle install</em> e iniciar sua aplicação usando PostgreSQL!

Se precisar ou preferir rodar uma migração no contexto da sua app, dê uma olhada na gem <a href="https://github.com/maxlapshin/mysql2postgres" target="_blank">mysql-to-postgres</a>, do mesmo autor.

Caso tenha alguma dúvida ou sugestão, deixe seu comentário.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1217</wp:post_id>
		<wp:post_date>2012-08-29 08:00:07</wp:post_date>
		<wp:post_date_gmt>2012-08-29 11:00:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quicktips-migrando-sua-app-rails-do-mysql-para-postgresql-sem-dor</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="mysql"><![CDATA[mysql]]></category>
		<category domain="post_tag" nicename="postgresql"><![CDATA[postgresql]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[Se você gostou deste post, considere <a href="#comments">deixar seu comentário</a> ou <a href="http://1up4dev.org/feed/" title="Assinar este site via RSS">assinar nosso Feed <abbr title="Really Simple Syndication">RSS</abbr></a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,22]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[quicktips-migrando-sua-app-rails-do-mysql-para-postgresql-sem-dores]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759813103]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>986</wp:comment_id>
			<wp:comment_author><![CDATA[[QuickTips] Migrando sua app Rails do MySQL para PostgreSQL sem dor &laquo; DbRunas &#8211; Noticias y Recursos sobre Bases de Datos]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.dbrunas.com.ar/2012/08/29/quicktips-migrando-sua-app-rails-do-mysql-para-postgresql-sem-dor/</wp:comment_author_url>
			<wp:comment_author_IP>66.147.244.171</wp:comment_author_IP>
			<wp:comment_date>2012-08-29 17:51:02</wp:comment_date>
			<wp:comment_date_gmt>2012-08-29 20:51:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] http://1up4dev.org/2012/08/quicktips-migrando-sua-app-rails-do-mysql-para-postgresql-sem-dor/  August 29, 2012 &nbsp;&nbsp;//&nbsp;&nbsp; MySQL, PostgreSQL &nbsp;&nbsp;//&nbsp;&nbsp; No Comments &nbsp;&nbsp;//&nbsp;&nbsp; [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>MinionServer - a real server to mock servers!</title>
		<link>http://1up4dev.org/2012/11/minionserver-a-real-server-to-mock-servers/</link>
		<pubDate>Wed, 28 Nov 2012 15:49:06 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1238</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://github.com/rogerleite/minion_server">MinionServer</a> is a ruby gem to help you with integration tests. You can create an app using Rack Builder and start a tiny server very easy. Let me show you some code:
<pre><code>require 'minion_server'

# build your integration app
IntegrationApp = Rack::Builder.new do
  map "/" do
    run lambda { |env|
      [200, {"Content-Type" =&gt; "text/plain"}, ["Be happy!"]]
    }
  end
end

server = MinionServer.new(IntegrationApp)
server.start("localhost", 1620)  # default: localhost, 4000

# do your calls
system "curl http://localhost:1620" # =&gt; "Be happy!"

server.shutdown
</code></pre>
You can see more examples at <a href="https://github.com/rogerleite/http_monkey">http_monkey</a>'s integration tests.
Hope that helps!

<strong>pt-br moment</strong>: Está em inglês porque eu publiquei no <a title="A real server to mock servers!" href="https://coderwall.com/p/ibr4ig">coderwall</a> e depois tive a idéia brilhante de postar aqui, com a preguiça mais brilhante ainda de traduzir em pt-br.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1238</wp:post_id>
		<wp:post_date>2012-11-28 12:49:06</wp:post_date>
		<wp:post_date_gmt>2012-11-28 15:49:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>minionserver-a-real-server-to-mock-servers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="http-server"><![CDATA[http server]]></category>
		<category domain="post_tag" nicename="integration"><![CDATA[integration]]></category>
		<category domain="post_tag" nicename="minion_server"><![CDATA[minion_server]]></category>
		<category domain="post_tag" nicename="mocks"><![CDATA[mocks]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="rubygem"><![CDATA[rubygem]]></category>
		<category domain="post_tag" nicename="test"><![CDATA[test]]></category>
		<category domain="post_tag" nicename="test-integration"><![CDATA[test integration]]></category>
		<category domain="post_tag" nicename="tiny-http-server"><![CDATA[tiny http server]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[If you enjoyed this post, please consider <a href="#comments">leaving a comment</a> or <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">subscribing to the <abbr title="Really Simple Syndication">RSS</abbr> feed</a> to have future articles delivered to your feed reader.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rails 4 - Novidades</title>
		<link>http://1up4dev.org/2012/11/rails-4-novidades/</link>
		<pubDate>Thu, 29 Nov 2012 13:38:49 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1244</guid>
		<description></description>
		<content:encoded><![CDATA[O Rails 4 já está em desenvolvimento <del>faz um tempo</del>, na verdade um bom tempo, desde 20/Dez/2011, olha <a title="DHH commiting Rails in 4.0.0.beta" href="https://github.com/rails/rails/commit/632fa15">o commit do DHH aqui</a>. No <a title="Ruby on Rails Guides - Rails 4" href="http://edgeguides.rubyonrails.org/4_0_release_notes.html">Ruby on Rails guides do <em>edge</em></a>, já tem muita coisa documentada do que vem por aí.

Segue um resumão:
<ul>
	<li>Suporte somente a ruby 1.9.3 ou superior</li>
	<li>Vendor/Plugins já era</li>
	<li>Muita "magia" movida pra gems \o/ (Dynamic finders, Mass assignments, AR Session Store, ActiveResource … e muito mais)</li>
	<li>Interface de Queue</li>
	<li>Asynchronous Mailer</li>
	<li>ActionController::Live</li>
	<li>HTML5 tag helpers</li>
	<li>Threadsafe on by default</li>
</ul>
O <a title="Twitter profile do Santiago Pastorino" href="https://twitter.com/spastorino" target="_blank">Santiago Pastorino</a>, um dos commiters do Rails está mantendo um <a title="Rails 4 links compilation" href="http://blog.wyeworks.com/2012/11/13/rails-4-compilation-links/" target="_blank">ótimo post</a> sobre o desenvolvimento do Rails 4, que vale a pena acompanhar.

Sucesso!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1244</wp:post_id>
		<wp:post_date>2012-11-29 10:38:49</wp:post_date>
		<wp:post_date_gmt>2012-11-29 13:38:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-4-novidades</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="novidades"><![CDATA[novidades]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="rails-4"><![CDATA[rails 4]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[If you enjoyed this post, please consider <a href="#comments">leaving a comment</a> or <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">subscribing to the <abbr title="Really Simple Syndication">RSS</abbr> feed</a> to have future articles delivered to your feed reader.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>O ano em que eu tirei a bunda da cadeira</title>
		<link>http://1up4dev.org/2013/03/o-ano-em-que-eu-tirei-a-bunda-da-cadeira/</link>
		<pubDate>Mon, 18 Mar 2013 16:45:25 +0000</pubDate>
		<dc:creator>pbalduino</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1253</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>TL;DR: </strong><em>2012 foi o ano em que eu publiquei um curso num grande portal de tecnologia, palestrei em eventos relevantes e ministrei um curso em um lugar que eu mal conhecia no mapa.</em>

De alguns anos para cá, passei a escrever uma pequena lista de metas para o ano seguinte e percebi que o simples fato de haver uma lista já era o suficiente para que eu não perdesse totalmente o foco.

A criação de uma lista, pequena, concisa, realista, também traz motivação para cumprir novas metas a cada vez que você completa algum dos itens. É a estratégia de alimentar o cérebro com pequenas recompensas para continuar em frente, como acontece num jogo.

Há pouco mais de dois anos, <a title="Pare de chorar e mexa-se" href="http://1up4dev.org/2011/02/pare-de-chorar-e-mexa-se/" target="_blank">escrevi aqui um post</a> em que eu dizia que deveríamos parar de chorar e reclamar e começar a correr atrás de nossos objetivos. Escrevi aquele texto especialmente para mim, como se uma parte do cérebro estivesse dando uma bronca na outra parte. Demorou, mas acho que a bronca fez efeito.

Usando a lista de metas, mesmo sem muita disciplina, consegui ir além do que eu previa, sendo que passei a considerar 2012 como o ano em que parei de reclamar, tirei a bunda da cadeira e as coisas começaram a acontecer.

Em 2011, resolvi que queria tentar participar de eventos como palestrante. Sempre tive dificuldade de falar em público e apresentar idéias, e achei que essa seria uma boa forma de corrigir essas limitações.

Em 2012 eu continuei, tanto para apresentar algum tema que eu considero interessante, como também como ferramenta de marketing pessoal. Tanto quanto ser competente e fazer um bom trabalho, é importante ver e ser visto.

Em Maio, apresentei um <a href="http://pbalduino.github.com/gurusp-talk-23/">talk de 30 minutos</a>, no 23º encontro do GURU-SP, demonstrando a simplicidade do LISP usando Clojure.

Em Agosto, para minha total surpresa, fui convidado a apresentar um lightning talk no <a href="http://www.qconsp.com/">QCON-SP</a>, onde falei sobre todos os sabores conhecidos de Ruby e dialetos, incluindo o Elixir. Apresentar um tema em cinco minutos é como fazer um show de Punk Rock, e a adrenalina de ambos é sempre bem vinda.

Em Outubro, foi ao ar o meu curso <a href="http://pro.imasters.com.br/online/cursos/ruby-on-rails-do-comeco-ao-fim">Ruby on Rails do começo ao fim</a>, pelo portal de cursos do iMasters. O curso nasceu como um tutorial que fiz para ajudar algumas pessoas próximas e acabou se tornando algo que me ajudou a conhecer mais pessoas.

Um dos frutos que colhi com esse curso foi o convite para <a href="http://pbalduino.github.com/senes2012/">palestrar</a> e ministrar um treinamento durante a IV Semana de Engenharia do Norte do Espírito Santo, no campus do CEUNES/UFES, em São Mateus - ES, que aconteceu em Novembro. Um efeito colateral muito bem vindo dessa minha ida ao Espírito Santo foi a criação do Grupo de Usuários Ruby-ES, um irmão caçula do GURU-SP.

Ainda em Novembro, fui convidado a participar do evento 7masters Java, organizado pelo iMasters, no qual tive a honra de dividir o espaço com pessoas que eu admiro há anos, como Bruno "JavaMan", Luca Bastos e a dupla dinâmica qmx/abstractj. Lá falei sobre os usos do <a href="http://pbalduino.github.com/7masters-java/">Clojure no mundo real</a> e <a href="http://videolog.tv/video.php?id=889921">compartilhei a experiência</a> que tive em um projeto, utilizando a ferramenta.

Fechando o ano, tive meu livro <a href="http://www.casadocodigo.com.br/products/livro-javascript-jquery">Dominando JavaScript com jQuery</a> publicado pela <a href="http://www.casadocodigo.com.br/">Editora Casa do Código</a>. Aliás, a versão impressa do livro foi disponibilizada hoje no site. Agora só me falta plantar uma árvore.

Em breve, pretendo compartilhar minhas experiências ao escrever o curso e o livro.

Que mais realizações venham em 2013, e que os frutos do que plantei continuem nascendo, mesmo que dessa vez eu não tenha feito nenhuma lista de metas a cumprir.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1253</wp:post_id>
		<wp:post_date>2013-03-18 13:45:25</wp:post_date>
		<wp:post_date_gmt>2013-03-18 16:45:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>o-ano-em-que-eu-tirei-a-bunda-da-cadeira</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="curso"><![CDATA[curso]]></category>
		<category domain="category" nicename="eventos"><![CDATA[eventos]]></category>
		<category domain="post_tag" nicename="livro"><![CDATA[livro]]></category>
		<category domain="post_tag" nicename="mexa-se"><![CDATA[mexa-se]]></category>
		<category domain="post_tag" nicename="palestra"><![CDATA[palestra]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[If you enjoyed this post, please consider <a href="#comments">leaving a comment</a> or <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">subscribing to the <abbr title="Really Simple Syndication">RSS</abbr> feed</a> to have future articles delivered to your feed reader.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[o-ano-em-que-eu-tirei-a-bunda-da-cadeira-intro]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759077833]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3034</wp:comment_id>
			<wp:comment_author><![CDATA[Ale Borba]]></wp:comment_author>
			<wp:comment_author_email>ale.alvesborba@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>200.158.211.137</wp:comment_author_IP>
			<wp:comment_date>2013-03-18 15:57:55</wp:comment_date>
			<wp:comment_date_gmt>2013-03-18 18:57:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[o/ o/ o/ o/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3049</wp:comment_id>
			<wp:comment_author><![CDATA[Nicolas França]]></wp:comment_author>
			<wp:comment_author_email>nicolasfranca9@msn.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.46.183.228</wp:comment_author_IP>
			<wp:comment_date>2013-03-19 12:55:29</wp:comment_date>
			<wp:comment_date_gmt>2013-03-19 15:55:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Parabéns cara, continue desse jeito. Vê se escreve outra listinha pra se garantir.

:D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Nos idos de 2012, UML, Design e Waterfall</title>
		<link>http://1up4dev.org/2013/01/nos-idos-de-2012-uml-design-e-waterfall/</link>
		<pubDate>Fri, 04 Jan 2013 15:51:14 +0000</pubDate>
		<dc:creator>rramos</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1258</guid>
		<description></description>
		<content:encoded><![CDATA[Há alguns anos atrás não havia uma referencia forte e consistente sobre os processos de desenvolvimento de software que não fosse Waterfall. Embora movimentos ágeis, processos mais simples e eficazes venham sendo utilizados a muito mais tempo, eles não eram tão evidentes como agora.
Independente do processo ágil discutido <a href="http://scrum.org">Scrum</a>, <a href="http://www.lean.org">Lean</a>, <a href="http://xprogramming.com">XP</a> e etc, etc, etc... o movimento para remover as velhas e engessadas práticas de desenvolvimento de software cresce vertiginosamente e começa a movimentar grandes empresas, que ainda amarradas e processos internos pesadíssimos, entendem que algo precisa mudar para se conseguir maior flexibilidade e agilidade ao entregar novos serviços e funcionalidade a seus clientes, e obviamente, estar à frente da concorrência.

Em meio a corrida do novo ouro, me encontro em uma sala de treinamento, às vesperas de um novo ano, estudando, discutindo e demonstrando como analisar e modelar sistemas utilizando a mais famosa linguagem de modelagem: a <a href="http://pt.wikipedia.org/wiki/UML">UML</a>.
Nunca consegui traçar uma ligação saudável entre os modelos criados com UML e código funcionando em produção. A idéia principal da UML é a de comunicar aos envolvidos em um projeto o que se planeja implementar; quais os detalhes que norteiam o desenvolvimento de uma solução e que <a href="http://www.batebyte.pr.gov.br/modules/conteudo/conteudo.php?conteudo=1718">requisitos funcionais e não funcionais</a> devem ser implementados. O problema é que qualquer coisa diferente de código no desenvolvimento de sistemas, está fadada a diferentes interpretações, ao conhecimento e experiência de quem <a href="http://1up4dev.org/2008/11/arquiteto-cascateiro">produz</a> e consome tais artefatos.

A idéia de times multidisciplinares e autogerenciáveis trazida pelo movimento ágil distoa fortemente do <a href="http://en.wikipedia.org/wiki/Waterfall_model">modelo cascata</a>, que delinea claramente o papel do analista de negócios/requisitos, o arquiteto/designer da solução e os <del>pobres</del> desenvolvedores que terão de seguir à risca todas definições impostas pelos modelos produzidos. E se durante o ciclo ágil os problemas identificados são priorizados para serem endereçados no próximo ciclo, como o processo formal gerencia isso? Hum... daí vem minha maior crítica quanto ao uso de modelos no desenvolvimento de software. Já que se decidiu por engessar o processo, seguí-lo fielmente deveria ser o preço a ser pago para manter tanta parafernalha de artefatos sem valor. Identificado o problema, o fluxo deveria voltar lá no início e corrigir requisitos, modelos, código e testes; mas o mercado não permite tanta demora, as linhas de negócio precisam colocar seu produto na prateleira e o fluxo controladamente perfeito que outrora se desenhou, na vida real não funciona mais.

É inviável manter a "documentação" do sistema em face a uma concorrência e volatilidade de negócios tão vorazes, então eu me pergunto: O que aquelas pessoas estavam fazendo trancadas numa sala, consumindo o tempo a um alto <a href="http://www.stanford.edu/group/fms/fingate/staff/capitalequip/capital_software.html">custo</a> da sua empresa? Aprendendo a como não fazer? Pode ser. Constatando uma vez mais que embora no papel, no processo, tudo aquilo que a teoria diz é muito bonito e controlado mas não funciona no mundo real? Sim, pode ser também, mas o pior é que passados anos de experiências ruins, projetos fracassados e montanhas de dinheiro jogados no ralo, ainda terão coragem de propor um processo baseado em requisitos → modelagem → desenvolvimento → testes, faseados e interdependentes, ignorando o histórico de dores e prejuízos experimentado.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1258</wp:post_id>
		<wp:post_date>2013-01-04 12:51:14</wp:post_date>
		<wp:post_date_gmt>2013-01-04 15:51:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nos-idos-de-2012-uml-design-e-waterfall</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="projetos"><![CDATA[projetos]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="uml"><![CDATA[uml]]></category>
		<category domain="category" nicename="waterfall"><![CDATA[waterfall]]></category>
		<category domain="post_tag" nicename="waterfall"><![CDATA[waterfall]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,18]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>HTTP Monkey - lançado!</title>
		<link>http://1up4dev.org/2013/01/http-monkey/</link>
		<pubDate>Wed, 23 Jan 2013 15:29:16 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1274</guid>
		<description></description>
		<content:encoded><![CDATA[O <a rel="nofollow" href="https://github.com/rogerleite/http_monkey">HTTP Monkey</a> é um cliente http simples, com <strong>interface fluente</strong>, suporte a <strong>múltiplos <em>adapters</em></strong> (Net::HTTP, Curb, HTTPClient, EM-HTTP-Request) e <strong><em>middlewares </em></strong>no<em> estilo rack.</em>

Pontos positivos:
<ul>
	<li><a rel="nofollow" href="http://rogerleite.github.com/http_monkey">Documentação</a>. Está um pouco desorganizado, mas tem. :D</li>
	<li><a rel="nofollow" href="http://rogerleite.github.com/http_monkey/#light_and_powerful">Autenticações</a>. Suporta basic, digest e SSL.</li>
	<li><a rel="nofollow" href="http://rogerleite.github.com/http_monkey/#more_power_to_the_people_for_god_sake">Middlewares</a> são simples classes Ruby. Por exemplo temos o <a rel="nofollow" href="https://github.com/rogerleite/http_monkey-cookie">middleware que dá suporte a cookies</a>.</li>
	<li><a rel="nofollow" href="http://rogerleite.github.com/http_monkey/#flexibility">Callback</a> por Response code.</li>
	<li>Helpers no headers response. Ex: resp.headers.content_type?; resp.headers.cache_control.max_age</li>
	<li>Pouco código, fácil manutenção (mais fácil do povo contribuir também).</li>
</ul>
Pontos negativos:
<ul>
	<li>Gem nova. Ainda não tem um case em produção.</li>
	<li>Falta de middlewares para funcionalidades como Cache, OAuth … etc.</li>
	<li>Não suporta adapter que permite requisições em paralelo.</li>
	<li>Tem o <a rel="nofollow" href="https://github.com/lostisland/faraday">Faraday</a> como concorrente, que tem base em produção e bastantes <em>middlewares</em>.</li>
	<li>A comunidade nacional e internacional ainda não conhece o Monkey (comecei agora a trabalhar nisso).</li>
</ul>
Na página <a title="HTTP Monkey uma alternativa para o Faraday (em inglês)" rel="nofollow" href="http://rogerleite.github.com/http_monkey/http_monkey_an_alternative_to_faraday.html">HTTP Monkey an alternative to Faraday</a>, comecei um trabalho de "localizar" o desenvolvedor que está acostumado com o Faraday em como trabalhar com o Monkey. Lembrando que a DSL do HTTP Monkey, foi feita pensando em substituir o uso do <a href="https://github.com/caelum/restfulie">Restfulie</a>, muita usada nos projetos da Abril Mídia.

Tem também <a title="Slides do HTTP Monkey" href="http://www.slideshare.net/rogerleite14/http-monkey">uns slides</a> que apresentei na Abril em alguns tech talks.

&nbsp;
<div style="margin-bottom: 5px;"><strong> <a title="HTTP Monkey" href="http://www.slideshare.net/rogerleite14/http-monkey" target="_blank">HTTP Monkey</a> </strong> from <strong><a href="http://www.slideshare.net/rogerleite14" target="_blank">Roger Leite</a></strong></div>
&nbsp;

Valeu e aceito numa boa sugestões e críticas referentes ao projeto, por favor comentem! :D]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1274</wp:post_id>
		<wp:post_date>2013-01-23 12:29:16</wp:post_date>
		<wp:post_date_gmt>2013-01-23 15:29:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>http-monkey</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="faraday"><![CDATA[faraday]]></category>
		<category domain="post_tag" nicename="http-client"><![CDATA[http client]]></category>
		<category domain="post_tag" nicename="http-monkey"><![CDATA[HTTP Monkey]]></category>
		<category domain="post_tag" nicename="http_monkey"><![CDATA[http_monkey]]></category>
		<category domain="category" nicename="marketing"><![CDATA[marketing]]></category>
		<category domain="category" nicename="projetos"><![CDATA[projetos]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="restfulie"><![CDATA[restfulie]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[Se você curtiu (ou não) o post, nos ajude <a href="#comments">deixando um comentário</a> ou <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">assinando nosso <abbr title="Really Simple Syndication">RSS</abbr> feed</a> para receber nossos futuros posts. Valeu!]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Programação funcional com JavaScript</title>
		<link>http://1up4dev.org/2013/02/programacao-funcional-com-javascript/</link>
		<pubDate>Thu, 21 Feb 2013 15:58:02 +0000</pubDate>
		<dc:creator>pbalduino</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1280</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>"JavaScript is LISP in C's clothing" - Douglas Crockford</blockquote>
<h2>O que é programação funcional</h2>
Programação funcional é, assim como a orientação a objetos, uma forma de se pensar em como resolver problemas.

A base do que hoje é a programação funcional foi criada paralelamente por Alan Turing e Alonzo Church na década de 1930, antes mesmo da existência dos computadores como o conhecemos.

Infelizmente, a programação funcional passou muito tempo restrita aos meios acadêmicos, o que faz com que o iniciante no assunto fique assustado com toda aquela notação matemática e com os termos incompreensíveis.

<pre>ω := λx.x x
Ω := ω ω 
Y := λg.(λx.g (x x)) (λx.g (x x))</pre>

Felizmente, o conceito de programação funcional é muito simples. Assim como na orientação a objetos a menor parte de um sistema é um objeto, você pode atribuir objetos a variáveis, pode passá-los por parâmetro e ter métodos retornando objetos, na programação funcional a menor parte do seu sistema é uma função.

Isso implica que você pode atribuir funções a variáveis, pode passá-las por parâmetro e mesmo fazer com que uma função retorne outra função. Alguma linguagens implementam também imutabilidade, que é quando todo valor é tratado como se fosse uma constante, e outros conceitos periféricos, o que não é o caso do JavaScript. Todos os demais conceitos de programação funcional derivam do fato de você lidar com funções como se fossem um valor como qualquer outro.
<h2>High order functions</h2>
Uma high order function (não achei uma tradução decente para o Português), apesar do nome intimidador, é simplesmente uma função que recebe outra função como parâmetro ou devolve uma função como resultado. Quando você usa callbacks no JavaScript e no jQuery, você está fazendo uso de high order functions.
<pre lang="javascript">$("button.mallandro")
  .click(function() {
    alert("Ié ié!");
  });</pre>
O método <tt>click</tt> é uma high order function, e a função anônima que faz <em>Ié ié!</em> é um callback.

Mais para frente vou mostrar mais formas de usar high order functions.
<h2>Escopo</h2>
Apesar do conceito de escopo não ser exclusivo da programação funcional, é importantíssimo que você entenda como funciona o escopo no JavaScript para que não fique confuso ao ver <em>closures</em> e <em>currying</em>.

Como na maioria das linguagens comerciais, uma variável declarada em um escopo maior é visível em um escopo menor, enquanto o contrário não é verdadeiro.

Na prática significa que uma variável global é visível por todo mundo:
<pre lang="javascript">var x = 1;

function foo() {
  console.log(x);
}

foo();

// Saída:   1</pre>
Significa também que uma variável local só é vista dentro do escopo em que foi criada, mesmo que tenha o mesmo nome de uma variável global:

<pre lang="javascript">
var x = 1;

function bar() {
  var x = 99;
  var y = 42

  console.log(x, y);
}

bar();
// 99 42

console.log(x);
// 1

console.log(y);
// ReferenceError: y is not defined
</pre>

Quando uma função altera o valor de uma variável global, isso afeta toda a aplicação. Por isso o uso de variáveis globais não é considerado uma boa prática. Porém, uma variável global passada por parâmetro para uma função não tem o seu valor alterado:

<pre lang="javascript">
var x = 1;
var y = 11;

function meh(x) {
  console.log("Dentro: ", x, y);
  x++;
  y++;
  console.log("Dentro: ", x, y);
}

meh(x);
// Dentro:  1 11
// Dentro:  2 12

console.log("Fora: ", x, y);
// Fora:  1 12
</pre>

<h2>Closures</h2>

Outra característica do escopo é que uma função guarda as variáveis do contexto em que foi criada. Isso significa que uma função pode continuar acessando variáveis que só existiam no momento em que ela foi criada.

<pre lang="javascript">
function counter() {
  var x = 0;

  return function() {
    return ++x;
  }
}

var count = counter();

console.log(count());
// 1
console.log(count());
// 2
console.log(count());
// 3
console.log(count());
// 4
console.log(x);
// ReferenceError: x is not defined
</pre>

O que acontece aqui é que <tt>count</tt> recebe uma função que incrementa o valor da variável <tt>x</tt>, só que essa variável existe apenas dentro da função <tt>counter</tt>. O que aconteceu aqui é que a função armazenada em <tt>count</tt> <i>se lembra</i> da variável que foi criada em outra função, mas que não está mais sendo executada.

Ao tentarmos exibir o valor da variável <tt>x</tt>, recebemos um erro, pois ela não existe no escopo global.

<h2>Currying</h2>

Juntando tudo o que vimos até aqui sobre high order functions, escopo e closures, chegamos ao <i>currying</i>. Currying é uma operação em que você transforma uma função que receberia mais de um parâmetro em uma série de chamadas de funções com apenas um parâmetro cada. 

Um dos usos dessa técnica é evitar, de forma elegante, que o mesmo parâmetro seja passado para a mesma função.

Vamos pegar um exemplo escrito de forma imperativa. Temos uma função <tt>hey</tt>, que recebe os parâmetros <tt>texto</tt> e <tt>nome</tt> e, a partir disso, imprime uma saudação.

<pre lang="javascript">
function hey(texto, nome) {
  console.log(texto + ", " + nome);
}

hey("Bom dia", "João");
// Bom dia, João

hey("Bom dia", "José");
// Bom dia, José

hey("Bom dia", "Nicolau");
// Bom dia, Nicolau
</pre>

Você pode dizer que poderíamos guardar "Bom dia" em uma variável. Concordo, mas isso não mudaria nada dentro do que estamos apresentando.

Reescrevendo a mesma função usando currying, teremos o código abaixo:

<pre lang="javascript">
function hey(texto) {
  return function(nome) {
    console.log(texto + ", " + nome);
  }
}

var bomDia = hey("Bom dia");

bomDia("João");
// Bom dia, João

bomDia("José");
// Bom dia, José

bomDia("Nicolau");
// Bom dia, Nicolau
</pre>

Programação funcional é muito mais do que os conceitos que apresentei aqui, mas como um primeiro contato já dá para fazer muita coisa bacana.

Recomendo que você estude e pesquise a respeito. Mesmo que você não use uma linguagem funcional no seu dia-a-dia, o fato de conhecer um novo modo de pensar acaba alterando a forma como você resolve problemas, fazendo com que você tenha idéias melhores e mais elegantes.

<b>Update em 26/02:</b>

Este artigo foi publicado também no iMasters, no endereço <a href="http://imasters.com.br/front-end/javascript/programacao-funcional-com-javascript/" target="_blank">http://imasters.com.br/front-end/javascript/programacao-funcional-com-javascript/</a>.

<i>Esse texto é parte do livro <a href="http://www.casadocodigo.com.br/products/livro-javascript-jquery" target="_blank">Dominando JavaScript com jQuery</a>, publicado pela <a href="http://www.casadocodigo.com.br" target="_blank">Editora Casa do Código</a></i>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1280</wp:post_id>
		<wp:post_date>2013-02-21 12:58:02</wp:post_date>
		<wp:post_date_gmt>2013-02-21 15:58:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>programacao-funcional-com-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="programacao-funcional"><![CDATA[programação funcional]]></category>
		<category domain="category" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,22,17,18,23]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[If you enjoyed this post, please consider <a href="#comments">leaving a comment</a> or <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">subscribing to the <abbr title="Really Simple Syndication">RSS</abbr> feed</a> to have future articles delivered to your feed reader.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078355]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2746</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
			<wp:comment_author_email>roger.barreto@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org</wp:comment_author_url>
			<wp:comment_author_IP>177.72.249.19</wp:comment_author_IP>
			<wp:comment_date>2013-02-21 13:57:35</wp:comment_date>
			<wp:comment_date_gmt>2013-02-21 16:57:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Parabéns Plínio! Tanto pelo post quanto pelo livro. Achei muito legal a abordagem e os exemplos. Por sinal com certeza vou comprar o livro (só me dá um mês que a coisa tá feia por aqui!), por sinal, tem um ótimo sumário! Somente este tema já daria um próximo livro.

E não menos importante, pra quem ainda não vê o valor de se aprender uma linguagem funcional, já existe lugares que este conhecimento é um requisito, olha o exemplo de dev na <a href="http://soundcloud.com/jobs/2012-03-23-back-end-developer-berlin-germany" rel="nofollow">soundcloud</a> que o Phil Calçado <a href="https://twitter.com/pcalcado" rel="nofollow">tuítou</a>!).

Muito sucesso e espero mais posts como este! Com certeza tem um "parte 2" aí no seu subconsciente ou consciente ou agora vai ter ... :D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3192</wp:comment_id>
			<wp:comment_author><![CDATA[O que eu aprendi escrevendo | 1up4developers]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1up4dev.org/2013/04/o-que-eu-aprendi-escrevendo/</wp:comment_author_url>
			<wp:comment_author_IP>187.45.193.139</wp:comment_author_IP>
			<wp:comment_date>2013-04-11 07:33:09</wp:comment_date>
			<wp:comment_date_gmt>2013-04-11 10:33:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] calma. Mostre para outras pessoas, peça opinião. Eu pensei em um texto por mais de dois anos e publiquei aqui antes de adicionar no livro. O feedback dos leitores foi importantíssimo para que a versão final [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>O que eu aprendi escrevendo</title>
		<link>http://1up4dev.org/2013/04/o-que-eu-aprendi-escrevendo/</link>
		<pubDate>Thu, 11 Apr 2013 10:30:47 +0000</pubDate>
		<dc:creator>pbalduino</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1363</guid>
		<description></description>
		<content:encoded><![CDATA[Apesar de ter <a href="http://www.casadocodigo.com.br/products/livro-javascript-jquery">um livro</a> e <a href="http://pro.imasters.com.br/online/cursos/ruby-on-rails-do-comeco-ao-fim">um curso</a> publicados, eu ainda estou longe de ser considerado um escritor. Honestamente, nem ao menos sei o que é necessário para que eu, ou outra pessoa, me considere como tal.

Pretendo escrever outro livro ainda esse ano, mas ainda não tenho nada definido. Escrever um curso ou um livro é algo cansativo, mas muito gratificante. Como não dei espaço entre um e outro, acho que seria bom eu tomar um ar antes de me lançar novamente nessa empreitada.

Seguindo os próprios passos que descrevo abaixo, resolvi separar alguns pontos que considero importantes.

<h3>Escrever é um processo iterativo e incremental</h3>

O texto não nasce pronto. As vezes uma coisa ou outra está pronta na sua cabeça, mas na hora de colocar no papel a coisa muda. Você esquece algumas partes, lembra de outras, muda a ordem.

O importante é que você coloque suas ideias no papel (ou no site), e depois releia com calma. Mostre para outras pessoas, peça opinião. Eu pensei em um texto por mais de dois anos e <a href="http://1up4dev.org/2013/02/programacao-funcional-com-javascript/">publiquei aqui</a> antes de adicionar no livro. O feedback dos leitores foi importantíssimo para que a versão final tivesse o mínimo de erros e o máximo de clareza possível.

<h3>Defina bem o seu público</h3>

Ao escrever sobre programação funcional em JavaScript, eu tinha bem claro quem é o leitor do 1up. Caso você não tenha definido quem será seu público e quais os requisitos necessários para que possam absorver seu conteúdo, você vai correr o risco de escrever um texto em aramaico para crianças de quarta série ou um texto de quarta série para doutores em línguas mortas. 

Pior ainda é quando se tenta abraçar a todos. Seus braços são curtos para abraçar o mundo e, no final, alguma coisa vai acabar caindo no chão.

<h3>Trace uma linha</h3>

Como o Manifesto Ágil profere, <i>responder a mudanças é mais importante do que seguir um plano</i>, o que não quer dizer que você não precisa de um plano. 

Eu costumo traçar um plano, seja como uma lista de tópicos, seja como um mindmap, e vou me guiando por ele até pegar o ritmo. Normalmente essa lista não permanece inalterada por mais de dois capítulos, mas ainda assim é importante você ter algo para te manter no caminho, por mais que esse caminho mude constantemente.

<h3>Concentre-se</h3>

Eu tenho problemas sérios de concentração, mas em algumas ocasiões consigo despejar quilos de texto ou código de uma única vez. Claro que uma revisão posterior é sempre bem vinda e necessária.

O problema são os culpados de sempre: família exigindo atenção (eles têm prioridade, não pense o contrário); Internet oferecendo todo o tipo de entretenimento; GTalk aberto e seus amigos ali, ao alcance dos dedos.

Escrever é um ato solitário. Lide com isso e concentre-se no que está fazendo.

<h3>Arranje tempo</h3>

"Eu não tenho tempo" é a desculpa preferida do procrastinador e do cara que quer que os outros acreditem que ele é muito ocupado.

Você tem tempo para conversar no GTalk, para acessar o 9gag, para ver os gols do Fantástico, mas nunca temos tempo para brincar com o filho, para conversar com a esposa (ou marido) ou para fazer aquela meia hora de esteira.

Um terço do meu livro foi escrito dentro de viagens em ônibus, táxis e aviões. Acho que produzi muito mais em uma hora de vôo até o Rio do que em uma tarde inteira jogada fora na frente do computador.

Quando você realmente quer fazer algo, o tempo aparece. Não ter tempo é uma outra forma de dizer "isso não é importante o suficiente para mim".

<h3>'Pronto' é melhor do que 'perfeito'</h3>

Depois do livro e do curso prontos e entregues, eu percebi coisas que poderia ter adicionado, frases que poderia ter mudado, assuntos que faltaram. Se existe a possibilidade de adicionar ou mudar, faça, mas não caia na armadilha de ficar polindo algo que já deveria estar em produção há tempos. 

Pronto é melhor do que perfeito e, não importa o quanto você tente, seu trabalho nunca vai ficar perfeito.

<h3>Divirta-se</h3>

Principalmente, divirta-se.

Conheci muitas pessoas que sabem muito mais do assunto que estou escrevendo do que eu, pessoas que deram excelentes sugestões, ideias e me ensinaram a escrever melhor. E em tudo isso eu me diverti, aprendi, aproveitei o momento.

Não se leve tão a sério. É apenas um texto, um post, um curso, um livro. A vida é bem mais do que isso.

Abraço]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1363</wp:post_id>
		<wp:post_date>2013-04-11 07:30:47</wp:post_date>
		<wp:post_date_gmt>2013-04-11 10:30:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>o-que-eu-aprendi-escrevendo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dicas"><![CDATA[dicas]]></category>
		<category domain="post_tag" nicename="escrevendo"><![CDATA[escrevendo]]></category>
		<category domain="post_tag" nicename="eu-dei-autografo-pela-primeira-vez-na-minha-vida-e-eu-achei-estranho"><![CDATA[eu dei autógrafo pela primeira vez na minha vida e eu achei estranho]]></category>
		<category domain="category" nicename="projetos"><![CDATA[projetos]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="real-world"><![CDATA[real world]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[If you enjoyed this post, please consider <a href="#comments">leaving a comment</a> or <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">subscribing to the <abbr title="Really Simple Syndication">RSS</abbr> feed</a> to have future articles delivered to your feed reader.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1760602417]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Novos rumos</title>
		<link>http://1up4dev.org/2013/04/novos-rumos/</link>
		<pubDate>Mon, 01 Apr 2013 15:00:51 +0000</pubDate>
		<dc:creator>pbalduino</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1368</guid>
		<description></description>
		<content:encoded><![CDATA[Depois de um 2012 movimentado, resolvi tirar minha certificação PMI e, a partir de hoje, trabalho como gerente da fábrica de software de uma conhecida consultoria, líder de mercado. 

Pretendo aplicar, de maneira holística, processos definidos e reproduziveis que performem de maneira out of box a sinergia entre o levantamento de requisitos, desenvolvimento no chão de fábrica e posterior envio ao setor de testes, visando a garantia de qualidade do entregável. 

=) ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1368</wp:post_id>
		<wp:post_date>2013-04-01 12:00:51</wp:post_date>
		<wp:post_date_gmt>2013-04-01 15:00:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>novos-rumos</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="april-1st"><![CDATA[april 1st]]></category>
		<category domain="category" nicename="cascata"><![CDATA[cascata]]></category>
		<category domain="category" nicename="novidades-da-semana"><![CDATA[novidades da semana]]></category>
		<category domain="category" nicename="processos"><![CDATA[processos]]></category>
		<category domain="category" nicename="waterfall"><![CDATA[waterfall]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[If you enjoyed this post, please consider <a href="#comments">leaving a comment</a> or <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">subscribing to the <abbr title="Really Simple Syndication">RSS</abbr> feed</a> to have future articles delivered to your feed reader.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1759078585]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3170</wp:comment_id>
			<wp:comment_author><![CDATA[Anderson]]></wp:comment_author>
			<wp:comment_author_email>andycds@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://software.pro.br</wp:comment_author_url>
			<wp:comment_author_IP>200.229.18.130</wp:comment_author_IP>
			<wp:comment_date>2013-04-05 17:53:57</wp:comment_date>
			<wp:comment_date_gmt>2013-04-05 20:53:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[O melhor 01/04 que eu já li.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3166</wp:comment_id>
			<wp:comment_author><![CDATA[Humberto]]></wp:comment_author>
			<wp:comment_author_email>humberto.bulhoes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.125.154.115</wp:comment_author_IP>
			<wp:comment_date>2013-04-03 16:43:00</wp:comment_date>
			<wp:comment_date_gmt>2013-04-03 19:43:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Felicitações, Plínio. Só o re-empoderamento do gestor nos salvará do mundo de perversões do agilismo. PMBOK nessa gente! E viva 1º de Abril, palco de tantas revoluções.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3165</wp:comment_id>
			<wp:comment_author><![CDATA[Lucas Carvalho]]></wp:comment_author>
			<wp:comment_author_email>lucas.com@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://lucascarvalho.com.br</wp:comment_author_url>
			<wp:comment_author_IP>189.91.145.233</wp:comment_author_IP>
			<wp:comment_date>2013-04-03 00:08:08</wp:comment_date>
			<wp:comment_date_gmt>2013-04-03 03:08:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Boa sorte na nova empreitada.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>A melhor linguagem de programação</title>
		<link>http://1up4dev.org/2013/05/a-melhor-linguagem-de-programacao/</link>
		<pubDate>Mon, 06 May 2013 10:00:44 +0000</pubDate>
		<dc:creator>pbalduino</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1386</guid>
		<description></description>
		<content:encoded><![CDATA[Eu tenho a felicidade de ter um sogro que trabalha com desenvolvimento de softwares. Ele tem a experiência de já ter sido empresário e de já ter visto de quase tudo nessa área.

Atualmente ele está trabalhando em um projeto para Web e comentou que está dando preferência a uma ferramenta proprietária que eu particularmente não gosto.

Numa conversa que achei muito produtiva, nós concordamos que, independente de gostar ou não, "software é bola na rede", onde o importante é entregar o produto, atendendo as necessidades do cliente no menor tempo possível.

Eu trabalhei com PHP por dez anos, com Delphi por seis e estou indo para oito com Java, usando diariamente cada uma dessas linguagens. Já tive experiências com C e trabalho há anos com Ruby e JavaScript, atualmente tenho me concentrado em Clojure e, gostando mais de umas e menos de outras, conheço as forças e fraquezas de cada uma delas.

No final das contas, eu gosto da analogia de que o nosso trabalho se assemelha ao de um carpinteiro/marceneiro (desculpe, mas eu não sei muito bem a diferença entre ambos). Esses profissionais usam várias ferramentas para chegar ao produto final e, ao invés de perderem tempo em fóruns e discussões, eles buscam as ferramentas adequadas a cada tipo de tarefa, buscando entregar o melhor produto no menor tempo e menor custo (entenda 'melhor produto' como algo totalmente subjetivo).

Linguagens de programação são meras ferramentas, assim como serrotes, limas, martelos e sei lá que outras ferramentas os profissionais da madeira usam.

Assim sendo, o que é melhor? SASS, SCSS, LESS ou CSS puro? HAML ou ERB? A melhor é aquela que trouxer menos dor de cabeça, custo e tempo de desenvolvimento. Avalie com cautela aquilo que "está na moda" ou "que é o padrão de mercado" e escolha o que for melhor para o que você precisa, usando argumentos técnicos e financeiros, e deixando a paixão de lado.

Aprenda a sua linguagem de trabalho a fundo, e procure conhecer alternativas. Ao me tornar um bom desenvolvedor  Ruby, eu aprendi a escrever um código Java melhor. Ao entender LISP, eu me tornei mais produtivo em JavaScript.

Quando for escrever ou comentar algo do tipo "Porque PHP fede", ou perguntar num fórum "O que é melhor: PL/I ou FORTRAN 66?", procure estudar mais, entender que nem todo mundo vive a mesma realidade que você e mesmo, algumas vezes, nem todo mundo tem o interesse em aprender tanto quanto você.

Às vezes, o que o outro desenvolvedor quer é apenas entregar o trabalho, receber o pagamento e ir para casa.

P.S.: de qualquer maneira, se você quiser e puder, aprenda o máximo de linguagens que conseguir. Eu acho divertido, e profissionalmente é algo que tem me dado bons resultados.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1386</wp:post_id>
		<wp:post_date>2013-05-06 07:00:44</wp:post_date>
		<wp:post_date_gmt>2013-05-06 10:00:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-melhor-linguagem-de-programacao</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="pragmatismo"><![CDATA[pragmatismo]]></category>
		<category domain="category" nicename="questionamento"><![CDATA[questionamento]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="real-world"><![CDATA[real world]]></category>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[If you enjoyed this post, please consider <a href="#comments">leaving a comment</a> or <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">subscribing to the <abbr title="Really Simple Syndication">RSS</abbr> feed</a> to have future articles delivered to your feed reader.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1757821096]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[QuickTips] Usando Shell Script como suite de teste</title>
		<link>http://1up4dev.org/2013/06/quicktips-usando-shell-script-como-suite-de-teste/</link>
		<pubDate>Thu, 27 Jun 2013 12:42:18 +0000</pubDate>
		<dc:creator>rogerbarreto</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1392</guid>
		<description></description>
		<content:encoded><![CDATA[Indo na linha do programador pragmático, às vezes, dependendo do time ou linguagem do projeto, é muito mais prático usar shell script para testar. Recentemente resolvi usar esta abordagem, e cheguei no seguinte "template" em shell script para testar uma API Server.

Dependências:
<ul>
	<li>bash</li>
	<li>curl</li>
</ul>
Foi testado no Ubuntu 13.04.

Obs: Vou embedar <a title="Using Shell Script to test your server" href="https://gist.github.com/rogerleite/5869576">este gist</a>, e pode ser que não apareça no seu reader ;D.

Obs2: Este post é uma versão pt-br deste post no coderwall <a title="Using Shell Script to test your server" href="https://coderwall.com/p/nsso8w">Using Shell Script to test your server</a>.

<script src="https://gist.github.com/rogerleite/5869576.js"></script>

Referências:

<a title="Unit-Testable Shell Scripts" href="http://eradman.com/posts/ut-shell-scripts.html">Unit-Testable Shell Scripts</a>

Aguardo dicas, sugestões, experiências etc.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1392</wp:post_id>
		<wp:post_date>2013-06-27 09:42:18</wp:post_date>
		<wp:post_date_gmt>2013-06-27 12:42:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quicktips-usando-shell-script-como-suite-de-teste</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="curl"><![CDATA[curl]]></category>
		<category domain="post_tag" nicename="desenvolvimento"><![CDATA[desenvolvimento]]></category>
		<category domain="post_tag" nicename="http"><![CDATA[http]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="post_tag" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<category domain="category" nicename="real-world"><![CDATA[real world]]></category>
		<category domain="post_tag" nicename="shell-script"><![CDATA[shell script]]></category>
		<category domain="post_tag" nicename="spec"><![CDATA[spec]]></category>
		<category domain="post_tag" nicename="unit-test"><![CDATA[unit test]]></category>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[Se você curtiu (ou não) o post, nos ajude <a href="#comments">deixando um comentário</a> ou <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">assinando nosso <abbr title="Really Simple Syndication">RSS</abbr> feed</a> para receber nossos futuros posts. Valeu!]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1762479665]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Entendendo LISP, finalmente.</title>
		<link>http://1up4dev.org/2013/07/entendendo-lisp-finalmente/</link>
		<pubDate>Sun, 14 Jul 2013 14:35:31 +0000</pubDate>
		<dc:creator>pbalduino</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1400</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>A sintaxe invertida</h2>

Ao olhar um código LISP pela primeira vez, você se assusta.

Eu me assustei e não havia ninguém para me ajudar a entender.

Que bom que você está lendo isto para entender bem depressa e perder o medo.

Acredite ou não, o LISP não é invertido: as outras linguagens é que são inconsistentes.

Matematicamente falando, funções são expressas dessa forma:

<pre lang="javascript">y = f(x)</pre>

Para calcularmos o dobro de um número, teríamos:

<pre lang="javascript">y = dobro(21)</pre>

Note que estamos usando uma notação diferente: primeiro vem o operador dobro e, em seguida, vem o operando, ou parâmetro, 21. Chamamos isso de notação prefixa.

Já para executar um cálculo matemático, usamos a forma abaixo:

<pre lang="javascript">y = 21 * 2</pre>

Primeiro temos um operador 21, depois temos um operando responsável pela multiplicação e, finalmente, o segundo operando 2. Chamamos essa forma de notação infixa.

Nota: se você é um desenvolvedor Ruby, ignore essa última expressão. Em Ruby o cálculo acima utiliza internamente a notação prefixa onde 21 é um objeto, * é um método (ou uma mensagem, se preferir) e 2 é um parâmetro.

A coisa fica bagunçada quando misturamos as duas formas:

<pre lang="javascript">y = dobro(7 * 3)</pre>

Na expressão acima misturamos notação prefixa com infixa. Não há problema algum com isso, mas não é um bom exemplo de consistência.

Quando falamos em LISP, o primeiro item de uma lista é um operador e todos os demais são operandos.

Todo operador é uma função, macro ou forma especial, inclusive os operadores matemáticos. Não se preocupe em entender agora o que são macros ou formas especiais. Todo o resto da lista é considerado um valor, parâmetro ou operando.

Imagine agora que o símbolo <code>+</code> é uma função. Para calcularmos uma soma usaríamos o seguinte código:

<pre lang="javascript">+(1, 2)</pre>

Movendo os parênteses e removendo as vírgulas, a nossa soma inicial ficaria:

<pre lang="clojure">(+ 1 2)</pre>

Sabemos que dobro também é uma função. Para calcular dobro, usaríamos:

<pre lang="clojure">(dobro 12)</pre>

Percebam que agora temos uma regra que se aplica a todos os casos. Repetindo a expressão acima que mistura as notações infixa e prefixa usando as regras do LISP, teríamos:

<pre lang="clojure">(dobro (+ 7 3))</pre>

Talvez pela sua origem acadêmica e fortemente influenciada pela matemática, as implementações de LISP levam muito a sério a questão da consistência.

<h2>Os parênteses</h2>

Quando eu estava na quarta série, aprendi uma coisa chamada <em>expressão numérica</em>, que consistia em resolver um cálculo extenso atacando um pedaço por vez, organizadamente.

Cada pedaço desse cálculo ficava dentro de parênteses, colchetes ou chaves, dependendo do quão aninhado estivesse a expressão. Eu nunca mais vi esse tipo de hierarquia,  mas era um jeito bacana de manter a organização.

Uma expressão numérica tem essa cara:

<pre lang="javascript">x = {1 + [3 * (5 + 7)]}</pre>

Resolvemos a expressão de dentro para fora:

<pre lang="javascript">x = {1 + [3 * (12)]}

x = {1 + [36]}

x = {37}

x = 37</pre>
Simples, não?

Agora vamos extrapolar o que aprendemos na quarta série para uma linguagem de programação, trocando chaves e colchetes por parênteses:

<pre lang="javascript">x = (1 + (3 * (5 + 7)))</pre>

Vamos substituir a nossa conhecida notação infixa pela prefixa.

<pre lang="clojure">x = (+ 1 (* 3 (+ 5 7)))</pre>

Pronto. Você tem uma expressão numérica com a cara do LISP, resolvendo da forma como a professora ensinou lá na quarta série: primeiro você resolve os parênteses de dentro, depois os próximos, até terminar.

Qualquer LISP que você encontrar pela frente, incluindo o Clojure, funciona exatamente dessa maneira.

Uma vantagem que isso traz é que você não precisa ficar se preocupando com precedência de operadores.

Imagine que você tem o código abaixo:

<pre lang="javascript">x = 3 * 2 + 1

y = 1 + 2 * 3</pre>

Os valores de x e y serão iguais? Sim, ambas as variáveis contém o número 7, mas para saber disso você precisou ler em algum outro lugar que o operador de multiplicação tem precedência sobre o operador de adição. É algo que você espera que seja assim e age como se realmente fosse.

E o que aconteceria se você estiver usando uma linguagem em que a adição tem precedência sobre a multiplicação? Ou pior ainda: os operadores são executados da esquerda para a direita conforme forem aparecendo.

No primeiro caso, x e y continuariam sendo igual, mas ambos teriam o valor 9. No segundo caso, x seria igual a 7 e y seria igual a 9.

Seria mais fácil se as expressões fossem escritas assim:

<pre lang="javascript">x = (3 * 2) + 1

y = 1 + (2 * 3)</pre>

Agora está claro para qualquer pessoa o que vai ser executado primeiro, independente do modo como a expressão seja interpretada pela linguagem. Pois saiba que é exatamente assim que um LISP trabalha. Usando a notação prefixa, as expressões acima ficariam:

<pre lang="clojure">x = (+ (* 3 2) 1)

y = (+ 1 (* 3 2))</pre>

Primeiro será executada a multiplicação, que está nos parênteses mais internos e, em seguida, será executada a adição. Tudo isso sem se preocupar com regras ocultas ou peculiaridades do compilador.

Qualquer código em qualquer dialeto LISP, mesmo com suas características particulares, fica fácil de entender se você lembrar dessas regrinha.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1400</wp:post_id>
		<wp:post_date>2013-07-14 11:35:31</wp:post_date>
		<wp:post_date_gmt>2013-07-14 14:35:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>entendendo-lisp-finalmente</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="clojure"><![CDATA[clojure]]></category>
		<category domain="category" nicename="lisp"><![CDATA[lisp]]></category>
		<category domain="post_tag" nicename="lisp"><![CDATA[lisp]]></category>
		<category domain="category" nicename="quick-tips"><![CDATA[quick tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[If you enjoyed this post, please consider <a href="#comments">leaving a comment</a> or <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">subscribing to the <abbr title="Really Simple Syndication">RSS</abbr> feed</a> to have future articles delivered to your feed reader.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[entendend-lisp]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1758090560]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Extendendo Ruby com C - Só um aperitivo</title>
		<link>http://1up4dev.org/2013/08/extendendo-ruby-com-c-so-um-aperitivo/</link>
		<pubDate>Mon, 19 Aug 2013 17:29:56 +0000</pubDate>
		<dc:creator>tonyfabeen</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1410</guid>
		<description></description>
		<content:encoded><![CDATA[Extender Ruby em C não é complicado. É claro, você deve ao menos ter o conhecimento básico da linguagem C.

Vamos criar uma extensão que retorna uma simples String.

Primeiramente criamos o diretório onde estará nossa extensão :
<pre>  <code>$ mkdir &lt;your_path&gt;/1up4dev</code></pre>
Crie um arquivo chamado <strong>1up4dev.c </strong>e dentro dele inclua o header "<strong>ruby.h"</strong>
<pre>  <code>#include &lt;ruby.h&gt;</code></pre>
Tudo em Ruby relaciona-se com o tipo <strong>VALUE</strong>. Para nosso exemplo, vamos criar um <strong>VALUE m1up4dev</strong> representando um módulo.
<pre><code>VALUE m1up4dev;</code></pre>
E para representar uma classe, abaixo deste módulo, a qual chamaremos de Talker, criaremos uma <strong>VALUE cTalker</strong>:
<pre><code>VALUE cTalker;</code></pre>
Nossa classe <strong>Talker</strong> precisa fazer algo, vamos adicionar uma simples função que retorna uma String.
<pre><code>static VALUE say_yeah(VALUE self){
  const char *sentence= "YEAH YEAH!";
  return rb_str_new2(sentence);
}

</code></pre>
Na função <strong>say_yeah</strong>, <strong>VALUE self</strong> representa o objeto associado a função, <strong>sentence</strong> a String de retorno e a função <strong>rb_str_new2</strong> converte o <strong>*char </strong>em uma <strong>Ruby String</strong>.

Para deixar esse código acessível no mundo Ruby, criaremos uma função chamada '<strong>Init_1up4dev</strong>'. Por convenção estas funções sempre começam com o prefixo '<strong>Init_</strong>'.
<pre><code>void Init_1up4dev(){
  m1up4dev = rb_define_module("1up4dev");
  cTalker = rb_define_class_under(m1up4dev, "Talker", rb_cObject);
  rb_define_singleton_method(cTalker, "say_yeah", say_yeah, 0);
}

</code></pre>
A função '<strong>rb_define_module</strong>' define um módulo no topo da hierarquia. Algo como :
<pre><code>module 1up4dev
end

</code></pre>
A função '<strong>rb_define_class_under</strong>' define uma classe abaixo de um módulo ou outra classe. Isso irá gerar :
<pre><code>module 1up4dev
  class Talker

  end
end

</code></pre>
A função '<strong>rb_define_singleton_method</strong>' é responsável por criar um método singleton em uma classe ou módulo, neste caso ele estará atrelado a class Talker.

Para rodar nosso exemplo, crie um arquivo chamado '<strong>extconf.rb</strong>' contendo :
<pre><code>
require 'mkmf'
create_makefile('1up4dev')

</code></pre>
Executando o script, irá ser gerado um arquivo <strong>Makefile</strong> para executar o build da extensão .
<pre><code>$ ruby extconf.rb
</code></pre>
Compile e instale a extensão :
<pre><code>$ make &amp;&amp; make install
</code></pre>
Para ver o código funcionando basta digitar o código abaixo em um '<strong>irb</strong>' ou algo do gênero :
<pre><code>$irb(main):001:0&gt; require '1up4dev'
true
$irb(main):002:0&gt; 1up4dev::Talker.say_yeah
"YEAH YEAH!"

</code></pre>
YEAH YEAH !!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1410</wp:post_id>
		<wp:post_date>2013-08-19 14:29:56</wp:post_date>
		<wp:post_date_gmt>2013-08-19 17:29:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>extendendo-ruby-com-c-so-um-aperitivo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Introdução a Linux Control Groups (CGroups)</title>
		<link>http://1up4dev.org/2013/08/introducao-a-linux-control-groups-cgroups/</link>
		<pubDate>Thu, 22 Aug 2013 17:32:23 +0000</pubDate>
		<dc:creator>tonyfabeen</dc:creator>
		<guid isPermaLink="false">http://1up4dev.org/?p=1425</guid>
		<description></description>
		<content:encoded><![CDATA[Em tempos <strong>Metodologias Àgeis</strong>, iniciativas como <strong><a href="http://en.wikipedia.org/wiki/DevOps">DevOps</a></strong>, adoção de <strong>Cloud Computing</strong> e derivados <strong>(SaaS, IaaS e PaaS)</strong>, aplicações que demorariam meses, senão anos para estar na <strong>www</strong>, hoje em questão de dias, e por que não horas, é possível estar disponíveis ao usuário final.

Com a necessidade de ter os aplicativos de forma mais rápida em produção, a adoção e criação de <strong><a href="http://en.wikipedia.org/wiki/Platform_as_a_service">PaaS (Platform as A Service)</a></strong> tem sido a nova "<em>onda do verão</em>" e tecnologias como <strong><a href="http://lxc.sourceforge.net/">LXC</a></strong>, <strong><a href="http://www.docker.io/">Docker</a> </strong>e <strong><a href="http://en.wikipedia.org/wiki/Cgroups">CGroups</a></strong> atuam como o cerne dessa "wave".
<h3>O que são CGroups ?</h3>
<strong>CGroups</strong> é uma feature do Kernel que provê mecanismos para organização de Processos em forma de grupos e limita recursos de máquina como Consumo de CPU, memória e I/O para estes.

Curioso pra ver como funciona ?
<h3>Situação de Exemplo</h3>
Para este exemplo teremos duas aplicações <em><a href="https://gist.github.com/tonyfabeen/6310137">Sinatra</a></em> e nosso objetivo será dedicar um grupo para cada aplicação limitando o consumo de memória para cada uma elas.

Para rodar o exemplo estarei utilizando um <em>Ubuntu 12.04 64 bits.</em>
<h4>Pré-Requisitos</h4>
Antes de mais nada precisamos instalar algumas dependências:
<pre style="font-family: Andale Mono, Lucida Console, Monaco, fixed, monospace;color: #000000;background-color: #eee;font-size: 12px;border: 1px dashed #999999;line-height: 14px;padding: 5px;overflow: auto;width: 100%"><code>sudo apt-get install cgroup-bin libcgroup1
</code></pre>
Com a instalação dos pacotes acima veremos que um novo filesystem foi montado em <strong>/sys/fs/cgroup </strong>.
<pre style="font-family: Andale Mono, Lucida Console, Monaco, fixed, monospace;color: #000000;background-color: #eee;font-size: 12px;border: 1px dashed #999999;line-height: 14px;padding: 5px;overflow: auto;width: 100%"><code>ls -al /sys/fs/cgroup

drwxr-xr-x 7 root root 140 Aug  6 09:38 .
drwxr-xr-x 6 root root   0 Aug  6 09:37 ..
drwxr-xr-x 6 root root   0 Aug  6 09:38 cpu
drwxr-xr-x 6 root root   0 Aug  6 09:38 cpuacct
drwxr-xr-x 6 root root   0 Aug  6 09:38 devices
drwxr-xr-x 6 root root   0 Aug  6 09:38 freezer
drwxr-xr-x 6 root root   0 Aug  6 09:38 memory

</code></pre>
CGroups estão organizados por subsistemas conhecidos também como "resource controllers" responsáveis por gerenciar memória, cpu, dispositivos, entre outras coisas. Na organização acima cada diretório representa um <strong>Resource Controller</strong>.
<h4>CGConfig Service</h4>
Para gerenciar CGroups iremos utilizar a utilitário <em>cgconfig</em> instalado como o pacote <em>libcgroup1</em>. É interessante checar se o serviço está rodando antes de continuar :
<pre style="font-family: Andale Mono, Lucida Console, Monaco, fixed, monospace;color: #000000;background-color: #eee;font-size: 12px;border: 1px dashed #999999;line-height: 14px;padding: 5px;overflow: auto;width: 100%"><code>$ sudo service cgconfig status</code></pre>
Caso não esteja inicie o serviço
<pre style="font-family: Andale Mono, Lucida Console, Monaco, fixed, monospace;color: #000000;background-color: #eee;font-size: 12px;border: 1px dashed #999999;line-height: 14px;padding: 5px;overflow: auto;width: 100%"><code>$ sudo service cgconfig start</code></pre>
Existem duas formas de configurar CGroups com cgconfig, diretamente no arquivo de configuração <strong>/etc/cgconfig.conf'</strong> ou via linha de comando, que será o meio que iremos utilizar.
<h4>Criando Grupos</h4>
Para criar um grupo, utilizamos o comando <strong>cgcreate</strong> passando como argumento quais controllers estarão associados a ele.
<pre style="font-family: Andale Mono, Lucida Console, Monaco, fixed, monospace;color: #000000;background-color: #eee;font-size: 12px;border: 1px dashed #999999;line-height: 14px;padding: 5px;overflow: auto;width: 100%"><code>sudo cgcreate -g cpu,cpuacct,devices,memory,freezer:/sinatra1
sudo cgcreate -g cpu,cpuacct,devices,memory,freezer:/sinatra2
</code></pre>
O argumento <strong>/sinatra*</strong> indica o caminho relativo do grupo dentro de cada Resource Controller. Ex : <strong>/sys/fs/cgroup/&lt;resource_controller&gt;/&lt;path&gt;</strong>
<h3>Executando programas em um Grupo</h3>
Para executar determinado processo em um grupo utilizamos o comando <strong>cgexec</strong> passando como argumentos quais controllers estarão associados ao processo e o caminho do grupo que ele estará associado.
<pre style="font-family: Andale Mono, Lucida Console, Monaco, fixed, monospace;color: #000000;background-color: #eee;font-size: 12px;border: 1px dashed #999999;line-height: 14px;padding: 5px;overflow: auto;width: 100%"><code>sudo cgexec -g *:/sinatra1 sh -c 'cd &lt;path_to_sinatra1&gt; &amp;&amp; exec rackup -p 4567 -D'
sudo cgexec -g *:/sinatra2 sh -c 'cd &lt;path_to_sinatra2&gt; &amp;&amp; exec rackup -p 4568 -D'
</code></pre>
O asterisco <strong>(*)</strong> acima significa que o processo estará associado a todos os controllers.

Para checar a hierarquia criada:
<pre style="font-family: Andale Mono, Lucida Console, Monaco, fixed, monospace;color: #000000;background-color: #eee;font-size: 12px;border: 1px dashed #999999;line-height: 14px;padding: 5px;overflow: auto;width: 100%"><code>ps xawf -eo pid,cgroup,args | grep ruby
 1476              \_  5:freezer:              \_ grep --color=auto ruby
 1418  5:freezer:/sinatra1?4:memo /usr/bin/ruby1.9.1 /usr/local/bin/rackup -p 4567 -D
 1454  5:freezer:/sinatra2?4:memo /usr/bin/ruby1.9.1 /usr/local/bin/rackup -p 4568 -D
</code></pre>
Para setar os valores em determinado controller utilizamos o comando <strong>cgset</strong>. No caso abaixo estamos limitando o consumo de memória para o grupo <strong>sinatra1</strong> em <strong>256MB</strong> e para o grupo <strong>sinatra2</strong> em <strong>128MB</strong>.
<pre style="font-family: Andale Mono, Lucida Console, Monaco, fixed, monospace;color: #000000;background-color: #eee;font-size: 12px;border: 1px dashed #999999;line-height: 14px;padding: 5px;overflow: auto;width: 100%"><code>sudo cgset -r memory.limit_in_bytes='256M' sinatra1
sudo cgset -r memory.limit_in_bytes='128M' sinatra2
</code></pre>
Para checar a alteração :
<pre style="font-family: Andale Mono, Lucida Console, Monaco, fixed, monospace;color: #000000;background-color: #eee;font-size: 12px;border: 1px dashed #999999;line-height: 14px;padding: 5px;overflow: auto;width: 100%"><code>cat /sys/fs/cgroup/memory/sinatra1/memory.limit_in_bytes
cat /sys/fs/cgroup/memory/sinatra2/memory.limit_in_bytes
</code></pre>
<h3>Conclusão</h3>
O intuito deste artigo foi demonstrar um dos possíveis usos de CGroups. Caso a aplicação <strong>sinatra1</strong> cair por estouro de memória ou alguma outra falha que não seja a destruição da máquina, a aplicação <strong>sinatra2 </strong>continuará funcionando.

Há mais a se explorar, poderíamos inserir limitação de I/O, consumo de banda, entre outras coisas. Poderíamos até criar nossa própria implementação de LXC, mas isso é assunto para um próximo encontro.

Os links abaixo exploram mais detalhes sobre o assunto :
<ul>
	<li><a href="https://www.kernel.org/doc/Documentation/cgroups/cgroups.txt">https://www.kernel.org/doc/Documentation/cgroups/cgroups.txt</a></li>
	<li><a href="http://linux.oracle.com/documentation/EL6/Red_Hat_Enterprise_Linux-6-Resource_Management_Guide-en-US.pdf">http://linux.oracle.com/documentation/EL6/Red_Hat_Enterprise_Linux-6-Resource_Management_Guide-en-US.pdf</a></li>
</ul>
Divirtam-se !]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1425</wp:post_id>
		<wp:post_date>2013-08-22 14:32:23</wp:post_date>
		<wp:post_date_gmt>2013-08-22 17:32:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introducao-a-linux-control-groups-cgroups</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>socialize_text</wp:meta_key>
			<wp:meta_value><![CDATA[If you enjoyed this post, please consider <a href="#comments">leaving a comment</a> or <a href="http://1up4dev.org/feed/" title="Syndicate this site using RSS">subscribing to the <abbr title="Really Simple Syndication">RSS</abbr> feed</a> to have future articles delivered to your feed reader.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>socialize</wp:meta_key>
			<wp:meta_value><![CDATA[1,2,17,18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1757163417]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3425</wp:comment_id>
			<wp:comment_author><![CDATA[Guilherme]]></wp:comment_author>
			<wp:comment_author_email>guilherme.kato@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>177.72.248.8</wp:comment_author_IP>
			<wp:comment_date>2013-08-22 14:57:39</wp:comment_date>
			<wp:comment_date_gmt>2013-08-22 17:57:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bem interessante. Já vejo logo uma boa aplicação para heavy users de Redis, que precisam de um data storage em memória. Sempre que mal usado acaba destruindo o server. Não é solução mas pelo menos o load da máquina fica estavel a ponto de você conseguir logar nela para resolver. Ae vezes nem isso é possível

É uma boa prática para ser implementada como DevOps sim. =D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
</channel>
</rss>
